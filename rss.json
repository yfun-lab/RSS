[{"title":"无垠 2022 年度总结","date":"2023-01-02 17:14:32","description":"\n<p>依然是忙碌的一年，晚了几天，2022 的年度总结终于还是写完了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2022 年 12 月 31 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,399 (<span>-9.2%</span>)，年 PV 55,460 (<span>-18.07%</span>)，日均 UV 72.33，平均停留时间 3分31秒 (<span>-1.4%</span>)，平均跳出率 60% (<span>-9.1%</span>)。一年有效文章数 1，新增评论 33 条 (<span>-69.72%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/blog.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/blog.jpg\" alt=\"\" width=\"800\" height=\"773\" class=\"aligncenter size-full wp-image-2677\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/blog.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/blog-300x290.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/blog-768x742.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>在八月 MDx 被 wpjam 推荐了，访问量有两天大幅上涨；在九月底十月初的几天似乎我的统计域名在大陆被临时屏蔽了，几乎没有获取到统计数据。</p>\n<p>2022 忙碌于进一步求学等事情，并没有更新太多文章，评论区也没有怎么维护，导致数据全部下滑。算上去年欠下的文章，实际上现在有五篇写了一半的文章在我的草稿箱里，希望可以尽快完成吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 1,734 (<span>-50.67%</span>)，总 PV 2,195 (<span>-44.13%</span>)，日均 UV 4.75，平均停留时间 49秒 (<span>-10.91%</span>)。访问的主要来源是知乎，WordPress.org 和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/axton.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/axton.jpg\" alt=\"\" width=\"800\" height=\"765\" class=\"aligncenter size-full wp-image-2678\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/axton.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/axton-300x287.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/axton-768x734.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据发生了大幅下滑。</p>\n<h2>MDx</h2>\n<p>很遗憾，尽管 MDx 得到了 wpjam 的推荐，2022 年 MDx 并没有得到我足够的关注。在这一年中，MDx 更新了 0 次，新增 3 commits。还是希望等这阵子忙完，明年可以把更多的时间花在维护 MDx 上，尽快更新新的版本。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<h1>2022 大事记</h1>\n<p>2022 真的做了很多事。不过由于年中手机损坏，丢失了半年的照片，下面的列表大概确实遗漏了几件事。2022 主要是把停滞了一阵子的摄影爱好重新捡了起来，但遗憾并没有在开源领域投入太多时间。希望 2023 年我可以进一步平衡不同事情上花的时间。</p>\n<ul>\n<li>三月：MDx 喜提 800 Stars</li>\n<li>四月：第二次前往爱丁堡，不经意拍下了我今年最喜欢的照片之一</li>\n<li>六月：在考试周期间用了三年的 OnePlus 7 Pro 突然暴毙，丢了一堆照片，滚去 iOS 了</li>\n<li>六月：第一次申请申根签证，贵（</li>\n<li>六月：第一次前往西班牙，热成傻逼（没写游记，懒）</li>\n<li>六月：第一次跳伞！（当然有教练带）</li>\n<li>六月：一个暑假同时做了一个实习和一个 Research，累成傻逼</li>\n<li>七月：第一次求到英国邮戳</li>\n<li>七月：迫于开发需求，狂暴购入 Pixel 6 一台，这下双持了</li>\n<li>七月：第一次跨国寄信</li>\n<li>八月：第一次前往法国，只在巴黎呆了两天</li>\n<li>八月：第一次前往瑞士，在少女峰下休息了三天，并第一次摔坏了镜头（详情见<a href=\"https://flyhigher.top/diary/2639.html\">这篇文章</a>）</li>\n<li>八月：然后阳了（</li>\n<li>八月：MDx 被 wpjam 推荐</li>\n<li>九月：卖了全部的摄影装备，然后第一次升级到全画幅（在 ebay 上捡漏的二手尼康 Z 6）</li>\n<li>九月：在威尔士拍到了我目前拍的最好的星空和银河</li>\n<li>十月：尽管胶片大涨价，但想拍反转胶片的心突然死灰复燃；胶片机不在身边，于是在 ebay 上从日本狂暴购入尼康 F80S 全自动胶片机，重新拍起了胶片</li>\n<li>十二月：MDx 喜提 900 Stars</li>\n<li>十二月：第二次前往瑞士，在马特洪峰下住了五天，拍了一堆照片，还在雪里打了滚（参阅上面的游记）</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-12-wm.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-12-wm.jpg\" alt=\"威尔士滕比的星空，我目前拍得最好的银河\" width=\"1523\" height=\"2500\" class=\"aligncenter size-full wp-image-2673\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-12-wm.jpg 1523w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-12-wm-183x300.jpg 183w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-12-wm-624x1024.jpg 624w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-12-wm-768x1261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-12-wm-936x1536.jpg 936w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-12-wm-1248x2048.jpg 1248w\" sizes=\"(max-width: 1523px) 100vw, 1523px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-6-5-wm.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-6-5-wm.jpg\" alt=\"西班牙圣家堂\" width=\"1667\" height=\"2500\" class=\"aligncenter size-full wp-image-2670\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-12-5-wm.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-12-5-wm.jpg\" alt=\"去看了飞机，胶片拍摄\" width=\"1707\" height=\"2500\" class=\"aligncenter size-full wp-image-2674\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-12-5-wm.jpg 1707w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-12-5-wm-205x300.jpg 205w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-12-5-wm-699x1024.jpg 699w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-12-5-wm-768x1125.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-12-5-wm-1049x1536.jpg 1049w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-12-5-wm-1398x2048.jpg 1398w\" sizes=\"(max-width: 1707px) 100vw, 1707px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2022/12/2022-12-9-wm.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2022/12/2022-12-9-wm.jpg\" alt=\"采尔马特的日落\" width=\"1584\" height=\"2500\" class=\"aligncenter size-full wp-image-2591\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2022/12/2022-12-9-wm.jpg 1584w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/2022-12-9-wm-190x300.jpg 190w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/2022-12-9-wm-649x1024.jpg 649w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/2022-12-9-wm-768x1212.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/2022-12-9-wm-973x1536.jpg 973w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/2022-12-9-wm-1298x2048.jpg 1298w\" sizes=\"(max-width: 1584px) 100vw, 1584px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2022/12/DSC_1705.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2022/12/DSC_1705.jpg\" alt=\"徒步最后变成在雪里打滚\" width=\"2400\" height=\"1554\" class=\"aligncenter size-full wp-image-2609\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2022/12/DSC_1705.jpg 2400w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/DSC_1705-300x194.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/DSC_1705-1024x663.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/DSC_1705-768x497.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/DSC_1705-1536x995.jpg 1536w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/DSC_1705-2048x1326.jpg 2048w\" sizes=\"(max-width: 2400px) 100vw, 2400px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-4-11-wm.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-4-11-wm.jpg\" alt=\"目前我最喜欢的照片，爱丁堡\" width=\"1633\" height=\"2500\" class=\"aligncenter size-full wp-image-2669\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-4-11-wm.jpg 1633w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-4-11-wm-196x300.jpg 196w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-4-11-wm-669x1024.jpg 669w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-4-11-wm-768x1176.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-4-11-wm-1003x1536.jpg 1003w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-4-11-wm-1338x2048.jpg 1338w\" sizes=\"(max-width: 1633px) 100vw, 1633px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2022/12/IMG_2403-scaled.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2022/12/IMG_2403-scaled.jpg\" alt=\"2022 我最喜欢的照片之一，瑞士格林德瓦\" width=\"1648\" height=\"2560\" class=\"aligncenter size-full wp-image-2628\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2022/12/IMG_2403-scaled.jpg 1648w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/IMG_2403-193x300.jpg 193w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/IMG_2403-659x1024.jpg 659w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/IMG_2403-768x1193.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/IMG_2403-989x1536.jpg 989w, https://acdn.flyhigher.top/wp-content/uploads/2022/12/IMG_2403-1319x2048.jpg 1319w\" sizes=\"(max-width: 1648px) 100vw, 1648px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-5-wm.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-5-wm.jpg\" alt=\"2022 我最喜欢的星空照片，威尔士滕比\" width=\"1750\" height=\"2500\" class=\"aligncenter size-full wp-image-2672\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-5-wm.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-5-wm-210x300.jpg 210w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-5-wm-717x1024.jpg 717w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-5-wm-768x1097.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-5-wm-1075x1536.jpg 1075w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/2022-9-5-wm-1434x2048.jpg 1434w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<h1>跨年红包</h1>\n<p>最近实在太忙，请容许我摸一摸。我知道去年的题解甚至都还没有发布，我会尽量赶在春节前发布去年题解并更新今年的谜题。</p>\n<h1>跨年海报</h1>\n<p>还是传统艺能，今年的海报只用到了 PS，胡乱整了点。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/26.jpg\"><img decoding=\"async\" loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/26.jpg\" alt=\"\" width=\"2500\" height=\"1768\" class=\"aligncenter size-full wp-image-2664\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2023/01/26.jpg 2500w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/26-300x212.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/26-1024x724.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/26-768x543.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/26-1536x1086.jpg 1536w, https://acdn.flyhigher.top/wp-content/uploads/2023/01/26-2048x1448.jpg 2048w\" sizes=\"(max-width: 2500px) 100vw, 2500px\"></a>\n<p>那么祝各位（迟到的）2023 年快乐！</p>\n","link":"https://flyhigher.top/diary/2662.html"},{"title":"幕后 | 一款热门三消游戏的背后：对话 3 Tiles 开发团队","date":"2023-01-02 07:00:39","description":"少数派联系到了热门 3 消游戏作品 3 Tiles 的开发团队 Appsulove，和他们一起探讨了对于如何做好一款游戏的诸多经验与见解，以及对于众多模仿者的相关看法。<a href=\"https://sspai.com/post/77575\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77575"},{"title":"如何评价动画《大理寺日志》第二季第八集？","date":"2023-01-01 09:07:11","description":"\n<p data-pid=\"srJwS0Px\">大家好，我是大理寺日志的导演槐佳佳，很高兴在2022年的最后一天可以在知乎这个平台继续跟大家分享制作时的心路历程。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3a6ddf6283523bec05660b56c33da66b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-3a6ddf6283523bec05660b56c33da66b\" data-watermark-src=\"v2-cc784e10f2314ffdded42edb54d5ec54\" data-private-watermark-src=\"v2-e9b8a3e1fd883dff45d02c16bdfd8aef\"></p>\n<p data-pid=\"uFBDnrPJ\">相信看了第八集的观众朋友们应该对少卿的再度猫化以及孙豹脑内的恋爱剧情是有很深刻印象的。这些表达一部分是为了继续给予第二季一些轻快活泼的元素，一部分可以理解为暴风雨前的宁静祥和。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b896008df6061067b424aa89e910f4c7_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-b896008df6061067b424aa89e910f4c7\" data-watermark-src=\"v2-0c5d4ecfb170ad9c1799f2d436ae8c6f\" data-private-watermark-src=\"v2-9b2c4677e56a02a144e383b868b46b0c\"></p>\n<p data-pid=\"DK3IajRj\">在入地牢之前，陈拾的一段对白是可以串联第三集中二人去博州路上的艰辛，陈拾作为少卿的随身书吏，他对于少卿的关心和照顾，经历了很多困难亲眼看到了博州的惨状后，以为回洛阳可以严惩丘神纪，但是却又要去地牢的那种为少卿不平的心理。而卢大人说凡事做大事的人，就不能太计较得失。有时候，甚至连个人的荣辱也得放下。你穿着这身官府就得明白这个道理。这句话也不仅仅是在对陈拾进行说教。</p>\n<p><img src=\"https://pica.zhimg.com/v2-bbf19124316841a7b66d882de11a23e0_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-bbf19124316841a7b66d882de11a23e0\" data-watermark-src=\"v2-2430335c7cb0818d2d3b47dcf8fce32d\" data-private-watermark-src=\"v2-472c32083743397c3a364b7501f306cb\"></p>\n<p data-pid=\"dzyCENcB\">众所周知，大理寺如果不画一些少卿没吃药的环节，就会觉得少了一点什么。所以我们制作这段戏的时候，想的是如何超越第一季的“闹猫”画面，希望大家可以喜欢吧。同样，比较中性的太平公主在这一集里与孙豹的交集，会让大家看到太平心中比较少女比较柔软的一面。然后孙豹脑内的伊甸园画面以及去询问姻缘是我们想着重强调孙豹这种男生对于喜欢的女生的反应，用这种反应做出反差视觉，让观众看完可以留下更多印象。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b24045f9caee6e238b1528ed228c2ca9_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-b24045f9caee6e238b1528ed228c2ca9\" data-watermark-src=\"v2-0ff91cbe6dac4e0aa925560f20e3c217\" data-private-watermark-src=\"v2-b0888f99c1451347a53dc987fafb5f39\"></p>\n<p data-pid=\"tS52kMuD\">借用微博用户给我们的一句留言，“杀我别用小包刀”。对于回忆里，丘神纪与小李包的过往在第八集里是铺垫，是交代一些过去的事情，给大家明晰出一条情感线。后续会给出一个属于这段情感的答案。</p>\n<p><img src=\"https://picx.zhimg.com/v2-5a32ac9814acbf112bd2172a25b2bdfa_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-5a32ac9814acbf112bd2172a25b2bdfa\" data-watermark-src=\"v2-a394644b8d1bb9f74fc7daaf858014a0\" data-private-watermark-src=\"v2-0aca8b95a50dd5c7cac5d0481b0fb906\"></p>\n<p data-pid=\"OhYCLHzI\">希望大家可以继续支持好传支持大理寺日志，2022年要过去了，我们2023年第9集再见吧。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/hadj-46?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">槐佳佳</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/575907778/answer/2823953519?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">1 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/571607535?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《大理寺日志》第二季第五集？</a><br><a href=\"http://www.zhihu.com/question/574344418?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《大理寺日志》第二季第七集？</a><br>\n","link":"http://www.zhihu.com/question/575907778/answer/2823953519?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"设计实战分析：用两天完成一次线下活动的物料设计","date":"2023-01-01 09:06:28","description":"我们在直播回放视频的基础上，为各位整理了内容梗概和知识点，配合时间戳可在视频中直接找到相应内容。<p>[......]</p>\n<a href=\"https://sspai.com/post/77572\" target=\"_blank\">查看全文</a><p>本文为付费栏目文章，出自<a href=\"https://sspai.com/series/269\" target=\"_blank\">《100 小时后请叫我设计师》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/post/77572"},{"title":"少数派 2022 年度征文：高分创作，年度悬赏","date":"2022-12-31 16:00:00","description":"最高 10 倍稿酬相送，悬赏好文章。<a href=\"https://sspai.com/post/77562\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77562"},{"title":"旧手机的智能家居新使命：如何用 Notifya 把好门关","date":"2022-12-31 07:00:00","description":"所以除了把旧手机交给 Apple 来「免费回收」，给它们充上电、在「力所能及」的场景里继续发光发热也是一个值得思考的方案。<a href=\"https://sspai.com/post/77556\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77556"},{"title":"本周看什么 | 最近值得一看的一大串作品","date":"2022-12-30 09:37:13","description":"☕️TL;DR近期佳作推荐：[电影]穿靴子的猫2、[港剧]廉政狙击、[国产]回来的女儿、[日剧]噬亡村、[电影]6/45、[电影]犬王、[英剧]平摊公寓、[英剧]SAS：叛逆勇士第一季、[意大利]坏人 ...<a href=\"https://sspai.com/post/77554\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77554"},{"title":"行尽白云云里路，满身还带白云归：我的日本行经验分享","date":"2022-12-30 08:00:00","description":"本篇文章写于 2022 年 12 月的日本旅游后的经验总结分享，主要关于一些实际旅行体验中前期攻略没有覆盖到的点，希望能给后来的人提供更多的信息。<a href=\"https://sspai.com/post/77549\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77549"},{"title":"即将到来的 2023，希望你与少数派都能一切「如常」","date":"2022-12-30 07:23:38","description":"用自己的热爱对抗压力，消解负面情绪，我们带着 OPPO Find N2 开了场「露营音乐会」。<a href=\"https://sspai.com/post/77541\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77541"},{"title":"这些好物和小技巧，让我保持数字健康","date":"2022-12-30 06:30:00","description":"数字健康是近年来逐步在国内流行起来的概念，也是许多小伙伴们在反思使用电子设备的过程中一定会关注或尝试的生活方式。在这篇文章中，我们邀请了几位少数派作者，听听他们对数字健康的理解和具体行动。其中既有保持数字健康过程中用到的技巧和好物，也也有自己的成功经验。<a href=\"https://sspai.com/prime/story/vol014-how-they-stay-on-digital-healthy\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/vol014-pre-digital-life\" target=\"_blank\">《数字、模拟、实体——漫谈数字健康》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/vol014-how-they-stay-on-digital-healthy"},{"title":"你的 2022，藏在这些数字里","date":"2022-12-30 03:33:00","description":"不知道你的 2022 过得怎么样呢？不妨去各大年度报告中回忆自己这一年的生活与工作吧。一如往年，我们给各位读者整理了各种数字媒体与应用发布的年度报告。<a href=\"https://sspai.com/post/77519\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77519"},{"title":"派早报：iQOO Neo7 竞速版发布、科大讯飞推出讯飞有声书等","date":"2022-12-30 00:25:14","description":"Office Mobile 将停用「传输文件」功能、OneDrive 将停止对 iOS 14 的支持等。<a href=\"https://sspai.com/post/77538\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77538"},{"title":"2023: 新年快乐 &amp; 博客总结","date":"2022-12-29 16:00:00","description":"\n<p>这一年对于我来说过的非常快，同时，也是很不平凡的一年。同样，今年也是 Blog 的第三年了。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8F%8B%E9%93%BE\" class=\"headerlink\" title=\"友链\"></a>友链</h2>\n<p>在这一年中，YFun's Blog 友链数量（不包括本站站点）为 9 个，其中很多都是大佬 (\\=!!</p>\n<p>其中，<a href=\"https://dusays.com/\">杜老师说</a> 最活跃力！</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0\" class=\"headerlink\" title=\"文章\"></a>文章</h2>\n<p>在 2022 年中，YFun's Blog 发布 6 篇文章。</p>\n<p>其中，在 1 月 14 日到 8 月 4 日之间<strong>整整咕了七个月</strong>（</p>\n<p>今年水了两篇文章，其余的自认为质量还行。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>与去年相同，YFun's Blog 依然在使用自己开发的 <a href=\"https://github.com/oCoke/hexo-theme-miracle\">Theme Miracle</a>.</p>\n<p>今年 Miracle 已经迭代到 <code>v2.2.1</code> 版本，主要在修 Bug 和提升体验<del>（比如高斯模糊又加回来了</del></p>\n<p>目前，我正在使用 ESHexoN 编辑，如果想了解更多信息，可以看这篇文章：<a href=\"https://blog.yfun.top/posts/2022/eshexon/\">抛弃静态博客的缺点，用 ESHexoN 在线编辑！</a></p>\n<p>此外，还有一个项目可能会在 2023 年初加入到 YFun's Blog 上，那就是 <a href=\"https://detalk.js.org/\">Detalk.js</a>。我尝试用它实现自定义性更强的评论系统。</p>\n<p>现在，Detalk 已具备基础功能，感兴趣的同学可以试用一下（（</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E7%BB%9F%E8%AE%A1\" class=\"headerlink\" title=\"统计\"></a>统计</h2>\n<p>与去年一样，今年的数据是：<code>N/A</code>。</p>\n<p>虽然 Cloudflare Web Analytics 在 2021 年 4 月份启用，但后来又将统计代码去除。所以关于本站的统计信息一直是个谜。</p>\n<p>关于这一点，我有计划加入开源统计系统。</p>\n<blockquote><p>我希望是一款<strong>不会侵犯用户隐私</strong>、<strong>不收集用户指纹信息</strong>的统计系统，目前考虑 <a href=\"https://umami.is/\">umami</a>.</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%AA%E6%9D%A5\" class=\"headerlink\" title=\"未来\"></a>未来</h2>\n<p>我希望有时间可以重构这个 Blog，计划使用 <code>Vue 3 + Nuxt.js + TypeScript</code>。当然，这只是个计划。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<p>这个世界变化太快，我们生活中的每一秒都是在见证历史。</p>\n<p>2022 已经过去，欢迎 2023 的到来，希望新的一年中，一切会变得更好。</p>\n","link":"https://blog.yfun.top/posts/2023/"},{"title":"《回来的女儿》第二集中播放的《魔方大厦》是第几集，说的什么内容？","date":"2022-12-29 06:34:44","description":"\n<p data-pid=\"jvCJj9O8\">做一下小列文虎克。</p>\n<p data-pid=\"olM8t_be\">前面播出的画面都是《魔方大厦》的OP，分辨不出来到底是哪一集。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0f52bc7cfa250a2efa65f01fa4d088cb_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2560\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-0f52bc7cfa250a2efa65f01fa4d088cb\" data-watermark-src=\"v2-208720891c91d8cbff7299df085fcd2f\" data-private-watermark-src=\"v2-234fdad343ca2e1ad776b453cb75417d\"></p>\n<p data-pid=\"3Q7WCCyf\">但是在陈佑希去接电话的时候，我们看到了这样的画面。</p>\n<p><img src=\"https://picx.zhimg.com/v2-f593bb0bd46b8218d887120239b060af_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"280\" data-rawheight=\"271\" data-watermark=\"original\" data-original-src=\"v2-f593bb0bd46b8218d887120239b060af\" data-watermark-src=\"v2-12b59e8aa8b921d7920541f9aab0de8f\" data-private-watermark-src=\"v2-b095ce23235baf4d6f76792c6f85a65a\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-526431500c347301cd4729137e16f1dc_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"144\" data-rawheight=\"169\" data-watermark=\"original\" data-original-src=\"v2-526431500c347301cd4729137e16f1dc\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"9HKgytsY\">很明显就是第一集《玻璃城》的开头。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0e04910b2fa5bebfef8661c2a4b0fa01_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"559\" data-watermark=\"original\" data-original-src=\"v2-0e04910b2fa5bebfef8661c2a4b0fa01\" data-watermark-src=\"v2-4bb3507f8287b38752c98c9adcbbd8e7\" data-private-watermark-src=\"v2-12dfc3a20c84cccedb565bd05c4d7c57\"></p>\n<p data-pid=\"jLjTbAr-\">如果只到这里就结束了，也太简单了。我们在第一集中还能发现几个更加细节的部分：</p>\n<p data-pid=\"hxNrC2_Y\">1、魔方大厦的方国里，每过去1天，外面地球才过去1秒。也就是说，只要莱克愿意，他可以在魔方大厦过一辈子，出魔方大厦之后依然是小时候的模样。</p>\n<p data-pid=\"RSlVcqOl\">这个细节很快就在第三集《神奇的日历》中被回应了，这里需要注意的是，该集的小说和动画版差异很大。</p>\n<p data-pid=\"QCqilq2k\">2、在莱克进入魔方大厦之前，他出现了严重的声画不同步，也就是说我们认知里莱克的自言自语其实并没有出现口型，进而可以推断他在那一部分中是自呓状态。</p>\n<p data-pid=\"5Vy8aWIV\">这在《回来的女儿》里正好对应了李文卓的特质，由于他是傻子，同时需要保有很多“不能告诉别人的秘密”，所以也会尽可能少的与其他人对话。</p>\n<p data-pid=\"FoPFYGHK\">3.动画里的玻璃城剧情与小说也有差别，动画里的玻璃城里的人并不是透明人，而只是玻璃人。也就是说动画版本的特质并不是“真实”而是“易碎”。</p>\n<p data-pid=\"-Knlh0rN\">《回来的女儿》里所构筑的看似温馨的家庭，以及家庭里的众人各自为了自己目标貌合神离生活的模样，正是易碎的生活状态。</p>\n<hr>\n<p data-pid=\"rdoVLeGd\">顺便提一句，这集的《魔方大厦》还有出现了一个插曲，我没找到曲名，歌词大概是这样的（后面半句听不太清楚）：</p>\n<blockquote data-pid=\"YfNUZvTK\">怨你也容易 怨我也容易 太阳照亮了我们 温暖所有的心灵<br>献出你的友谊 换取我的神奇 用内心的温暖 指尖传递为荣</blockquote>\n<p data-pid=\"9L5YvtqT\">如果有心的朋友会发现，《回来的女儿》里只有李承天家的地板长下图这样，是由复数个马赛克拼贴而成的。虽然这也是上个世纪末期中国家庭地砖装修的常见风格，但是依然与《魔方大厦》形成相似的拼贴感，也就是彭罗斯镶嵌。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7a36e5fad32ce8f0b69d900ae6000884_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1294\" data-rawheight=\"413\" data-watermark=\"original\" data-original-src=\"v2-7a36e5fad32ce8f0b69d900ae6000884\" data-watermark-src=\"v2-890fd1aea209af1bdff0a545b8e8a4aa\" data-private-watermark-src=\"v2-44e1bd1bc275a97b7b7402f8b8994970\"></p>\n<p data-pid=\"81lDPymJ\">彭罗斯镶嵌本质上就是无限延展的周期画面，在《魔方大厦》每集的开头播放的动画里，转动的魔方也是另一种程度的彭罗斯镶嵌。所以可以从另一个角度看，魔方大厦的中心就是李家，而以他们家为视角可以看到20世纪末期的当时社会的其他怪状：既有港风的涌入，也有下岗与下海的变迁，有被拐卖的走失的孩子，也有针灸与气功热。我们能在很多现代中式恐怖游戏里看到端倪。</p>\n<p data-pid=\"yJedMQDv\">在故事的第2-3集里，伪装的家庭关系沉浸在一派温情脉脉的画风中，走失又回来的假女儿，名为李文卓其实是王重江的儿子，扑朔迷离的小秀真相。而在故事的第10话，经历过被关进精神病院、与程威、李承天一起误杀王重江的陈佑希，与这些人又形成了别样的微妙关系。</p>\n<p data-pid=\"cTXB1Ko0\">为了加强这种迷幻感，房屋的布景也在有意无意地营造拼贴意识，下图是第10话听到王重江去世消息的廖穗芳的视角，我们看到从窗格到门屏再到远处的建筑，都有密密麻麻的格子。</p>\n<p><img src=\"https://picx.zhimg.com/v2-a87435e82938d6fd802cde079a40925c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"391\" data-watermark=\"original\" data-original-src=\"v2-a87435e82938d6fd802cde079a40925c\" data-watermark-src=\"v2-6467645721f3a2c1989a64b4ca952d2f\" data-private-watermark-src=\"v2-7e87c0e75bf92bd21ff64ecea0998157\"></p>\n<p data-pid=\"24wjOOCy\">看过《回来的女儿》的朋友还会发现剧集里有大量的窥视镜头，它不属于任何角色的主观视野，而是处在一种旁观视角，仿佛观众时刻处于一种魔方外的冷眼旁观的感觉中。更多的原因是该剧里有大量的相互偷听的场景。</p>\n<hr>\n<p data-pid=\"xXNUktGy\">回到《魔方大厦》里的玻璃城故事。</p>\n<p data-pid=\"cKlG0QF1\">动画里很简单，玻璃城一片狼藉是因为莱克摔的魔方所致。18分钟的动画里，前三分之一是铺垫魔方大厦的设定，后面三分之一是莱克治好了众人，那么中间三分之一是什么呢？是警察在冰面上和莱克的追逐戏。</p>\n<p data-pid=\"WxECAWGD\">小说里用高温修复玻璃人的办法是医院提出来的，而动画里则是由被关进玻璃棺材里的莱克所提出来的，于是就形成了该片的一个经典童年阴影。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8d9d3f3b72f955ca5a7220d6a1c2ea27_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1050\" data-rawheight=\"664\" data-watermark=\"original\" data-original-src=\"v2-8d9d3f3b72f955ca5a7220d6a1c2ea27\" data-watermark-src=\"v2-5e399c503ba81586d41f74f102670c1a\" data-private-watermark-src=\"v2-29021bf141149aa97edc22c40540a97d\"></p>\n<p data-pid=\"f-RFd9PA\">在这一段里，莱克还说出一句经典的话：<b>别瞎说，我妈可爱我了</b>。——这也是李文卓的性格特质。</p>\n<p data-pid=\"kqA7zP5a\">在《玻璃城》里还有很多剧情与《回来的女儿》形成了很多的呼应，不过也就与《魔方大厦》后续的故事没有关系了。</p>\n<p data-pid=\"8STjZBGR\">顺便提一句，该动画的造型设计师是速泰熙，同时也是《大耳朵图图》的原创造型，我们也能看到图图与乐乐乐的相似之处。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dandoliya?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">乌合之子</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/574846363?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《回来的女儿》有没有能理清剧情的具体时间线？</a><br><a href=\"http://www.zhihu.com/question/576299522?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《回来的女儿》剧情最大的硬伤是什么？</a><br>\n","link":"http://www.zhihu.com/question/574824753/answer/2820936216?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《回来的女儿》中频繁提起的《魔方大厦》究竟是怎样的动画，为什么会成为大家的童年阴影？","date":"2022-12-28 10:10:37","description":"\n<p data-pid=\"EP1eYPmJ\">我觉得首先要说一下《回来的女儿》里为什么会提到《魔方大厦》，然后再展开说这部作品到底是怎么回事——熬夜看完26个小说故事的我是屑——看完才发现原来李文卓他们根本看的就是动画嘛。</p>\n<p data-pid=\"4hrcG_NW\">《回来的女儿》中涉及到《魔方大厦》的部分其实只有第一话《玻璃城》。</p>\n<p data-pid=\"r3si0aDi\">李文卓明确说是玻璃城的医生把李文文带走了，所以从中推理，一定是某种相似的情节被互文了。</p>\n<p data-pid=\"jG8QHlQt\">故事的第八集基本已经对上号了。</p>\n<p data-pid=\"cLshDaA5\">李文卓反复看他的童年动画《魔方大厦》，也特别喜欢，经常和好朋友一起扮演其中的角色，他经常说的话是魔方大厦的秘密不能与其他人说，只能和魔方大厦里的人说，也就是只能和能对得上电波的人交流，那就是李文文和小秀。</p>\n<p data-pid=\"UtGmzgBC\">自此与魔方大厦有关的所有隐喻都清楚了。</p>\n<p data-pid=\"eoFAVBzr\">被关着无法出门的莱克就是李文卓，但他知道妈妈是爱他的。<br>当然玻璃城里的人也是李文卓，因为只有他是绝对透明的真诚的人。<br>魔方的中心就是洗衣机——当一切都“旋转”起来的时候，谜团也就解开了——李文文被肢解为碎块了。<br>玻璃城的医生带走的话，就是将已经被肢解的玻璃人重新组装起来。这段内容不一定是真实发生的，而是廖穗芳借动画剧情给李文卓圆谎用的。</p>\n<p data-pid=\"eBo-N7Le\">也可能是被王重江用针灸的方式重新拼贴起来了，毕竟他住的别墅里二楼就是四面大大的玻璃窗，也就是玻璃城。</p>\n<p data-pid=\"13-ECEIN\">我们回到故事的最开始，李文卓遇到假扮妹妹的陈佑希，下意识把她当做自己真正的妹妹，说出的话是“妹妹，你怎么才回来”，意思是你怎么在魔方大厦里呆了太久。</p>\n<p data-pid=\"5yc8TXKr\">不过上面都是剧情衔接，下面才是我想展开的具体象征的部分。</p>\n<p><img src=\"https://picx.zhimg.com/v2-a50e295fe5646f1e8b95a3dbc838c1ad_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"447\" data-watermark=\"original\" data-original-src=\"v2-a50e295fe5646f1e8b95a3dbc838c1ad\" data-watermark-src=\"v2-c962ffc8eff131e06b2ddce80f66070b\" data-private-watermark-src=\"v2-012a4b7d91bffda0114733137cac75df\"></p>\n<hr>\n<p><img src=\"https://pica.zhimg.com/v2-bfc1932156d88e973669eadec1070ff0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"463\" data-watermark=\"original\" data-original-src=\"v2-bfc1932156d88e973669eadec1070ff0\" data-watermark-src=\"v2-675db7afe5bb56897ecdc916d28f50d3\" data-private-watermark-src=\"v2-ec9fe095d2dbf37825c90e4d3120b284\"></p>\n<p data-pid=\"70XnR2pf\">X博士曾经写过一篇文章《魔方大厦是怎样成为你的童年噩梦》，这个文章有心的朋友自然会搜到，从这篇文章展开之后，我们会发现一个被集体记忆重写之后的事实：</p>\n<h2>那就是<b>魔方大厦其实根本不是童年噩梦</b>，而是一种失忆的时代表征，真正的童年噩梦是所处的那个年代。</h2>\n<hr>\n<p data-pid=\"CdayAdnu\">任何文艺作品都会在一定程度上反应当时当地的社会思潮，尽管看似是天马行空的想象力，但也依然构筑出一个看似不同实则紧密相关的可能世界，或者按照多列泽尔的说法，叫做<b>Heterocosmica</b>，也就是异世界。和福柯的异托邦，<b>Heterotopia</b>是同一组词。</p>\n<p><img src=\"https://picx.zhimg.com/v2-9f92241bde9027708d88a66a427c64ea_720w.jpg?source=b1748391?rss\" data-caption=\"2019年，多列泽尔出版了《异世界三》\" data-size=\"normal\" data-rawwidth=\"354\" data-rawheight=\"504\" data-watermark=\"original\" data-original-src=\"v2-9f92241bde9027708d88a66a427c64ea\" data-watermark-src=\"v2-daed61f285af60f71632415883625df9\" data-private-watermark-src=\"v2-e766111345d20c1decde466f24acfc7a\"></p>\n<p data-pid=\"zmRwNVI7\">我们可以简单的将异世界理解为是现世界的一种扭曲变形，或者按照弗洛伊德的说法，那就是梦境的移置。也就是说，我们总能在两个看似完全不同的世界看到一些关联的蛛丝马迹，但这些关联早就被层层叠加的密码所一次次重写过了，我们很难找到现世界的某种蓦仿。</p>\n<p data-pid=\"5iXZI1CO\">但是这句话反过来说就是：如果靠直觉而不是靠规律获得了密码的人，就能很快发现而这之间的联系，就像李文卓和吕萌萌的交谈一样，<b>一句“那颗真诚透明的心”</b>。</p>\n<p><img src=\"https://picx.zhimg.com/v2-8b6a7b35fb0778c2a45c39efd70663f4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"521\" data-watermark=\"original\" data-original-src=\"v2-8b6a7b35fb0778c2a45c39efd70663f4\" data-watermark-src=\"v2-7a5a16515fb714209f51a1ba3a799f55\" data-private-watermark-src=\"v2-e3516e4a8cf21fd2098b7dc807bde777\"></p>\n<p data-pid=\"DNH9EnvE\">而《魔方大厦》的特别性就在于，借用了重重密码，构筑了一些奇特的想象世界，但无一不是在影射现实的生活。</p>\n<p data-pid=\"gZUBIHvz\">看过《镜花缘》的朋友都知道，《魔方大厦》的本质其实就是异世界大冒险，这些异世界之间毫无关系，显得非常光怪陆离，它体现出一种<b>结构化的大叙事与具象的小叙事之间的张力关系</b>。</p>\n<p data-pid=\"DuJDhVSu\">《镜花缘》有一条不能称其为主线的主线，与《格列佛游记》如出一辙，都是<b>游历</b>。早期的乌托邦世界的寻找，也都是依靠不停的游历的方式，在根系主体上牵连出一个又一个的块茎（rhizome）。</p>\n<p data-pid=\"sxTRo5uq\">这里推荐两个作品，一个是与此很相似的小说《机器人大师》，另一个是《超级工作室》中塑造的12座理想之城。</p>\n<p><img src=\"https://picx.zhimg.com/v2-1701d5ccadc6d2ffe22d3c55798ecf0f_720w.jpg?source=b1748391?rss\" data-caption=\"《机器人大师》\" data-size=\"small\" data-rawwidth=\"720\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-1701d5ccadc6d2ffe22d3c55798ecf0f\" data-watermark-src=\"v2-520c73cd95df147d276d097521722d2b\" data-private-watermark-src=\"v2-138c370e8f4d0402c7d35bc39cbcb038\"></p>\n<p data-pid=\"ofCU-n9o\">如果说《机器人大师》依然还有冒险游历的元素，那么《12座理想之城》纯粹就是借助所谓现代都市生活中常见的测验题让我们回答来掀起想象了：在你看完对这十二座城市的描述后，你希望真实存在的城市有几座？你认为这些城市对人类有任何益处吗？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b6a9745d0e3ab5492a4f59226032737e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1808\" data-rawheight=\"2816\" data-watermark=\"original\" data-original-src=\"v2-b6a9745d0e3ab5492a4f59226032737e\" data-watermark-src=\"v2-96e6d5d1fdd7816849f996adb615d048\" data-private-watermark-src=\"v2-d6403a44a22d65553319c4c8e4c57eec\"></p>\n<p data-pid=\"8AwP_U3y\">其中正好有一段评价，非常适配《回来的女儿》与《魔方大厦》的故事。</p>\n<p><img src=\"https://pica.zhimg.com/v2-424f1483673645bdd97adf21c8e1ee24_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"764\" data-rawheight=\"325\" data-watermark=\"original\" data-original-src=\"v2-424f1483673645bdd97adf21c8e1ee24\" data-watermark-src=\"v2-8f54fabccba18ad4acb2a4c722dad856\" data-private-watermark-src=\"v2-f7f235702dbf9828c6f95c5f4a8facc8\"></p>\n<p data-pid=\"ZthWMlZs\">不断去异世界冒险这件事本身就是大冢英志所说的神魔大战（物语消费）的一种游戏式的延展，意味着地图可以无限扩大。但冒险又是具有目的性的，也就是说地图的完成本身就是冒险的完成。</p>\n<p data-pid=\"uBBiuDuY\"><a href=\"http://link.zhihu.com/?target=https%3A//www.yystv.cn/p/1693\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《魔神英雄传》：神龙斗士诞生记</a> </p>\n<p data-pid=\"Om-nfXKh\">大家耳熟能详的《魔神英雄传》就是如此，掺杂了大量的RPG元素。在游研社的文章里，也谈到了大量的互文、致敬和玩梗——这在《魔方大厦》中也大量存在，也是异世界穿越作品的鼻祖之一。</p>\n<p data-pid=\"o6XLXyis\"><b>于是无限的地图在剧情的连带之下成为了有限的空间。</b></p>\n<p data-pid=\"S-9Lovpw\"><b>我们就此把整个叙事方式翻转过来，先做出了地图的构筑，然后在展开故事，当地图内的空间完成之后，故事也就结束——重新回到现世界里。</b></p>\n<p data-pid=\"iwIgMR-A\">而在看似不同空间的冒险里，总是将现世界的某种侧面进行极端放大，成为具有强烈魔幻现实主义的叙事风格。</p>\n<p data-pid=\"1Ft0258j\">不过，如果异世界被不断游戏化之后，那么那些看似奇怪的元素最后也成为了某种不需要追问缘由的设定贴图，成为被消费的视觉奇观。</p>\n<p><img src=\"https://pica.zhimg.com/v2-84a1a5df1dc0d8d8cf3ecbcab04cc748_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"300\" data-watermark=\"original\" data-original-src=\"v2-84a1a5df1dc0d8d8cf3ecbcab04cc748\" data-watermark-src=\"v2-c63f13360a4a72bb4a0447d4998c3c66\" data-private-watermark-src=\"v2-5312638d31c07469b8d26cf6573f7382\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"72WJztvW\">现在，魔方大厦的故事已经被郑渊洁改成了纯粹的奇观异世界大冒险，我说的当然是歌舞剧和预备再拍的大电影，还有上面这个书的封面，简直就是光明克系拉满。</p>\n<p><img src=\"https://picx.zhimg.com/v2-43a72f397b9f8f231b2aa73815a3718d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"689\" data-rawheight=\"992\" data-watermark=\"original\" data-original-src=\"v2-43a72f397b9f8f231b2aa73815a3718d\" data-watermark-src=\"v2-2e5ef9e82d44eadd396caa4a4fca2655\" data-private-watermark-src=\"v2-0e497e48f083df331e53888ae7d5b6ca\"></p>\n<p data-pid=\"Nfo5yoxq\">感觉要拍成《无敌破坏王》或《失控玩家》。</p>\n<p data-pid=\"RLnbRVFr\"><b>不过彼时，《魔方大厦》还没有被RPG化，郑渊洁也拒绝用游戏写实主义的方式来写他的幻想作品（不能称其为童话，更应该被称其为幻想小说），于是魔方大厦还是保留了它强烈的时代特质。</b></p>\n<p data-pid=\"aROINcmg\">需要说明的是，《魔方大厦》也曾经被认为是中国最早的无限流小说，这个观点就见仁见智了。</p>\n<p data-pid=\"6UtxouxN\"><b>这里推荐看《魔方大厦》的连环画版，基本上按照小说原著走了一遍剧情，而且比动画版更恐怖。</b></p>\n<p data-pid=\"U0iDnvOg\"><b>漫画点击这个豆瓣链接就可以看：</b><a href=\"http://link.zhihu.com/?target=https%3A//www.douban.com/doulist/2644387/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">魔方大厦连环画全集</a> </p>\n<p data-pid=\"suK19KRL\">戴锦华在谈及魔方的时候，为魔方赋予一种全新的认知，那就是空间与阶级的折叠与区隔。</p>\n<p data-pid=\"c1FRNz5a\"><a href=\"http://link.zhihu.com/?target=http%3A//www.wyzxwk.com/Article/wenyi/2016/10/372806.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">戴锦华：空间与阶级的魔方 - 乌有之乡</a> </p>\n<blockquote data-pid=\"IJtsD1ts\">我最早给出“空间与阶级的魔方”这一命题的时候，主要的寓意是在“魔方”的意象上。我大概是中国最早接触到这一玩具的一代人。它曾经极度流行，男女老幼人手一个。<br>魔方的基本原理和绝大多数单机游戏、桌面游戏一样，是一个变混沌为秩序的过程。它是一个归纳、筛选，最终达到某种纯净，形成某种由纯净造成的美感的过程。它是不同侧面的同色、同质的组合，以及不同侧面的不同色、不同质的区隔。<br>都市，尤其是现代都市，实际上始终在尝试完成这样一个过程：区隔异质性的人群，区隔异质性的空间，区隔异质性的场域，由严格的区隔而建立起一种秩序。同时，现代都市文化尝试赋予这样一种区隔、秩序以某种诗意和美感。但是，这种赋予经过区隔的异质性空间以美感诗意的文化自身又被区隔。</blockquote>\n<p data-pid=\"233KxUbN\">在戴锦华的比喻中，她的期盼是“我们的都市是一个经过努力、经过暴力所形成的看似纯正整一的魔方，从一个角度望去，我们只能看到魔方的一种色彩和一个面向。只有当我们转动它的时候，我们才看到它的多个面向。”</p>\n<p data-pid=\"EE-1LSQh\">我自己则认为，魔方还有两个其他的特质，通过<b>单面色调</b>遮蔽<b>其他杂色</b>。</p>\n<p data-pid=\"scvgXxXS\">戴锦华把物质性的生产者当做一个已经被纯化的面来想象，但实际上生存于城市里形成的魔方并不一定是“所有面都以成为纯洁的色彩”而成为“不同侧面的同色、同质的组合，以及不同侧面的不同色、不同质的区隔”，更多的可能是只有正面是纯洁的同色，它的背面是混杂的无法被功能分区的空间。</p>\n<p data-pid=\"UhAcFrWH\">详细解析可以看萌娘百科的文章解析，<a href=\"http://link.zhihu.com/?target=https%3A//zh.moegirl.org.cn/zh-hans/%25E9%25AD%2594%25E6%2596%25B9%25E5%25A4%25A7%25E5%258E%25A6\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">魔方大厦 - 萌娘百科 万物皆可萌的百科全书</a> <br>这个解析非常重要，和X博士的解析一样重要。</p>\n<p data-pid=\"Y1R8i9Hu\">然后，我再推荐一个新的解析：</p>\n<a href=\"https://zhuanlan.zhihu.com/p/22143759\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/9045c7403de722fa9587e58c78aa7ba8_l.jpg?source=b1748391\" data-image-width=\"1200\" data-image-height=\"1080\" class=\"internal\">一颗脑洞豆：一部被遗忘的科幻佳品——《魔方大厦》</a><p data-pid=\"Hxbb9vyD\">知乎的这篇文章说的很好，归根结底就是一句话：<b>郑渊洁写的是历史，而导演导的是未来</b>。</p>\n<blockquote data-pid=\"9v0ma_tb\">《玩具树》表明了人工智能仍需要激活并且能够被关闭的开关时代（动物玩具从树上摘下了就活了，放到树上就又变成玩具）。<br>《来克一世皇帝》表明了人工智能是中央控制的非自主时代（整个国家的人民都是木偶，都由一根线连接着，由皇帝直接控制）。<br>《火车上的国家》看过雪国列车的自然懂，也是残余的人类（火车一直不停地运行着，穿过各种灾难异景）。<br>《锁国密室》中的人类更是直接表明处在原始社会，对于科技一窍不通。</blockquote>\n<p data-pid=\"iiyxdOuG\">郑渊洁的《魔方大厦》虽然再翻拍可能不容易，但他的另一部作品已经上线了，那就是《驯兔记》，从《驯兔记》中我们能看到与《魔方大厦》连贯一致的魔幻现实主义色彩。</p>\n<p><img src=\"https://picx.zhimg.com/v2-703e61e2fb7c1af99a0ba119ffc852b7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1512\" data-watermark=\"original\" data-original-src=\"v2-703e61e2fb7c1af99a0ba119ffc852b7\" data-watermark-src=\"v2-2050a68a34ff32f3cd3c17cc5c676dff\" data-private-watermark-src=\"v2-723bc932a3be40ba7cdabe771ea57880\"></p>\n<p data-pid=\"MwyUzjop\">再重提一下，一定要去看X博士、萌娘百科和一颗脑洞豆的解析文章。</p>\n<blockquote data-pid=\"hIUR9o0J\">我们得到了三个不同且连贯的《魔方大厦》，分别是<br>创作于1982-1984年的小说《魔方大厦》<br>创作于1990-1994年的动画《魔方大厦》<br>以及在2022年被《回来的女儿》提及的《魔方大厦》（1997年）。<br>而每个作品，都有对应提及的时代思潮影响</blockquote>\n<p data-pid=\"eWuoBY9j\">于是我们就理解了，小说《魔方大厦》是一个类似《葫芦小金刚》那样的<b>套层加象征结构</b>。</p>\n<p data-pid=\"TmftFpri\">套层是来克去往26个不同方格游历异世界的故事——和其他异世界游历一模一样。<br>但最大的不同是，莱克不想回家，即便莱克有金子般的心，真诚善良，但他就是不想回家。小说的结尾莱克虽然说了“每个暑假都会来魔方大厦一个月”，但他也说了，父母不会相信他的经历，而且在小说里，莱克几乎每集都会拿这个方格世界和自己的家作比对——就和格列佛一样。</p>\n<p data-pid=\"zsRNfTiM\">这种断绝亲缘关系，投身异世界的意识，我在另一个作品里也看到过，那就是《游戏人生》里的【  】（空白兄妹）。</p>\n<p data-pid=\"QN4TuOyn\"><b>而象征结构，则是借用一个看似人畜无害的外壳，隐喻时代洪流下人的被异化的过程。</b></p>\n<p data-pid=\"1GF6Ueb-\">《葫芦小金刚》里青蛇对抗葫芦娃的法宝和三妖四怪的名称就是如此，小孩子看了之后会为奇幻的想象力所好奇，而熟悉那个时代的大人知道这些法宝到底隐喻的是什么——像是通神钱、穿小鞋、大锅饭、黑吃黑、伸手大王、两面怪都具备类似的象征性。</p>\n<p data-pid=\"ziDo4QFE\">就如本回答一开始说的那样，<b>一个看似充满想象力的异世界，其实是对现实世界的讽刺</b>。这个评价适用于《格列佛游记》，当然也适用于《魔方大厦》。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9322aeec9462caa6da1cf8d5aac74732_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"723\" data-rawheight=\"219\" data-watermark=\"original\" data-original-src=\"v2-9322aeec9462caa6da1cf8d5aac74732\" data-watermark-src=\"v2-3c83e59998b6d26ad70fda7a0e3c2a3e\" data-private-watermark-src=\"v2-cd334619f83f8627836dcbda26f51f45\"></p>\n<p data-pid=\"M6JPXLo8\">表面上是莱克探险的故事，但内里的26个故事没有一个故事是正常的，即便是看起来特别和谐的《吹气马戏团》也是如此，讽刺的是各种大鸣大放以及盛世欢歌。郑渊洁创作这个“童话”的时候所参考的时代思考已经说明了一切。</p>\n<p data-pid=\"9D3Nptm_\">动画版则通过画面加重了这种荒诞感，对应的是另一个同时代的反思。最后一集《黑蝉乐队》，现在看来更加具有荒诞性——你不选在这集结尾还好一点。</p>\n<p data-pid=\"qvc49MFA\">当然还有更多，那就是科幻的对未来的想象。动画改编的故事里，有一半多都牵涉到未来科幻对人的异化，有千篇一律的现代生活（头盔城的故事），有生化人的种族对抗（蓝蜻蜓飞行团），有被分离的情绪（夏河银行），有科技便捷之后的过肥胖化问题（科洛城）。</p>\n<p data-pid=\"Hce4fFsN\">其实这些故事我们在之后的作品里也看过类似的：</p>\n<blockquote data-pid=\"ejRxOWvo\">头盔城——《大护法》 《我在伊朗长大》《我们》（扎米亚金）<br>生化人对抗——《黑镜》<br>夏河银行——《500年后》《人生切割术》——里面还有一个标语：努力工作，天天快乐<br>科洛城——《机器人总动员》 《美丽新世界》<br>神奇的日历——《盛世》<br>三探樱桃塔——<b>说假话和说重复的话，不能算说话</b><br>蚂蚁王国——雅各比的书《杀戮欲》 还有亚伯该隐故事<br>锁国密事——柯特·冯内古特的《哈里森•伯格朗》<br>莱克一世皇帝——《1984》</blockquote>\n<p data-pid=\"8IIjJVOr\">仔细一看的话，《魔方大厦》内蕴着强烈的反乌托邦主题，已经不是能用童年阴影四个字可以形容的了。</p>\n<p data-pid=\"tpQmfuBy\">这与《回来的女儿》别无二致。</p>\n<p data-pid=\"yNqSH_L9\">除了悬疑推理走失故事以外，我们还能从《回来的女儿》里看到什么呢？</p>\n<p data-pid=\"IJOh_CUl\">看到那个时代的乱象。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dandoliya?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">乌合之子</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/574816671/answer/2819556196?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">46 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/574824753?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《回来的女儿》第二集中播放的《魔方大厦》是第几集，说的什么内容？</a><br><a href=\"http://www.zhihu.com/question/64533481?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">一部欧美电影，讲述的是儿子继承父亲魔法？</a><br>\n","link":"http://www.zhihu.com/question/574816671/answer/2819556196?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"阿尔卑斯的夏与冬：瑞士双游记","date":"2022-12-28 03:05:20","description":"在种种机缘巧合之下，今年我有幸在夏天和冬天两次前往瑞士，并分别在在阿尔卑斯山的少女峰和马特洪峰的脚下度过了三天 […]","link":"https://flyhigher.top/diary/2639.html"},{"title":"为什么反映社会现实题材的电影这么受欢迎？","date":"2022-12-27 17:25:13","description":"\n<a href=\"https://www.zhihu.com/zvideo/1591227800568156160\">文牧野：为什么反映社会现实题材的电影这么受欢迎？</a><p data-pid=\"2HPKsOrN\">知乎的朋友们大家好，我是导演文牧野，很高兴能通过知乎电影与知友们进行交流，也很感谢获得 2022 知乎年度影人荣誉称号，感谢知友的认可。</p>\n<p data-pid=\"xvx0FPuV\">我理解的是现实题材的片子跟观众的距离会比较近一些，而且现实题材的片子无论是影片的质感，还是影片中表达出来的现实意义和情绪，大部分都做到了跟观众息息相关，减少了观众的理解成本，也能够很好的引起大众的一个群体共鸣。</p>\n<p data-pid=\"-jM1GrY1\">具体分析的话我觉得大致可以分为三个层面，首先第一层是现实题材的影片所表达的内核，一定要是能贴近大众情绪的；其次是影片的表达手法，不能过于艺术化，得把故事讲清楚；最后就是影片外部的一种材质感，在整个影片的制作中，不能有任何一个环节脱离现实；这三个东西是我认为能够构成让观众所熟悉的一种现实质感；比如《我不是药神》在题材上来讲，它描绘的是我们普通人人生中的“生老病死”中的“生”“病”“死”这三个元素，这样它所展示的影片故事，就会离观众很近，能让观众更好地去代入情绪；在拍摄《我不是药神》的时候，我有去使用一些手持的摄影手法，也请了很多的非专业演员，让影片的呈现能够“接地气”，能够“很现实”；包括我们整个的前期准备上面，为了强化现实感，给观众打造距离自己生现实活更近的“体感”，我们的美术部分，也是做了大量的调查采访，让演员的服装造型等能够完全营造出观众“身边人”的感觉；在摄影方面，一些取景地勘察和一些细节的拍摄角度，也都是希望能够从材质上最大化的逼近现实，这样就可以在跟现实尽量接近的同时，再去对影片做艺术化的加工处理。</p>\n<p data-pid=\"txResEjm\">我觉得以上这三个层面的融合，所构成的质感能够让观众更容易地进入到影片的故事中，也能更容易地感受到故事内核所要表达的主体思想，就是为什么反映现实题材的电影受欢迎的原因。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhi-hu-dian-ying-72?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">知乎电影</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/569968451/answer/2818822359?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">132 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/575340979?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么反映社会现实题材的电影特别受欢迎？</a><br><a href=\"http://www.zhihu.com/question/399448292?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么多数反应社会现实题材的电影这么受欢迎？</a><br>\n","link":"http://www.zhihu.com/question/569968451/answer/2818822359?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"演员如何通过表演给不讨喜的角色加分？","date":"2022-12-27 15:51:08","description":"\n<p data-pid=\"8rfZB-PF\">去除杂念，专业演员干专业的事儿，其他交给观众。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/song-jia-1-70?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">宋佳</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/569968778/answer/2818786453?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">76 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/20413553?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何判断一个角色演得好不好？</a><br><a href=\"http://www.zhihu.com/question/61481018?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价一个人的演技好不好，就像有些人只适合演一种类型的剧，尝试其他角色后就被人说演技不好？</a><br>\n","link":"http://www.zhihu.com/question/569968778/answer/2818786453?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《人生大事》带来了哪些中国式生死价值观的呈现？","date":"2022-12-27 14:06:54","description":"\n<p data-pid=\"vC1YZoRx\">知乎的朋友们大家好，我是演员朱一龙。<span class=\"nolink\">我在电影《人生大事》中饰演的“莫三妹”是名殡葬师。这是一个相对特殊、大众了解较少的职业，正如影片中所展现的那样，不少人对这类职业存在偏见，包括我自己，在接触这个题材之前提起死亡也会觉得是件需要避讳的事。</span></p>\n<p data-pid=\"9B1aQoaq\">开拍前，我去实地采风体验生活，发现殡葬行业并不像大家认知里那样冷冰冰的，反而是一个很温暖的职业。他们是服务于告别的职业，给予逝者离开时的体面，更是给活着的人带来慰藉和力量，这是我理解的殡葬师的职业底色。</p>\n<p data-pid=\"jn1WZEMc\">《人生大事》里，三哥对这份职业的理解也经历了一段成长。从一开始对殡葬行业的轻视、不理解，满脑子都是生意经，到后面真正理解并开始敬畏这份职业，与“上天堂四人组”并肩作战，给更多人带去体面和慰藉。</p>\n<p data-pid=\"iKJQHlVJ\">在我看来，《人生大事》这部电影讲的不仅是如何面对死亡，更是想告诉大家要好好活着。在电影中，“种星星的人”虽然是三哥给小文造的一场梦，但他所做的一切，也是为了让活着的人更珍惜当下，过好以后的生活，如果可以，希望这场梦能温暖到每个人。</p>\n<p data-pid=\"4gB6caxQ\">电影里有句台词是这样的：“人生除死无大事。”</p>\n<p data-pid=\"IjK-oO8r\">影片中所呈现的故事也是现实中普通人日常的缩影，市井的烟火气，生活的酸甜苦辣。希望大家可以从电影中收获一点温暖，你爱的人从未真正离开，他们会化作星星，一直守护你。</p>\n<p data-pid=\"UcBPvXTX\">最后，致敬种星星的人。<br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhu-yi-long-gong-zuo-shi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">朱一龙工作室</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/569967802/answer/2818670056?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">111 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/540230541?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《人生大事》想要表达什么样的生死观？</a><br><a href=\"http://www.zhihu.com/question/553172683?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价阎连科的《人生不过四季》？</a><br>\n","link":"http://www.zhihu.com/question/569967802/answer/2818670056?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"演员和角色的关系是什么？","date":"2022-12-27 13:05:51","description":"\n<p data-pid=\"ifnQTIsv\">知乎的朋友们大家好，我是演员白敬亭。非常感谢知乎的邀请，让我有机会和大家分享一些表演上的感受。</p>\n<p data-pid=\"QM8ld8vc\">首先关于演员和角色的关系这个问题，目前这个阶段我个人的感受可能更多的是双方在各自促进彼此成长。当我要为一个角色服务时，大多要开拓出我并不常在生活中展现出的性格，并要去学习新的技能和塑造一些状态、体型、表达方式，这也是作为演员非常享受的一个过程。在这个过程中我也会发现自己的多样性和思维方式的转变，自己逐渐与角色融为一体。而将文字转化为表演，最终变成一个完整的角色，这其中也少不了将自己生活的阅历和人物性格加入其中，让表演变得更加生动。每次接到新的角色，就像是新认识了一位打篮球的队友，我们要彼此了解、适应、磨合，把双方彼此特色相融合，适当地改变，最终才会打出理想的配合效果。</p>\n<p data-pid=\"MfknZyS_\">关于适配度问题，我自己在选择剧本的过程中，首先要看角色自己是否喜欢并有创作激情，而且在阅读过程中我一般也会代入表演，看自己是否可以驾驭和塑造。相对于原创剧本，很多小说改编的IP在影视化之前，已经有了很好的读者基础，在塑造有小说基础的角色时，我也会选择先深入讨论区多看看大家对角色的理解、经典片段的分析和讨论，因为在影视化的过程中难免会对剧情和人物有改动和删减，但只有自己深入地了解故事和人物，代入读者的心态，了解人物的魅力之处，让自己发自内心地爱上这个人物，才能确保在表演的过程中，不会让原本饱满的情节失去光彩，并且也要和其他各部门的老师及时沟通自己的想法，就像服化道对于一个角色塑造能不能达到所谓的适配度，也起着至关重要的作用。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bai-jing-ting-gong-zuo-shi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">白敬亭工作室</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/573580653/answer/2818600132?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">43 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/24827720?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">谈谈演员与角色的关系？</a><br><a href=\"http://www.zhihu.com/question/284075628?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">演员对角色的认同？</a><br>\n","link":"http://www.zhihu.com/question/573580653/answer/2818600132?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"电影中的方言台词对电影主旨表达有什么影响？","date":"2022-12-27 11:27:22","description":"\n<p data-pid=\"eH4KOvN8\">我作为一个石家庄人却拍了一部几乎全是武汉话的电影，首先我因为个人对方言就非常感兴趣，我对曲艺、戏曲、中国的各地的方言天然有兴趣。我们确定了在武汉拍之后，我就去看了那些武汉本地的大量的曲艺资料，语言节目的资料也去找到了一些。<br>为什么我们能呈现的这么自如，是因为我们用了大量的武汉本地的演员：朱一龙、吴倩、郑卫莉这些人他们都是有过在武汉生活经历的。比较辛苦的是罗京民老师，他是陕西人，我最早写剧本的时候想象的老莫的形象就是他。我很喜欢他的形象，他就是那种又严肃，严肃起来又挡不住可爱的感觉。他也是对自己要求非常苛刻的老艺术家，在表演的同时还要兼顾武汉话标不标准，挺不容易，而且他说的很标准了。但我学不太好，我觉得是因为我有一段在重庆的时光。在重庆上大学，一点重庆方言跟四川方言的底子，但是要在这个基础上再学武汉话，我觉得这个难度就很大，但是我能get到武汉话里边那些有意思的点，但是我说不好。<br>那为什么要用方言？在《人生大事》里，我们是为了让角色生动感更强，例如朱一龙用家乡话去演这个角色，演出来就是这片土地下长大的孩子。我们试过让他用普通话去演，感觉还是武汉话更能从台词表演中解放出来，能把精力顾及到表演的其他方面。另外，片子里烟火气的真实感，一部分也是靠方言建立起来的。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/liu-jiang-jiang-86?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">刘江江</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/569967650/answer/2818481759?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">44 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/473623517?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">当作家为一个说外语的角色写台词时，他们知道那个角色实际上在说什么吗？</a><br><a href=\"http://www.zhihu.com/question/280996254?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何在小说中使用白话写出很有逼格的台词?</a><br>\n","link":"http://www.zhihu.com/question/569967650/answer/2818481759?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"演员在塑造一个角色时，如何使角色变得丰满？","date":"2022-12-27 10:46:41","description":"\n<p></p>\n<p data-pid=\"WdisLahl\">大家好，我是雷佳音，也是电视剧《人世间》中的“老疙瘩”周秉昆。感谢大家对《人世间》的喜爱，也非常感谢大家喜欢老疙瘩。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b23ea143c87ac934ea937466a99e2877_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1920\" data-watermark=\"original\" data-original-src=\"v2-b23ea143c87ac934ea937466a99e2877\" data-watermark-src=\"v2-533b01d77e1555db5a1fa87b1561d432\" data-private-watermark-src=\"v2-c9ec3d43100f93dd97dba46ae92a7b0f\"></p>\n<p><br></p>\n<p data-pid=\"uPsFYAab\">塑造「周秉昆」这个角色的过程，还算是比较顺利的。我是东北人，而且周秉昆几乎和我父亲是同年生人，戏里好多角色我脑袋里打小就有原型，一看就知道，哎，这不就谁谁谁。有时候一边演着一边就会想，这场戏要是发生在真实世界的这一边，我父亲那辈人一起坐在小酒馆里喝酒聊天，会是什么样的情景。</p>\n<p data-pid=\"rs0SRYfN\"><br>当然演这个角色也有困难的地方，因为这个戏时间跨度特别大，我要从20岁演到60岁。青年、中年、老年，这三个阶段的表演难度是不一样的。刚开始演的时候我老跟宋佳开玩笑说：“姐，咋整？40岁了往这儿一站，演年轻也不像，演年老也不像。”</p>\n<p data-pid=\"gzaEokeG\"><br>到底怎么能把这个人物的变化演活，让观众相信，这个是需要我去琢磨的。所以我从一些比较细节的人物状态上去想办法，青年时期的秉昆老是戴一顶雷锋帽，我就按自己的尺寸选小了一号。原本两头耷拉着的雷锋帽，就直挺挺地竖着，“老疙瘩”的形象一下就变得很俏皮，有一种玩世不恭的喜剧感。我小时候就这么戴雷锋帽，出来的效果剧组都觉得行，大家也乐得不行。</p>\n<p data-pid=\"5wPrcDXf\"><br>除了从细节上寻找人物状态，我也会去思考这个人物在文本之外的角色逻辑。在看剧本的时候我就有一个疑问：周秉昆一开始看枪毙罪犯的现场都能晕倒，应该是一个胆小的角色，但在计划经济年代，他说辞职就辞职，对和郑娟的感情完全不惧世俗眼光。我当时想，他是什么样的存在呢？带着这个思考我抓住了周秉昆对待人生「以不变应万变」的方式，以此来处理很多细节。</p>\n<p data-pid=\"tuIwiGJB\"><br>在表演的时候和对手碰撞出的化学反应，也会给人物增添很多色彩。戏里其实我和宋佳对手戏的词儿很少，但我俩是特别熟的老朋友了，经常就会有一些互相调侃的即兴情节。比方宋佳说：“你怎么最近胖了呢？”“你是不是哭一路，脸都哭肿了？”这些看似没用的玩笑话其实提供给观众很多信息量和维度，一准能联想到姐弟俩小时候肯定没事就打打闹闹。还有大家很有共鸣的「穿姐姐红毛裤」这个情节，也是我和萨日娜老师在对词的时候即兴出来的，最后出来的效果确实很好。</p>\n<p data-pid=\"BvnJ8tnO\"><br>其实对一个角色的创作首先是要贴合戏的风格，从戏的色彩基调去揣度自己的表演尺度。塑造人物时，以人为基础，演起来手段就会比较多。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lei-jia-yin-gong-zuo-shi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">雷佳音工作室</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/569975711/answer/2818383417?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">40 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/569975719?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">演员在塑造一个角色时，如何使角色变得丰满？</a><br><a href=\"http://www.zhihu.com/question/574571201?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">演员应该如何塑炼好一个角色？</a><br>\n","link":"http://www.zhihu.com/question/569975711/answer/2818383417?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"演员是如何训练自己眼神的？","date":"2022-12-27 10:38:36","description":"\n<p data-pid=\"OnEHv_k8\">大家好，我是陈晓，很幸运今年有多部作品和观众见面，也很感谢大家对我表演作品的喜爱、关注和评价。<br>关于演员如何训练自己的眼神，我觉得一个演员对角色的理解和诠释，跟他的成长轨迹和年龄是有挂钩的，不同年份拍出来的作品也会有不同的变化。有时候情感的变化不仅可以通过台词和动作表现出来，也可以通过眼神传达出来。而眼神戏的部分也可以让大家感觉出角色情感和当下人物情绪的变化，后期观众在看剧的时候能感受到那种氛围感。<br>《梦华录》中，其实是杨阳导演特别会捕捉演员的情绪，在实际拍摄的时候其实我并没有很多的诀窍和心得，也没有刻意去做眼神练习，导演在拍摄现场给了大家一个很自由的创作空间，不管是道具、服装、情景、氛围等都很贴合剧情，在那样的创作空间里很容易让人融入到剧中的情节当中，所以表演起来就很顺畅，很舒服，很真实。<br>导演经常跟我们说“你心里是怎么想的，就跟着当时的状态去演，比较轻松的去演，不要有顾及的去演就行，我的机器能够抓到你的小细节。”就这样很多细节、不经意之间的反应，更自然的被导演捕捉到。然后再通过后期剪辑合成最后呈现给观众，让观众觉得有一种氛围感。<br>2022年相继播出了《好好说话》，《梦华录》、《冰雨火》，顺利完成了《人生路遥》，《尘封十三载》的拍摄工作，对我来说是一件很幸运的事情。演员拍戏有时候当下是看不到最终效果的，播出后会有惊喜，能让更多的观众看到并且喜欢，挺开心幸运的。<br>最后，我希望大家都可以遇到喜欢的、愿意去投入自己所有精力去做的事情，但同时也不要给自己过多压力，有时候顺其自然也会有意想不到的收获</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/49-11-65-31?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">陈晓工作室</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/571877972/answer/2818390104?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">39 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/266327067?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">演员是如何训练自己的眼神的？</a><br><a href=\"http://www.zhihu.com/question/26224919?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何练就演员一样的眼神？</a><br>\n","link":"http://www.zhihu.com/question/571877972/answer/2818390104?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"什么年代还在用传统 Pjax? —— 自定义 Pjax 提升页面加载速度","date":"2022-12-15 04:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>Hexo 属于静态博客，很多同学给自己的博客加上 Pjax 是为了音乐播放器等功能不中断。</p>\n<p>之前我也想过对博客和主题加入 Pjax 支持，但经过一番分析后觉得，这不仅引入了一个巨大的 <code>jquery.pjax.js</code>，反而优化效果不明显。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8E%9F%E7%90%86\" class=\"headerlink\" title=\"原理\"></a>原理</h2>\n<p>其实，Pjax 的原理并不复杂。或许说，README 一开始就告诉你了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">pjax = pushState + ajax</span><br></pre></td></tr></table></figure><p>其中 <code>ajax</code> 用于页面的新内容，<code>pushState</code> 改变浏览器状态。</p>\n<p>很简单吧。</p>\n<p>事实上，<code>pjax</code> 并不应该应用于整个页面当中。而应该只是局部更改。</p>\n<p>这样，Blog 当中的导航栏、样式文件等就不需要重复下载与预览。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%88%86%E6%9E%90\" class=\"headerlink\" title=\"分析\"></a>分析</h2>\n<p>以我使用 Miracle 为主题的博客为例，进入首页，按 <code>F12</code> 查看页面 Elements.</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.18/rawimg/2022-12-15_12-32-37.png\"></p>\n<p>可以发现，页面主要更改的也就是 <code>#page-main</code> 部分，只需要实现动态刷新这部分的内容就可以了。</p>\n<p>那怎么实现呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%B0%8F%E5%8C%96%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8E%A5%E5%8F%A3\" class=\"headerlink\" title=\"最小化的数据接口\"></a>最小化的数据接口</h2>\n<p>现在生成的页面当中，有 <code>&lt;head&gt;</code> 部分声明大量样式与元信息，<code>&lt;body&gt;</code> 之下重复的页脚、导航栏，还有每个页面下方都有的一些 <code>&lt;script&gt;</code>。</p>\n<p>很明显，我们不需要这些。我们只要 <code>#page-main</code> 中的主要内容。</p>\n<p>最重要的是，Hexo 是静态博客，这一点只能在生成文件时进行。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%BD%BD%E5%85%A5-HTML\" class=\"headerlink\" title=\"载入 HTML\"></a>载入 HTML</h3>\n<p>我是用 Cheerio 模块帮我完成这一工作。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">'cheerio'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">\"path\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> filePath = path.resolve(<span class=\"string\">'public/'</span>);</span><br></pre></td></tr></table></figure><p>定义一个 <code>parse function</code>，打开文件并解析相关信息，顺便把不是 HTML 的文件排除掉。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> parse = <span class=\"function\">(<span class=\"params\">filename, fullpath</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 不是 .html 我不要</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!filename.endsWith(<span class=\"string\">\".html\"</span>)) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>然后通过 Cheerio 解析 HTML:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\">  <span class=\"comment\">// 组合新文件名</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> filepath = fullpath+<span class=\"string\">\".page.json\"</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 读取文件内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> pageContent = fs.readFileSync(fullpath).toString();</span><br><span class=\"line\">  <span class=\"comment\">// 解析页面内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> $pg = cheerio.load(pageContent);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> rtData = {};</span><br><span class=\"line\">...}</span><br></pre></td></tr></table></figure><p>然后获取页面的标题和 <code>#page-main</code> 下的 HTML.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\"><span class=\"comment\">// 页面标题</span></span><br><span class=\"line\">    rtData.title = $pg(<span class=\"string\">\"title\"</span>).text();</span><br><span class=\"line\">    <span class=\"comment\">// OR $pg(\"#page-main\").html()</span></span><br><span class=\"line\">    <span class=\"comment\">// 我这么写是因为主题 #page-main 下还有 script 无法执行</span></span><br><span class=\"line\">    rtData.page = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div class=\"mg-top\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">${$pg(<span class=\"string\">\".mg-top\"</span>).html() || <span class=\"string\">\"\"</span>}</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;footer class=\"text-center\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">${$pg(<span class=\"string\">\"footer\"</span>).html() || <span class=\"string\">\"\"</span>}</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/footer&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div class=\"p-btn\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">${$pg(<span class=\"string\">\".p-btn\"</span>).html() || <span class=\"string\">\"\"</span>}</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span>;</span><br><span class=\"line\">    rtData.path = filename;</span><br><span class=\"line\">...}</span><br></pre></td></tr></table></figure><p>页面中还有一些 <code>script</code>，比如阅读进度、懒加载等。所以需要一个 <code>extraJS</code> 放置额外的 Script.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\">    rtData.extraJS = []</span><br><span class=\"line\">    <span class=\"comment\">// 只解析 #page-main 下的 script</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> $pageMain = cheerio.load($pg(<span class=\"string\">\"#page-main\"</span>).html());</span><br><span class=\"line\">    $pageMain(<span class=\"string\">'script'</span>).map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i, el</span>) </span>{</span><br><span class=\"line\">        <span class=\"comment\">// 尝试往 extraJS 中 push 相关代码</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> {rtData.extraJS.push($pageMain(<span class=\"built_in\">this</span>)[<span class=\"number\">0</span>].children[<span class=\"number\">0</span>].data);} <span class=\"keyword\">catch</span>(e) {}</span><br><span class=\"line\">        $pageMain(<span class=\"built_in\">this</span>).remove();</span><br><span class=\"line\">    });</span><br><span class=\"line\">...}</span><br></pre></td></tr></table></figure><p>最后，将 JSON 写入文件中。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\">    fs.writeFileSync(filepath, <span class=\"built_in\">JSON</span>.stringify(rtData));</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E4%BB%B6%E9%80%92%E5%BD%92\" class=\"headerlink\" title=\"文件递归\"></a>文件递归</h3>\n<p>我们还需要一个函数递归 <code>public</code> 目录下的所有文件，这个不用多说。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fileDisplay</span>(<span class=\"params\">filePath</span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 根据文件路径读取文件，返回文件列表</span></span><br><span class=\"line\">    fs.readdir(filePath, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, files</span>) </span>{</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.warn(err, <span class=\"string\">\"读取文件夹错误！\"</span>)</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            <span class=\"comment\">// 遍历读取到的文件列表</span></span><br><span class=\"line\">            files.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">filename</span>) </span>{</span><br><span class=\"line\">                <span class=\"comment\">// 获取当前文件的绝对路径</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> filedir = path.join(filePath, filename);</span><br><span class=\"line\">                <span class=\"keyword\">var</span> fullname = filedir.split(<span class=\"string\">\"public\"</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">                fs.stat(filedir, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">eror, stats</span>) </span>{</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (eror) {</span><br><span class=\"line\">                        <span class=\"built_in\">console</span>.warn(<span class=\"string\">'获取文件 Stats 失败!'</span>);</span><br><span class=\"line\">                    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> isFile = stats.isFile(); <span class=\"comment\">// 是文件</span></span><br><span class=\"line\">                        <span class=\"keyword\">var</span> isDir = stats.isDirectory(); <span class=\"comment\">// 是文件夹</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isFile) {</span><br><span class=\"line\">                            parse(fullname, filedir);</span><br><span class=\"line\">                        }</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isDir) {</span><br><span class=\"line\">                            fileDisplay(filedir); <span class=\"comment\">// 递归，如果是文件夹，就继续遍历该文件夹下面的文件</span></span><br><span class=\"line\">                        }</span><br><span class=\"line\">                    }</span><br><span class=\"line\">                });</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br><span class=\"line\">}</span><br><span class=\"line\">fileDisplay(filePath);</span><br></pre></td></tr></table></figure><p>最后运行这个 Node.js 文件，就可以看到 <code>public/</code> 目录下多出很多 <code>***.page.json</code> 文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84\" class=\"headerlink\" title=\"基本结构\"></a>基本结构</h3>\n<p>这些文件内容也很简单，基本如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">    <span class=\"comment\">// 页面的标题</span></span><br><span class=\"line\">    <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Hello World\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 内容</span></span><br><span class=\"line\">    <span class=\"attr\">\"page\"</span>: <span class=\"string\">\"...\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 路径</span></span><br><span class=\"line\">    <span class=\"attr\">\"path\"</span>: <span class=\"string\">\"/foo/bar\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">// JS</span></span><br><span class=\"line\">    <span class=\"attr\">\"extraJS\"</span>: ['alert(<span class=\"string\">\"Hello World\"</span>);']</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E7%AB%AF-pjax-js\" class=\"headerlink\" title=\"前端 pjax.js\"></a>前端 <code>pjax.js</code>\n</h2>\n<p>新建一个 <code>pjax.js</code>。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%9B%BF%E6%8D%A2%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"替换链接\"></a>替换链接</h3>\n<p>我们需要先将页面当中所有本站链接转为 Pjax 的 Jump 函数。</p>\n<p>判断条件是：有链接，不带 hash，且为本站链接</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 转换页面中的链接为 Pjax 链接</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $pjax_convertAllLinks = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\"><span class=\"comment\">// 所有的 a 标签</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> linkElements = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> linkElements) {</span><br><span class=\"line\">        <span class=\"comment\">// 有链接，不带 hash，且为本站链接</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i.href &amp;&amp; !i.href.includes(<span class=\"string\">\"/#\"</span>) &amp;&amp; (i.href.startsWith(<span class=\"string\">\"/\"</span>) || i.href.match(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"built_in\">window</span>.location.hostname)))) {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> thisLink = <span class=\"keyword\">new</span> URL(i.href).pathname+<span class=\"keyword\">new</span> URL(i.href).hash;</span><br><span class=\"line\">            i.href = <span class=\"string\">`javascript:$pjax_jump('<span class=\"subst\">${thisLink}</span>');`</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>另外，要转化页面链接为全路径。</p>\n<p>这里参考了下 ChenYFan 的 Service Worker 函数，需要根据实际情况做出调整。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 转换路径为全路径</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $pjax_fullpath = <span class=\"function\">(<span class=\"params\">path</span>) =&gt;</span> {</span><br><span class=\"line\">    path = path.split(<span class=\"string\">'?'</span>)[<span class=\"number\">0</span>].split(<span class=\"string\">'#'</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (path.match(<span class=\"regexp\">/\\/$/</span>)) {</span><br><span class=\"line\">        path += <span class=\"string\">'index.html'</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!path.match(<span class=\"regexp\">/\\.[a-zA-Z]+$/</span>)) {</span><br><span class=\"line\">        path += <span class=\"string\">'/index.html'</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// $pjax_fullpath('/') =&gt; /index.html</span></span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#%E8%B7%B3%E8%BD%AC\" class=\"headerlink\" title=\"跳转\"></a>跳转</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 跳转页面</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $pjax_jump = <span class=\"keyword\">async</span> (path) =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">        <span class=\"comment\">// 是 # 就别跳转了</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (path.startsWith(<span class=\"string\">\"#\"</span>)) {</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.hash = path;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">// 加载动画</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> loading = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br><span class=\"line\">        loading.innerHTML = <span class=\"string\">`&lt;div style=\"position: fixed;top:0;left:0;z-index:99999;display: block;width: 100%;height: 4px;overflow: hidden;background-color: rgba(63,81,181,.2);border-radius: 2px;\"&gt;&lt;div class=\"progress-indeterminate\" style=\"background-color: #3f51b5;\"&gt;&lt;/div&gt;&lt;style&gt;#page-main{transition:0.2s;}.progress-indeterminate::before{position:absolute;top:0;bottom:0;left:0;background-color:inherit;-webkit-animation:mdui-progress-indeterminate 2s linear infinite;animation:mdui-progress-indeterminate 2s linear infinite;content:' ';will-change:left,width;}.progress-indeterminate::after{position:absolute;top:0;bottom:0;left:0;background-color:inherit;-webkit-animation:mdui-progress-indeterminate-short 2s linear infinite;animation:mdui-progress-indeterminate-short 2s linear infinite;content:' ';will-change:left,width;}@keyframes mdui-progress-indeterminate{0%{left:0;width:0;}50%{left:30%;width:70%;}75%{left:100%;width:0;}}@keyframes mdui-progress-indeterminate-short{0%{left:0;width:0;}50%{left:0;width:0;}75%{left:0;width:25%;}100%{left:100%;width:0;}}&lt;/style&gt;&lt;/div&gt;`</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 在 body 后加入 &lt;div&gt;</span></span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(loading);</span><br><span class=\"line\">        <span class=\"comment\">// 如果页面中没有 page.css 或 search.css，为防止样式错乱，需要在加载过程中隐藏页面内容</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page_css\"</span>) || !<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"search_css\"</span>)) <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).style.opacity = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 获取页面数据</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> pageData;</span><br><span class=\"line\">        <span class=\"comment\">// 看看 SessionStorage 里有没有缓存</span></span><br><span class=\"line\">        <span class=\"comment\">// 依赖后文的 prefetch</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sessionStorage.getItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>)) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FROM SESSIONSTORAGE\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                pageData = <span class=\"built_in\">JSON</span>.parse(sessionStorage.getItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>));</span><br><span class=\"line\">            } <span class=\"keyword\">catch</span>(e) {</span><br><span class=\"line\">                <span class=\"comment\">// 还是出错就从服务器获取</span></span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FROM SERVER\"</span>);</span><br><span class=\"line\">                pageData = <span class=\"keyword\">await</span> fetch($pjax_fullpath(path) + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json());</span><br><span class=\"line\">                <span class=\"comment\">// 写到 SessionStorage 中</span></span><br><span class=\"line\">                sessionStorage.setItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>, <span class=\"built_in\">JSON</span>.stringify(pageData));</span><br><span class=\"line\">            }</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FROM SERVER\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">// fetch JSON</span></span><br><span class=\"line\">            pageData = <span class=\"keyword\">await</span> fetch($pjax_fullpath(path) + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json());</span><br><span class=\"line\">            sessionStorage.setItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>, <span class=\"built_in\">JSON</span>.stringify(pageData));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">// 补齐页面 CSS</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"search_css\"</span>)) {</span><br><span class=\"line\">            fetch(<span class=\"string\">\"/css/search.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>);</span><br><span class=\"line\">                ele.innerHTML = res;</span><br><span class=\"line\">                ele.id = <span class=\"string\">\"search_css\"</span>;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page_css\"</span>)) {</span><br><span class=\"line\">            fetch(<span class=\"string\">\"/css/page.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>);</span><br><span class=\"line\">                ele.innerHTML = res;</span><br><span class=\"line\">                ele.id = <span class=\"string\">\"page_css\"</span>;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!pageData) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 组合 state</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> state = { <span class=\"attr\">title</span>: <span class=\"string\">''</span>, <span class=\"attr\">url</span>: <span class=\"built_in\">window</span>.location.href.split(<span class=\"string\">\"?\"</span>)[<span class=\"number\">0</span>] };</span><br><span class=\"line\">        <span class=\"comment\">// 利用 history.pushState() 修改地址栏而不跳转</span></span><br><span class=\"line\">        history.pushState(state, <span class=\"string\">''</span>, path);</span><br><span class=\"line\">        <span class=\"comment\">// 修改页面标题</span></span><br><span class=\"line\">        <span class=\"built_in\">document</span>.title = pageData.title;</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"comment\">// 滚动到页面顶部</span></span><br><span class=\"line\">            <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">            <span class=\"comment\">// 写入 HTML</span></span><br><span class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).innerHTML = pageData.page;</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.onscroll = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> pageData.extraJS) {</span><br><span class=\"line\">                <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                    <span class=\"comment\">// eval() 执行 JS</span></span><br><span class=\"line\">                    <span class=\"built_in\">eval</span>(pageData.extraJS[i]);</span><br><span class=\"line\">                } <span class=\"keyword\">catch</span>(e) {}</span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">try</span>{$pjax_prefetch();}<span class=\"keyword\">catch</span>(e){}</span><br><span class=\"line\">            <span class=\"comment\">// 再次转换所有链接</span></span><br><span class=\"line\">            $pjax_convertAllLinks();</span><br><span class=\"line\">        }, <span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"comment\">// 重新显示页面</span></span><br><span class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).style.opacity = <span class=\"number\">1</span>;</span><br><span class=\"line\">            loading.remove();</span><br><span class=\"line\">        }, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">catch</span>(e) {</span><br><span class=\"line\">        <span class=\"comment\">// 有报错 直接跳转</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.warn(e);</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.location.href = path;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>如果使用 <code>window.location.href</code> 修改，那么页面就会刷新。<br>为了实现无刷新跳转，必须要使用 <code>pushState()</code> 更改。</p>\n<p>执行 JavaScript 方面使用 <code>eval()</code> 函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 组合 state</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> state = { <span class=\"attr\">title</span>: <span class=\"string\">''</span>, <span class=\"attr\">url</span>: <span class=\"built_in\">window</span>.location.href.split(<span class=\"string\">\"?\"</span>)[<span class=\"number\">0</span>] };</span><br><span class=\"line\"><span class=\"comment\">// 利用 history.pushState() 修改地址栏而不跳转</span></span><br><span class=\"line\">history.pushState(state, <span class=\"string\">''</span>, path);</span><br><span class=\"line\"><span class=\"comment\">// 修改页面标题</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.title = pageData.title;</span><br><span class=\"line\"><span class=\"comment\">// 滚动到页面顶部</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\"><span class=\"comment\">// 写入 HTML</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).innerHTML = pageData.page;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onscroll = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> pageData.extraJS) {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"comment\">// eval() 执行 JS</span></span><br><span class=\"line\">    <span class=\"built_in\">eval</span>(pageData.extraJS[i]);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span>(e) {}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#Prefetch-amp-Refetch\" class=\"headerlink\" title=\"Prefetch &amp; Refetch\"></a>Prefetch &amp; Refetch</h3>\n<p>此处借鉴乐特关于 Prefetch Page 的源码，当用户打开节流模式或为低速网络时就不要 Prefetch.</p>\n<p>Prefetch 可以提前缓存部分数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> $pjax_prefetch = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 节流和低速网络不要 Prefetch</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> nav = navigator;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {};</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (saveData || <span class=\"regexp\">/2g/</span>.test(effectiveType)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 此处是 Blog 的一些常见链接</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> posts_list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".index-header a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> posts_list) {</span><br><span class=\"line\">        <span class=\"comment\">// 全路径</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> thisLink = $pjax_fullpath(posts_list[i].href);</span><br><span class=\"line\">        <span class=\"comment\">// Session Storage 没有才 Fetch</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!sessionStorage.getItem(thisLink)) {</span><br><span class=\"line\">            fetch(thisLink + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                sessionStorage.setItem(thisLink,res);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>Refetch 用于刷新已有的缓存（虽然 <code>SessionStorage</code> 关闭页面就没了）</p>\n<p>其原理也很简单，<code>SessionStorage</code> 中所有的 Pjax 缓存重新获取就完事了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> $pjax_refetch = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sst = sessionStorage;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> sst) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i.startsWith(<span class=\"string\">\"http://\"</span>) || i.startsWith(<span class=\"string\">\"https://\"</span>)) {</span><br><span class=\"line\">            fetch(i + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                sessionStorage.setItem(i, res);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%80%E4%BA%9B%E4%BC%98%E5%8C%96\" class=\"headerlink\" title=\"一些优化\"></a>一些优化</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#Prefetch-CSS-%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"Prefetch CSS 文件\"></a>Prefetch CSS 文件</h4>\n<p>既然 CSS 文件需要补齐，那么打开页面 5s 后自动 Prefetch 可以提升速度。</p>\n<blockquote><p>5s 后再获取是为了防止阻塞页面。</p></blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"comment\">// Prefetch CSS 文件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"search_css\"</span>)) {</span><br><span class=\"line\">        fetch(<span class=\"string\">\"/css/search.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>)</span><br><span class=\"line\">            ele.innerHTML = res;</span><br><span class=\"line\">            ele.id = <span class=\"string\">\"search_css\"</span>;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">        });</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page_css\"</span>)) {</span><br><span class=\"line\">        fetch(<span class=\"string\">\"/css/page.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>)</span><br><span class=\"line\">            ele.innerHTML = res;</span><br><span class=\"line\">            ele.id = <span class=\"string\">\"page_css\"</span>;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">        });</span><br><span class=\"line\">    }    </span><br><span class=\"line\">}, <span class=\"number\">5000</span>);</span><br></pre></td></tr></table></figure><h4>\n<a href=\"https://blog.yfun.top/#%E5%85%B3%E4%BA%8E-Robots\" class=\"headerlink\" title=\"关于 Robots\"></a>关于 Robots</h4>\n<p>当你运行 <code>$pjax_convertAllLinks();</code> 后，你肯定会发现所有的链接都变成了 <code>javascript:$pjax_jump('/xxx');</code>。这对机器人来说很不友好。</p>\n<p>所以，我们需要排除这些机器人。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> runningOnBrowser = <span class=\"keyword\">typeof</span> <span class=\"built_in\">window</span> !== <span class=\"string\">\"undefined\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> isBot = runningOnBrowser &amp;&amp; !(<span class=\"string\">\"onscroll\"</span> <span class=\"keyword\">in</span> <span class=\"built_in\">window</span>) || <span class=\"keyword\">typeof</span> navigator !== <span class=\"string\">\"undefined\"</span> &amp;&amp; <span class=\"regexp\">/(gle|ing|ro|msn)bot|crawl|spider|yand|duckgo/i</span>.test(navigator.userAgent);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (runningOnBrowser &amp;&amp; !isBot) {</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">try</span>{$pjax_prefetch();}<span class=\"keyword\">catch</span>(e){}</span><br><span class=\"line\">        $pjax_convertAllLinks();</span><br><span class=\"line\">    }, <span class=\"number\">100</span>);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>在启用 Pjax 后，YFun's Blog 传输大小理论上最高缩小 3/4，性能速度均有提升。</p>\n<p>如果你也在使用 Pjax，不妨试试看。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%BF%98%E6%9C%89%E4%B8%80%E4%BA%9B%E9%94%99%E8%AF%AF\" class=\"headerlink\" title=\"还有一些错误\"></a>还有一些错误</h2>\n<p>如果你定义了 <code>onload</code> 等事件，页面没有刷新即代表没有变化，你需要在 <code>$pjax_jump()</code> 中简单清除一下这些信息。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%B9%BF%E5%91%8A%E6%97%B6%E9%97%B4\" class=\"headerlink\" title=\"广告时间\"></a>广告时间</h2>\n<p>我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：<a href=\"https://cloud.tencent.com/developer/support-plan?invite_code=16qkaef2qdvzm\">https://cloud.tencent.com/developer/support-plan?invite_code=16qkaef2qdvzm</a></p>\n","link":"https://blog.yfun.top/posts/2022/pjax/"},{"title":"抛弃静态博客的缺点，用 ESHexoN 在线编辑！","date":"2022-12-04 16:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%80%E4%B9%88%E6%98%AF-ESHexoN\" class=\"headerlink\" title=\"什么是 ESHexoN?\"></a>什么是 ESHexoN?</h2>\n<blockquote><p>ESHexoN 是一款简洁、强大的 Hexo 在线编辑器。</p></blockquote>\n<p>其灵感来自于 <a href=\"https://github.com/HexoPlusPlus/HexoPlusPlus\">HexoPlusPlus/HexoPlusPlus</a> (基于 Cloudflare Workers 的无服务器 Hexo 后端)</p>\n<p>但是，遗憾的是 HPP 突然停止维护，只留下一个 <a href=\"https://github.com/Wexagonal/Wexagonal\">Wexagonal</a>。</p>\n<blockquote><p>However, 这更新速度也太慢了啊喂~</p></blockquote>\n<p><a href=\"https://github.com/Qexo/Qexo\">Qexo</a> 也是一个很不错的项目，但是它基于 Python + MongoDB，不属于我擅长的技术栈，有点劝退。</p>\n<p>于是，ESHexoN 诞生了。它致力于使用 JavaScript Edge Function 构建 Hexo「后端」，实现普通静态博客所不具备的功能，解决大部分静态博客的痛点。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-ESHexoN\" class=\"headerlink\" title=\"如何使用 ESHexoN?\"></a>如何使用 ESHexoN?</h2>\n<blockquote><p>ESHexoN 的使用说明可以参见文档 --&gt; <a href=\"https://eshexon-docs.netlify.app/\">文档链接</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#ESHexoN-%E4%BB%A3%E7%A0%81-amp-%E5%8E%9F%E7%90%86\" class=\"headerlink\" title=\"ESHexoN 代码 &amp; 原理\"></a>ESHexoN 代码 &amp; 原理</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"代码目录\"></a>代码目录</h3>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205115647.png\"></p>\n<p><code>dist</code> 目录存放构建的文件，<code>src</code> 目录为源码，<code>tools</code> 是一些工具，<code>index.js</code> 则为入口文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%90%8E%E7%AB%AF%E7%9A%84%E4%B8%BB%E8%A6%81%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"后端的主要文件\"></a>后端的主要文件</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#src-res-js\" class=\"headerlink\" title=\"src/res.js\"></a><code>src/res.js</code>\n</h4>\n<p><code>res.js</code> 主要负责 HTTP 响应输出，统一输出格式。</p>\n<p>故 ESHexoN API 主要返回格式为:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"statusCode\"</span>: <span class=\"string\">\"...\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"statusInfo\"</span>: <span class=\"string\">\"...\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p><a href=\"https://github.com/ESHexoN/ESHexoN/blob/master/src/res.js\">[Source Code]</a></p>\n<h4>\n<a href=\"https://blog.yfun.top/#src-check-token-js\" class=\"headerlink\" title=\"src/check_token.js\"></a><code>src/check_token.js</code>\n</h4>\n<p><code>check_token.js</code> 主要负责 API 请求的鉴权，所有的鉴权 API 都需要携带 <code>token</code> 发送。</p>\n<p>生成代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> token = md5(userdata[<span class=\"number\">0</span>].username + userdata[<span class=\"number\">0</span>].password + <span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"built_in\">Date</span>.now()).getFullYear()}</span><span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"built_in\">Date</span>.now()).getMonth()+<span class=\"number\">1</span>}</span>`</span>);</span><br></pre></td></tr></table></figure><p>故 ESHexoN Token 格式为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">md5(USERNAME+PASSWORD+YEAR+MONTH);</span><br></pre></td></tr></table></figure><p>过期时间为一个月。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#src-env-js\" class=\"headerlink\" title=\"src/env.js\"></a><code>src/env.js</code>\n</h4>\n<p>ESHexoN 除了依靠 <a href=\"https://github.com/yfun-lab/gh-worker-kv\">yfun-lab/gh-worker-kv</a> 存储主要数据库文件外，还使用环境变量存储基本的 Token、仓库等。</p>\n<p>ESHexoN 自设计之初就预备支持 Cloudflare Workers, Deno 等平台。</p>\n<p>事实上，这两个平台获取环境变量的方式根本不一样。为了在一个代码下同时支持两个平台，<code>env.js</code> 简单的写了个判断。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205120944.png\"></p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%98%AF%E4%B8%8D%E6%98%AF%E7%9B%AE%E5%BD%95%EF%BC%9F%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86\" class=\"headerlink\" title=\"是不是目录？文件遍历\"></a>是不是目录？文件遍历</h4>\n<p>GitHub API 会返回当前目录下的文件和文件夹，但有人的 <code>source/_posts</code> 目录下还有文件夹。根据观察发现，文件夹的 <code>type</code> 为 <code>dir</code>，而普通文件为 <code>file</code>，那么只需要一个简单的判断，就可以返回单个目录下所有文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205121416.png\"></p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E5%86%99%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"写文件\"></a>写文件</h4>\n<p>在写文件之前，我们需要先获取该文件的 <code>sha</code> 值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205121728.png\"></p>\n<blockquote><p>这是因为 GitHub 规定修改文件必须在 <code>body</code> 中携带源文件 <code>sha</code>.</p></blockquote>\n<p>同时，文件还必须接受 Base64 编码。这个问题很好解决，ESHexoN 的仓库依赖中已经包含。当然，我更倾向于在前端编码文本，在后端直接 PUT。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E9%82%A3%E5%89%8D%E7%AB%AF%E5%91%A2%EF%BC%9F\" class=\"headerlink\" title=\"那前端呢？\"></a>那前端呢？</h3>\n<p>以上是后端的主要代码。因为 ESHexoN 是前后端分离项目，并且开放跨域，所以我们构建了一个官方前端。只需要输入你的用户名、密码和后端地址就可以开始使用。</p>\n<p>前端的代码也是开源的，基于 Vue + Vuetify 构建，<a href=\"https://github.com/ESHexoN/eshexon-frontend\">在 GitHub 上查看它</a></p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%BB%86%E8%8A%82\" class=\"headerlink\" title=\"一些小细节\"></a>一些小细节</h4>\n<p>早在 HexoPlusPlus <code>dev</code> 阶段的时候，ChenYFan 就在群内讨论如何解决 Markdown 编辑器的问题。在当时，EditorMD 的兼容性很差。于是，HPP 上采取的解决方案是：<code>textarea</code> + <code>marked.js</code>。</p>\n<p>然后，HPP 编辑器就是这样的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205122539.png\"></p>\n<p>这并不是一个很好的主意。</p>\n<p>于是在 ESHexoN 上，我们为 Hexo 特性定制了一款简单的编辑器。</p>\n<p>首先，它是由 <a href=\"https://yfun.top/lab/markdown/\">https://yfun.top/lab/markdown/</a> 修改而来的，在部分特性上与其类似。</p>\n<p>但是受限于页面尺寸和小屏幕优化，ESHexoN 的编辑器在大屏上是这样显示的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205122828.png\"></p>\n<p>双栏布局，实时预览。</p>\n<p>为了保证在小屏幕的体验，在小屏幕上将自动收起预览，改为全屏模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205122955.png\"></p>\n<p>如果需要预览，可以点击「预览」按键。</p>\n<p>同时 ESHexoN 的编辑器有自动保存功能，即使写到一半刷新页面或是浏览器崩溃也不用怕，页面内容已经存储到 <code>localStorage</code> 内了。（我也不知道会不会撑炸</p>\n<p>一些基本的搜索功能都得以保留（与 HPP 是十分甚至九分的类似</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205123316.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205123356.png\"></p>\n<p>不仅仅局限于文章，配置文件、代码都可以修改：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205123427.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%9C%A8%E6%9C%AA%E6%9D%A5\" class=\"headerlink\" title=\"在未来\"></a>在未来</h2>\n<p>目前 ESHexoN 还处于 Beta 阶段，部分功能还没有开发完成。</p>\n<p>关于说说、评论等也都在等待开发（最近可能不会有）</p>\n<p>如果在使用中出现了任何的问题，欢迎提 Issue 反馈。</p>\n","link":"https://blog.yfun.top/posts/2022/eshexon/"},{"title":"让阅读无缝衔接 —— JS 获取用户阅读进度","date":"2022-11-11 16:40:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>很多博客中最常见的问题就是：文章很长，但是读者很忙。下次阅读的时候，可能要花一些时间才能恢复到先前的阅读位置。</p>\n<p>如果可以设备间，识别二维码或是一个链接就可以让阅读无缝衔接，直接跳转到相应位置，那么阅读体验就会变得更加优秀。</p>\n<p>那么，开始吧！</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%9E%E8%B7%B5\" class=\"headerlink\" title=\"实践\"></a>实践</h2>\n<p>要知道阅读位置，那么就要知道当前页面的坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getScrollPosition = <span class=\"function\">(<span class=\"params\">el = <span class=\"built_in\">window</span></span>) =&gt;</span> ({</span><br><span class=\"line\">    x: el.pageXOffset !== <span class=\"literal\">undefined</span> ? el.pageXOffset : el.scrollLeft,</span><br><span class=\"line\">    y: el.pageYOffset !== <span class=\"literal\">undefined</span> ? el.pageYOffset : el.scrollTop</span><br><span class=\"line\">});</span><br><span class=\"line\"><span class=\"comment\">// getScollPosition().x =&gt; 页面横坐标; getScrollPosition().y =&gt; 页面纵坐标;</span></span><br></pre></td></tr></table></figure><p>大部分情况下，我们只用关注纵坐标。横坐标大概率为 <code>0</code>。</p>\n<p>我们还需要一个页面滚动的事件，用于记录当前坐标，并储存在临时存储中。</p>\n<p>至于为什么是 <code>sessionStorage</code> 而不是 <code>localStorage</code>，则是因为 <code>localStorage</code> 除手动清除外，不会自动过期。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 此处的 750 是「页面元素的最大宽度」</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\"><span class=\"keyword\">var</span> wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">windowScroll</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 反复修改 确保页面尺寸不改变</span></span><br><span class=\"line\">    wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\">    wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = <span class=\"built_in\">Math</span>.round(getScrollPosition().y);</span><br><span class=\"line\">    <span class=\"comment\">// 组合字符串，同时记录页面坐标，页面宽度和高度</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> p = <span class=\"string\">`<span class=\"subst\">${y}</span>:<span class=\"subst\">${wx}</span>:<span class=\"subst\">${wy}</span>`</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 写入到 sessionStorage 中</span></span><br><span class=\"line\">    sessionStorage.setItem(<span class=\"string\">\"read_y\"</span>, p);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onscroll = windowScroll;</span><br></pre></td></tr></table></figure><p>你可能发现了，此处的变量 <code>p</code>，并不仅仅是「页面纵坐标」，而是「页面高度」与「纵坐标」的组合字符串。</p>\n<p>事实上，如果单纯是纵坐标判断位置，那么在不同高度，不同宽度的设备上，就会出现错位的情况。而同时记录三个信息，就可以还原真实坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// URL 中是否包含传递的坐标信息</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (location.hash.split(<span class=\"string\">\"#read=\"</span>).length &gt; <span class=\"number\">1</span>) {</span><br><span class=\"line\">    <span class=\"comment\">// 分离字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = location.hash.split(<span class=\"string\">\"#read=\"</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 组合乘积，顺滑移动至坐标</span></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 从 sessionStorage 中获取</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>) || <span class=\"string\">\"0:0:0\"</span>;</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>到现在，我们已经完成了 URL 的解析和基本生成。</p>\n<p>那么，URL 即为:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${location.pathname}</span>#read=<span class=\"subst\">${sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>)}</span>`</span>;</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>搭配生成二维码等插件效果更佳。</p>\n<blockquote><p>Miracle 主题将在下个版本中更新该功能。</p></blockquote>\n","link":"https://blog.yfun.top/posts/2022/js-get-users-reading-progress/"},{"title":"React 为什么重新渲染","date":"2022-09-06 08:29:00","description":"\n<p>更新（重新渲染）是 React 的重要特性 —— 当用户与应用交互的时候，React 需要重新渲染、更新 UI，以响应用户的输入。但是，React 为什么会重新渲染呢？如果不知道 React 为什么会重新渲染，我们如何才能避免额外的重新渲染呢？</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/186432/20/28325/37613/631725bbEf2ff226e/66b99021df66578b.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/react-re-renders-101/\">https://blog.skk.moe/post/react-re-renders-101/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/react-re-renders-101/"},{"title":"为什么你不应该在 React 中直接使用 useEffect 从 API 获取数据","date":"2022-08-19 08:53:00","description":"\n<p>React 是一个由 Facebook 开源的、可以在任意平台上构建 UI 的 JavaScript 库。在 React 中，一个常见的 Pattern 是使用 <code>useEffect</code> 搭配 <code>useState</code> 发送请求、将状态从 API（React 外部）同步到 React 内部、用于渲染 UI，这篇文章恰恰在向你介绍为什么你不应该直接这么做。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/180676/37/27394/27265/62ff57f2E600b3725/cff75c5fca39bbcc.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/\">https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"}]