[{"title":"少一点用车的烦恼，多一分出行的便利：MaaS 是什么？","date":"2022-08-10 06:35:54","description":"整合交通资源的 MaaS，让后疫情时代的「数字游民」也拥有自由移动的可能。<a href=\"https://sspai.com/post/74977\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74977"},{"title":"iOS 16 Beta 5 中值得关注的新特性","date":"2022-08-10 03:28:11","description":"变化不多，但也有值得关注的新内容。<a href=\"https://sspai.com/post/75075\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75075"},{"title":"预告 | 8月12日，拆车实验室带电来袭，奥迪Q4 e-tron全网首拆！","date":"2022-08-10 02:37:37","description":"\n<p data-pid=\"TvIPA1pY\">预告 | 8月12日，拆车实验室带电来袭，奥迪Q4 e-tron全网首拆！</p>\n<a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1540430339423502336\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic2.zhimg.com/v2-8a434f6ad63de87f6cbd4b195a02668c.jpeg\" data-lens-id=\"1540430339423502336\"><img class=\"thumbnail\" src=\"https://pic2.zhimg.com/v2-8a434f6ad63de87f6cbd4b195a02668c.jpeg\"><span class=\"content\"><span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span><span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1540430339423502336</span></span></a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhi-qing-67-1?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">拆车实验室</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/551798255?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：一加 Ace Pro 发布、阿维塔 11 发售等","date":"2022-08-10 00:49:10","description":"台州公共交通卡支持 Apple Pay，Beats Fit Pro 推出金·卡戴珊特别版新配色等。<a href=\"https://sspai.com/post/75072\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75072"},{"title":"Unity 宣布成立「Unity中国」合资企业，对游戏行业有哪些影响？","date":"2022-08-09 13:29:04","description":"\n<p data-pid=\"VQjXaDrl\">1</p>\n<p data-pid=\"tVphDp89\">今天Unity真正的新闻其实是下面这条：</p>\n<p data-pid=\"Zb6XMCTx\"><a href=\"http://link.zhihu.com/?target=https%3A//www.reuters.com/markets/deals/applovin-offers-buy-unity-software-2022-08-09/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AppLovin offers to buy Unity Software in $17.5 bln deal</a></p>\n<p data-pid=\"A6kpFYib\">如果大家关注二级市场会发现Unity涨得蛮厉害的。而如果AppLovin这笔收购能成的话，他们将整合出全球最有力App类广告竞争者之一。</p>\n<p data-pid=\"nv8t-FzQ\">我比较好奇Unity中国之后跟AppLovin中国会是什么关系（如果这单收购达成）。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-90c9b16fd60b82d65a4f0f61a26fcc6a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1170\" data-rawheight=\"1807\" data-watermark=\"original\" data-original-src=\"v2-90c9b16fd60b82d65a4f0f61a26fcc6a\" data-watermark-src=\"v2-ec5dab52b795f276a916f5ac75f8d5ef\" data-private-watermark-src=\"v2-d0a11ce0f6580c1f8246f96c08c1573b\"></p>\n<p data-pid=\"FCWPUqbU\">2</p>\n<p data-pid=\"2f31ctMz\">说回Unity中国。其实大家想知道的还是一个“为什么要拆“的问题。</p>\n<p data-pid=\"SZw7AlDG\">最主要问题其实在于，合规。</p>\n<p data-pid=\"xkulDSlJ\">以前其他回答也说过，Unity的主营业务其实是，广告。但Unity在国内客户中的SoW并不算非常高，有很大原因就是因为Unity这家公司的性质导致一些toB业务开展很困难。</p>\n<p data-pid=\"w0g14vrt\">这次“拆“出来（确切说做合资），实际上很大程度上就是为了有一个中方主体。这样的话，无论是广告业务的进一步拓展，还是说技术合作技术支持，都会有更进一步的空间可以做。</p>\n<p data-pid=\"olVzm5DI\">当然还有地缘政治考量，这个不必多说。</p>\n<p data-pid=\"ckWK-wi_\">3</p>\n<p data-pid=\"r-zrOttr\">新的投资方本质上是战投们凑凑分子的事情，Unity这个名字其实已经证明了它在几条热门赛道上拥有非常好的想象力。所以几家比较大的互娱相关公司都来了。</p>\n<p data-pid=\"efkbKzp8\">猪鹅不进的主要原因是，反垄断（另外还有部分原因是股东之间的利益相关）。毕竟这个deal其实已经非常久了。要是现在才开始那猪鹅肯定有。</p>\n<p data-pid=\"XMfnypsd\">但我没想到的是最后估值只在10亿刀，其实是偏低的。毕竟从Unity出来的某啥都没有的元宇宙项目也差不多这个估值对吧。</p>\n<p data-pid=\"1yVqXbMr\">4</p>\n<p data-pid=\"v_9CNl_n\">后续影响其实还好。因为本质上Unity中国起到的工作还是以支持为主。如前所说，我感觉最直接的变化其实是在广告侧，技术合作也会更多。</p>\n<p data-pid=\"pIOB63pl\">其他我认为不会有太明显的变化，有也是更多向好。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/547720778/answer/2618332990?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/547720778/answer/2618332990?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">17 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/547722218?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">Unity 将成立全新合资公司，该公司发展前景如何？</a><br><a href=\"http://www.zhihu.com/question/546755755?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">消息称游戏引擎公司 Unity 拟分拆中国业务，这意味着什么？</a><br>\n","link":"http://www.zhihu.com/question/547720778/answer/2618332990?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价原 SFC 游戏《LIVE A LIVE（时空勇士）》以及其 Switch 重制？","date":"2022-08-09 11:38:18","description":"\n<p data-pid=\"z-I2T-zs\">前段时间偶然知道了这款游戏，瞬间就被它的概念所吸引了——不同主角、不同风格的篇章、最终汇集在一起——妥妥的跨界联动，直击我这个联动爱好者的死穴。</p>\n<p data-pid=\"oiykbc6d\">所以我也是在第一时间体验了试玩版并入手重制版，如今已经大体通关，来写点自己的随想。</p>\n<p data-pid=\"yIdnXGfn\">因为我不是个很看重玩法的玩家（本作里玩法最精彩的“幕末篇”反而让我十分痛苦），所以本篇文章不是什么游戏测评，只是单纯的借题发挥。</p>\n<h2>“另一个故事（アナザーストーリー）”与“精选集（オムニバス）”</h2>\n<p data-pid=\"oAFWEuPe\">很多人拿《八方旅人》和《时空勇士》做对比，认为本作是《八方旅人》的老祖宗，个人倒是有些不同的看法。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-787c3231bc4acef9c3ec7e6cf477f77f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"599\" data-rawheight=\"337\" data-watermark=\"original\" data-original-src=\"v2-787c3231bc4acef9c3ec7e6cf477f77f\" data-watermark-src=\"v2-9a443e3fabd80bea2819c6ece3f98299\" data-private-watermark-src=\"v2-e7175199b9dbc5b470b8d5ed193de809\"></p>\n<p data-pid=\"QJ0j8iIS\">《八方旅人》和《时空勇士》只是在“可操作多个主角”这一点上比较类似，但两者的风格有些根本上的差异。</p>\n<p data-pid=\"z-RRYz6i\">《八方旅人》的主角再多，这些人依然是生活在同一片天空下、同一个大陆上的，每个人的故事都是其他人的番外和补完，侧重于展现的是同一世界中的众生相。故事风味更像是日语中所谓的“另一个故事（アナザーストーリー，another story）”。</p>\n<p data-pid=\"FQXWME4u\">而《时空勇士》则是实打实的不同世界、不同舞台的多个主角，更加侧重这些独立故事的不同风味，展示的是“将不同风格的独立篇章混合在一起”的这个概念本身，也就是日语中所谓的“精选集（オムニバス，omnibus）”。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-dfc8a02b5b6d5c8ab0d26ef69efd899b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"630\" data-watermark=\"original\" data-original-src=\"v2-dfc8a02b5b6d5c8ab0d26ef69efd899b\" data-watermark-src=\"v2-8d7819d789db16b3f2fc76a7b9bd370e\" data-private-watermark-src=\"v2-1a7d3347f4e9d58a45dc588b6722de1c\"></p>\n<p data-pid=\"DC-HnNuw\">从这个内核出发的话，《八方旅人》更像漫威宇宙，而《时空勇士》则更像被强行串在一起的《爱，死亡与机器人》。</p>\n<p data-pid=\"JEkmBCQ0\">《八方旅人》最终部分的“齐聚一堂”，是真的该风格下有必要的齐聚一堂；而《时空勇士》最终部分的“齐聚一堂”，更像是彩蛋性质的整活儿，因为其游戏的重点“多元风格”，早已在各个独立篇章中被展示完毕了。</p>\n<p data-pid=\"PKQZC9Ml\">结果在最关键的“联动”部分，《八方旅人》反而做得不如《时空勇士》好，这不得不说是一个令人遗憾的意外。</p>\n<h2>黄金年代的横切面</h2>\n<p data-pid=\"rXI4Z54X\">比起风格本身，本作借用这种风格展示出来的内容是我觉得更加值得深入咀嚼和品味的部分。</p>\n<p data-pid=\"IVkc6kWP\">在我看来，游戏中的八个独立篇章（最终章除外）是日本战后所有流行文化的精华与凝缩，让我在游玩之余感慨不已。</p>\n<p data-pid=\"Y5FfcNSt\">既为制作者呈现出的丰富多元的内容而感慨，又为当时的日本玩家能够身处于一个将这些文化元素兼容并包的丰盈环境而感慨。</p>\n<h3>《原始篇》：一切的起源</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-8ba9c0c955881d8a4eb7756f5ef2d865_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"454\" data-watermark=\"original\" data-original-src=\"v2-8ba9c0c955881d8a4eb7756f5ef2d865\" data-watermark-src=\"v2-838b72dbf4dd0de8a3d3af6cf68ec240\" data-private-watermark-src=\"v2-63b68d82cba7c866be814d02118c3345\"></p>\n<p data-pid=\"dY1xwu63\">和另外几个独立篇章相比，原始篇并未承载过多对流行文化元素的戏仿，或者说，它戏仿的“文化元素”并没有其他独立篇章的戏仿对象那么流行，以至于人们未能明确意识到这件事情。</p>\n<p data-pid=\"SBfCBvlO\">所以当人们提到本作的原始篇，往往只能退而求其次，强调“没有台词，只通过图像进行交流”的玩法上的趣味性。</p>\n<p data-pid=\"VZYfqM85\">实际上原始篇中对“原始文明”的描绘，或者说“原始文明”这种流行文化元素，很可能是来自于小学馆旗下漫画家圆山俊二创作的漫画作品《森林小猎人》（ギャートルズ）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-243c3dfcda42e88544d589d85e9187f3_720w.jpg?source=b1748391?rss\" data-caption=\"这个作品的动画版有些地方台引进过，所以可能国内部分人应该听说过\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"380\" data-watermark=\"original\" data-original-src=\"v2-243c3dfcda42e88544d589d85e9187f3\" data-watermark-src=\"v2-d7bb348f542fca40c30806854656d8ec\" data-private-watermark-src=\"v2-43a1fae6073f0dc554797d893ecd47cd\" data-tags=\"porn\"></p>\n<p data-pid=\"7tlFrgV4\">2022年的我们并不能很好地理解这部搞笑漫画在1994年的日本人心中有着怎样的地位。</p>\n<p data-pid=\"A2RbHMKf\">不过本作原始篇中的角色形象和人物关系（主角和大猩猩的组合）确确实实有着《森林小猎人》的影子；无独有偶，同时期发售的知名大作《chrono trigger》中对原始人的描绘也疑似受到了《森林小猎人》这部作品的影响。</p>\n<p data-pid=\"xSU6bhgA\">综合观之，“原始文明”这种文化符号显然也是当时某种风潮下的产物。而尽管这种文化符号、这种风潮放在今天来看并没有那么强的影响力，却依然无法影响原始篇的重要性。</p>\n<p data-pid=\"qrOImOFl\">因为“原始篇”，是《时空勇士》这部游戏的起源。</p>\n<p data-pid=\"IFzJ9VqO\">1993年12号《月刊corocoro》，漫画家小林善范在杂志上刊登了自己创作的原始文明风情的插画，并以此为概念募集游戏制作方制作游戏<sup data-text=\"\" data-url=\"https://ja.wikipedia.org/wiki/%E3%83%A9%E3%82%A4%E3%83%96%E3%83%BB%E3%82%A2%E3%83%BB%E3%83%A9%E3%82%A4%E3%83%96#%E6%A6%82%E8%A6%81\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>。以此为契机，才有了后来史克威尔与小学馆的跨界合作，也才有了诸多小学馆漫画家为本作设计角色的梦幻联动阵容。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a08e58ab56e633ce65a2ff89070aeaa1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"600\" data-watermark=\"original\" data-original-src=\"v2-a08e58ab56e633ce65a2ff89070aeaa1\" data-watermark-src=\"v2-368ef8203068ee5fca50c276cbf2af47\" data-private-watermark-src=\"v2-8f444d4fe35209f5923787582834e6a7\"></p>\n<p data-pid=\"zRh57SSD\">90年代的《少年sunday》新人辈出、连载阵无比坚实，堪称该杂志最后的辉煌岁月；90年代的《月刊corocoro》在跨媒介领域无比活跃、一度压得《少年jump》喘不过气来。</p>\n<p data-pid=\"W9O1unJ9\">大手一挥，旗下就能找出青山刚昌、岛本和彦、皆川亮二等重量级人物为游戏创作保驾护航。</p>\n<p data-pid=\"NwHhCqMH\">毫无疑问，那是属于小学馆的黄金年代。</p>\n<h3>幕末篇：集“时代剧”之大成</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-031bc8780c739e870efb3d8f2a04cd67_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1488\" data-watermark=\"original\" data-original-src=\"v2-031bc8780c739e870efb3d8f2a04cd67\" data-watermark-src=\"v2-99f5faa36692ed15e865eacb57833ef9\" data-private-watermark-src=\"v2-03d79a485834717a719399ab674fc61e\"></p>\n<p data-pid=\"hxDZg47Q\">你不得不承认，当一个作品里什么元素都沾点的时候，日本人总是会对自家那点东西格外的用心。幕末篇无论是别出心裁的玩法、充满历史典故的登场角色还是重制版后整个翻修了一遍的尾手城，都格外的精致，而且饱满。</p>\n<p data-pid=\"mgMAT390\">当然了，支撑起这份饱满且精致的，是日本“时代剧”题材经年累月的积淀。</p>\n<p data-pid=\"J6clJK5k\">从牧野省三到黑泽明，从《忠臣藏》到《眠狂四郎》。活跃于战国、江户、幕末的忍者、武士、任侠的故事被一代又一代的日本创作者反复地讲、不断地讲，塑造并重塑着那个“被讲述的日本”的形象。</p>\n<p data-pid=\"dUHNit8X\">黑色紧身衣外披锁子甲的神秘忍者、性格爽朗胸怀大志的坂本龙马、孤身赴命贯彻忠义的故事模式、穿梭上下变化万千的机关城池，这些幕末篇中的经典元素的确立均非一朝一夕之功，而是从无数“时代剧”故事中提炼出的精华。</p>\n<p data-pid=\"DIHYyTi-\">历经了明治的勃兴、战前的繁盛、战后的一时凋敝与黑泽明时代的复兴，到了90年代，“时代剧”这种题材已经成为日本大众文化中不可或缺的重要组成部分。</p>\n<p data-pid=\"-PLbT3k_\">这个重要组成部分延伸进游戏中、延伸到《时空勇士》里，就是幕末篇。</p>\n<h3>功夫篇：乘着港产功夫电影的东风</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-183a1d1b53580afe857c2efe3be428ba_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"670\" data-rawheight=\"862\" data-watermark=\"original\" data-original-src=\"v2-183a1d1b53580afe857c2efe3be428ba\" data-watermark-src=\"v2-5f28bc1b32dddd285f07d4af03e9b74f\" data-private-watermark-src=\"v2-1434d9d2620ed129315bf6c1004fb0aa\"></p>\n<p data-pid=\"a3RLSKoF\">我原以为功夫篇的中国味这么浓，又是和小学馆漫画家合作，那肯定是交给中国通藤田和日郎来负责角色设计，没想到制作名单里根本没有藤田。后来发现负责人是《拳儿》的作画藤原芳秀，那确实是无话可说，没人比他更合适了。</p>\n<p data-pid=\"r-6IzJ9M\">如果说幕末篇中的日本舞台和日本时代剧元素让中国玩家感到陌生，那功夫篇里随处可见的香港功夫篇元素就实在是太让我们熟悉了。</p>\n<p data-pid=\"nCfyotZQ\">论形，功夫篇有孙悟空猪八戒沙悟净、有李小龙洪金宝元彪、有成龙专属的日语吹替、有行侠仗义除恶惩奸的经典功夫片桥段等无数经典要素。</p>\n<p data-pid=\"hVNFnVle\">论神，功夫篇抓住了中国故事中里常常出现的“师徒”、“传承”和“武道精神”等主题，刻画出了一副短小精悍的武林故事。</p>\n<p data-pid=\"ZGlxkBBp\">虽然不乏中国人奇怪的日语口音、吃饭只吃小笼包、各种从麻将牌里拼凑的人名等奇怪的刻板印象，但确实是忠实地还原出了上世纪七八十年代，随着港产功夫电影在日本的盛行，日本人对中国、中国人、中国故事形成的普遍认知。</p>\n<p data-pid=\"7Axu6jE3\">当年是港片带着中华文化横扫全球的年代，这股风吹进日本，吹到《时空勇士》中，就是功夫篇。</p>\n<h3>西部篇：对硬汉浪漫的追思</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-d2556aaf63054b3ed774be89d22c9ef4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"432\" data-watermark=\"original\" data-original-src=\"v2-d2556aaf63054b3ed774be89d22c9ef4\" data-watermark-src=\"v2-f5a3ae9877c6fd6c90834bff5ee2955c\" data-private-watermark-src=\"v2-6d17c63463e815999d2fd2626f6a69a6\"></p>\n<p data-pid=\"VdJJrTRe\">作为西部片中的一个独特分类，主打硬汉、暴力的意式西部片在上世纪六七十年代红极一时，当年的日本社会同样受其影响颇深，甚至专门发明了マカロニ・ウェスタン（Macaroni Western，通心粉西部片）来称呼此种影片。</p>\n<p data-pid=\"-pRKZ9ZE\">不少漫画家诸如原哲夫、荒木飞吕彦都是这类影片的忠实爱好者，前者的《北斗神拳》中有着不少通心粉西部片的味道，后者则干脆把克林特·伊斯特伍德搬到了漫画中当主角。</p>\n<p data-pid=\"jZA1T3FP\">一剑西来的硬汉文化与日本传统的武士道相得益彰，共同为七十年代日本文化领域的热词“热血”、“男子汉”、“根性”作注脚。虽然这份带有英雄主义色彩的硬汉潮随着80年代青少年文化的勃兴而日渐式微，但作为曾经繁荣一时的文化现象，放浪的西部元素依然润物细无声的影响着后来的几代人。</p>\n<p data-pid=\"uffLvyIv\">就像西部篇最后小男孩对日落的呼唤一般，这份追思照进《时空勇士》中，就是西部篇。</p>\n<h3>现代篇：时下最流行的格斗游戏</h3>\n<p><img src=\"https://pica.zhimg.com/v2-4de8731b54bc12b0210dfc056cd779de_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"339\" data-watermark=\"original\" data-original-src=\"v2-4de8731b54bc12b0210dfc056cd779de\" data-watermark-src=\"v2-e3e942bfee641ec087ee8284c5c2e17e\" data-private-watermark-src=\"v2-fcb369b47910364ace8131ee7d938c07\"></p>\n<p data-pid=\"J4mTW6dy\">我原以为皆川亮二应该去负责中二感爆棚的近未来篇或者充满科幻味道的SF篇，没想到是一路到尾打不停的现代篇。</p>\n<p data-pid=\"5b1ZCg9d\">你有没有想过，为啥名为“现代”的部分，主要内容却是个格斗游戏？</p>\n<p data-pid=\"OJ-fnoDU\">因为90年代最热门的游戏类型，就是格斗游戏。</p>\n<p data-pid=\"mCB6WWeo\">1991年，动作天尊卡普空发行《街头霸王2》，以高完成度的动作系统掀起一股动作游戏热潮。在这一热潮推动下，各大游戏厂商纷纷推出格斗游戏填满争个日本游戏市场（其中就包括墙内开花墙外香的《拳皇》系列以及光荣公司的无双系列始祖《三国无双》）。</p>\n<p data-pid=\"c-HyVrye\">除此之外，现实世界的1993年，日本格斗赛事K-1正式召开，引发无数观众对格斗技的热情与兴趣。</p>\n<p data-pid=\"lSlEJMGZ\">这份流行照进漫画领域中，也间接引发了90年代格斗漫画的勃兴以及战斗漫画中格斗要素的增多等大的趋势。</p>\n<p data-pid=\"zP1W_KLL\">总而言之，90年代就是格斗技在日本最热门的年代。既然如此，一款1994年发行的游戏将“现代篇”的内容敲定为和各路高手战个痛快岂不是理所当然的事情吗？</p>\n<p data-pid=\"CWw9nfRf\">换做如今的日本，恐怕“现代篇”大概要变成大型生存类游戏（荒野行动）或者抽卡手游（原神）吧。</p>\n<h3>近未来篇：日式动画的醍醐味</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-fb2cace0cda398a13b5102e1b2bedf94_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"1362\" data-watermark=\"original\" data-original-src=\"v2-fb2cace0cda398a13b5102e1b2bedf94\" data-watermark-src=\"v2-19a39a795eed6312810329deb20c545e\" data-private-watermark-src=\"v2-4ee1ac097e82376c62ba1b36c1f56319\"></p>\n<p data-pid=\"dkAyNEQ4\">这回到我的领域了。</p>\n<p data-pid=\"zk1K8Bj0\">如果说现代篇和中世篇分别戏仿了日式格斗游戏和日式RPG游戏，那么近未来篇就是把日式动画（以及漫画）的精髓扒了个一干二净，属于是ACG不分家。</p>\n<p data-pid=\"tNApyPgK\">主角叫akira，主要能力是念动力，是否能让你联想到大友克洋（《阿基拉》）？</p>\n<p data-pid=\"nMbALPs0\">主角操纵一个从湖底冒出来的大铁皮机器人，是否能让你联想到横山光辉（《铁人28号》）和永井豪（《魔神Z》）？</p>\n<p data-pid=\"BjpK84tK\">主角好哥们无法松骑个摩托车、主角哥俩的热血对白以及“夜露死苦”，是否能让你联想到诸多不良少年漫画？</p>\n<p data-pid=\"9t6iwD8z\">象征着英雄崇拜和追求力量的巨大机器人，象征着男儿热血意气的不良少年以及带着日本动画打开全球局面的超能力小子阿基拉，这些诞生于战后、发展于高速成长期、完善于泡沫时代的日本动画（以及漫画）的独特表达范式，是否能让你回到那个日本动画（以及漫画）最意气风发的黄金年代？</p>\n<p data-pid=\"h2IJsEKu\">以及这篇章的名字叫“近未来”，却处处充满着昭和时代的醍醐味，甚至某些道具就写明自己来自于“昭和”，这一点也颇值得玩味。</p>\n<p data-pid=\"7xjisAwI\">将战后四十多年的动漫文化浓缩成一段经典故事，《时空勇士》的近未来篇就是有这种醍醐味。</p>\n<h3>SF篇：对科幻的崇高敬意</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-1f4dab37335cdab4fc95d3c2cab52282_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"423\" data-rawheight=\"600\" data-watermark=\"original\" data-original-src=\"v2-1f4dab37335cdab4fc95d3c2cab52282\" data-watermark-src=\"v2-09b53a25974e08b0b4d604651b8184cb\" data-private-watermark-src=\"v2-83c5271428c862e8eb1b03a07f35d2dd\"></p>\n<p data-pid=\"f45NY-ET\">SF篇通篇可见对《2001太空漫游》以及《异形》的致敬（其实原始篇也有）。</p>\n<p data-pid=\"1lVfdOsz\">以1970年的大阪世博会为契机，日本得以再一次以“现代国家”的形象出现在世界面前，重新找回了因战败失去的信心。与之一并回归的，还有国民对现代文明和科学的热情。</p>\n<p data-pid=\"KEuybXqi\">松本零士的《宇宙战舰大和号》，小松左京的《日本沉没》，田中芳树的《银河英雄传说》，一众经典科幻作品都诞生自这个时代。同一时间，好莱坞的《星球大战》系列引进日本，更进一步推动了日本的科幻热。</p>\n<p data-pid=\"vn7ofYpf\">穿越时空，太空漫游，机器人和人类的冲突，讨论种种科幻议题的作品一时间层出不穷，甚至影响着同时代的漫画也渐渐加入了科幻的元素（鸟山明的《龙珠》人造人篇、高桥留美子的《福星小子》等等）。</p>\n<p data-pid=\"8t72CJen\">SF篇严肃深沉的主题和阴郁惊险的气氛，都像是在对这些经典的科幻作品致敬。</p>\n<h3>中世篇：一次叛逆的RPG之旅</h3>\n<p><img src=\"https://pica.zhimg.com/v2-5e7e7585adbcc5de7db45f33483c7213_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"905\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-5e7e7585adbcc5de7db45f33483c7213\" data-watermark-src=\"v2-6f2c0db21afda4841636eb3e81e79eea\" data-private-watermark-src=\"v2-8fcd4d154bb6d7d8c3d905ec20ed6edf\"></p>\n<p data-pid=\"QOkA2FAR\">无需赘言，自《勇者斗恶龙》降生以来，魔王、勇者、公主、圣剑等元素就定格为JRPG的游戏的招牌和看板。</p>\n<p data-pid=\"9v0xGqdY\">到了90年代，玩家们对同类型游戏的了解、熟稔和预设让制作组具备了在这里叛逆一下的充分前提条件。看过了那么多勇者和公主圆满幸福的故事，也是时候出现一场悲剧了。</p>\n<hr>\n<p data-pid=\"MOReKKp5\">日式格斗游戏、日式角色扮演游戏、日本动漫、科幻片、西部片、功夫片、时代剧，这些各具特色的流行文化齐聚一堂，造就了《时空勇士》繁盛、繁华和繁茂的魅力，折射出的是那个文化繁盛、繁华和繁茂的好时代。</p>\n<p data-pid=\"hD70dPfn\">老实讲，我很羡慕。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wo-you-xu-duo-de-xiao-bing-qi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">许多的小兵器</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/322852465/answer/2616727204?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">12 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/327839133?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">在 NS Eshop买游戏，钱扣了，但没有购买成功，怎么办？</a><br><a href=\"http://www.zhihu.com/question/267524618?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么在ns eshop买游戏结账时会比游戏贵出来一些钱？</a><br>\n","link":"http://www.zhihu.com/question/322852465/answer/2616727204?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"一日一技 | 一个注册表键让微软的录制功能停止歧视苹果设备","date":"2022-08-09 09:30:07","description":"Windows 上 Xbox Game Bar 的录制功能很方便，但录制的视频在 Apple 设备上播放不正常，只需要修改一个注册表键就能让微软停止歧视苹果。<a href=\"https://sspai.com/post/75019\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75019"},{"title":"定向运动：集竞速、烧脑、体能、越野为一体的高强度户外运动","date":"2022-08-09 08:33:40","description":"定向运动是一种借助地图、指北针或其他导航工具，在一个设定的范围内，通过途中的各种障碍，快速到达目标点位并完成各个点位任务，最后到达终点的运动。<a href=\"https://sspai.com/post/75052\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75052"},{"title":"借我一小时，来和 500 人一起在线编程","date":"2022-08-09 06:32:16","description":"在「100小时后请叫我程序员」栏目上架之时，曾有派友犀利地提出过一个问题：为什么我要在少数派学编程？在少数派的平台上，泛科技和品质生活类内容固然最为拿手，但我们资深的作者与编辑团队对于「硬核」的编程同 ...<a href=\"https://sspai.com/post/74959\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74959"},{"title":"城市漫步指南（半份）｜愿您在合肥找到「平静」","date":"2022-08-09 03:31:56","description":"前言南京自古以来都是「国家历史文化名城」，高铁通车以后，南京更是来自安徽的朋友们求学、工作的热门目的地，所以南京又有了「徽京」这一玩味的美誉。想必这也是我经常被问及：「你当初为什么选择去合肥而不是南京 ...<a href=\"https://sspai.com/post/74998\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74998"},{"title":"日首相又找联合国秘书长「告状」称，中方军演事关日本安全保障和国民安全，有哪些信息值得注意？","date":"2022-08-09 02:59:28","description":"\n<h3>4个“难道”！外交部反问日本</h3>\n<p data-pid=\"2s85TcQH\">8月8日，外交部发言人汪文斌主持例行记者会。有记者问，近日，日本首相岸田文雄称，日强烈谴责中方军演发射的导弹落入日“专属经济区”，同时表示注意到中方并不承认这一点。岸田称，这攸关日国家和国民安全，对国际社会和平稳定带来严重影响。中方对此有何评论？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3979bf5aab30e91816283a229fa9b51e_720w.jpg?source=b1748391?rss\" data-caption=\"汪文斌 图/外交部官网\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-3979bf5aab30e91816283a229fa9b51e\" data-watermark-src=\"v2-34b7dd672316abb17b9bc282d44d5826\" data-private-watermark-src=\"v2-d59ee9475375d5d0a139ab621c49d348\" data-tags=\"politic\"></p>\n<p><br></p>\n<p data-pid=\"2sKJqrCY\">汪文斌表示：<b>我们坚决反对日方的错误言论和无理指责。无论是法律还是政治、道义层面上，日本都没有资格、没有权利对台湾问题说三道四。</b></p>\n<p data-pid=\"tY2b9spe\">日前，王毅国务委员兼外长在东亚合作系列外长会上已经对日方言论予以严词驳斥。日本曾非法侵占并在台湾实行长达半个世纪的殖民统治，杀害了60多万台湾同胞，掠夺大量当地资源，并强征包括东南亚国家在内的多国劳工，许多人被折磨致死。1943年，中美英发表的《开罗宣言》明确规定，把包括台湾和澎湖列岛在内的日本所窃取的中国领土归还中国。1945年发表的《波茨坦公告》第八条载明，《开罗宣言》必将实施。此后日本接受了《波茨坦公告》，并宣布无条件投降。1972年，中日邦交正常化时签署的中日联合声明明确规定，日本政府充分理解和尊重中国政府关于台湾是中国领土不可分割的一部分的立场，坚持遵循《波茨坦公告》第八条。这样的历史，日本不应当忘记，需要时时反省。</p>\n<p data-pid=\"B3UAXIVF\">日本近来在台湾问题上如此高调，<b>难道忘了签署中日联合声明时所作的承诺？难道是要颠覆中日关系政治基础？难道抱有再次染指中国台湾的野心？难道日方要借此扩充军备、抛弃“和平宪法”、不再走和平发展道路？</b>日方应就这些问题给国际社会一个负责任的交代。</p>\n<p data-pid=\"3dg0mdMf\">至于日方声称中国军队演训活动涉及所谓日本专属经济区，中日在有关海域尚未划界，何来日本专属经济区一说？台湾是中国的领土，中国在自己领土的周边海域进行正常军事演训活动，公开、透明、专业，符合国内法，符合国际法，符合国际惯例，既是对挑衅者的警示，也是维护国家主权和领土完整的正当之举。</p>\n<p data-pid=\"ppjjy-S_\">中方敦促日方认真反省侵略历史，认清台湾问题的高度敏感性，恪守中日四个政治文件原则和迄今所作承诺，停止跟风附和美国涉台消极言行，停止追随配合美“以台制华”错误行径，避免给两国关系带来进一步严重伤害。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhong-guo-wang-25?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">中国网</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/547487669/answer/2617254710?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">483 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/536685435?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">日本加速推进军事正常化进程，频繁演训提升战斗力，此举背后的原因是什么？</a><br><a href=\"http://www.zhihu.com/question/50572763?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">日本的军事组成，在美国军事基地的控制下，日本是否是一个完全主权国家？</a><br>\n","link":"http://www.zhihu.com/question/547487669/answer/2617254710?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：Apple 推送 iOS/iPadOS 16 开发者预览版 Beta 5 等","date":"2022-08-09 00:57:00","description":"腾讯注册微信刷掌商标，Intel 发布 Arc Pro 系列 GPU 等。<a href=\"https://sspai.com/post/75056\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75056"},{"title":"如何评价《明日方舟》对于小车机械的执念？","date":"2022-08-08 12:09:51","description":"\n<p data-pid=\"6ohRetOn\">其实答主这个问题可以分为两个部分，我们分开了一条条回答。</p>\n<p data-pid=\"Ex0Q8QB4\">首先，我们玩家日常所说的小车，一般指的是几个一星干员小车：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9b1f0d6b1816e5a48a1201a0628cbde8_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"1024\" data-watermark=\"watermark\" data-original-src=\"v2-9b1f0d6b1816e5a48a1201a0628cbde8\" data-watermark-src=\"v2-e59d22d96c54f6a1f7c53ada32569e1a\" data-private-watermark-src=\"v2-3ccc0f0457e145a4a0d82a7a725fb68a\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d9de9f6f83fa0c136516958c5b7187c6_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"1024\" data-watermark=\"watermark\" data-original-src=\"v2-d9de9f6f83fa0c136516958c5b7187c6\" data-watermark-src=\"v2-15f814671e054e583e805dd54a0e3b7b\" data-private-watermark-src=\"v2-7e4930d73bb0252e4be34b85ca4d0e1d\"></p>\n<p data-pid=\"HRMxdMlI\">对，就这类，一共到目前为止是4辆。</p>\n<p data-pid=\"CYMdbRZH\">这几辆车很早开始在玩家之间就有一个流传的笑话：</p>\n<p data-pid=\"UA017RL8\">哎，是不是觉得小车这样CV（配音）就随便糊弄一下就好了？</p>\n<p data-pid=\"bT95VOZZ\">毕竟很多同行的最低星角色一般就是这么处理的：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-26bbb0f7e126c8c89f5e43b7df0af504_720w.png?source=b1748391?rss\" data-caption=\"隔壁很有名的大英雄、自爆弓，CV鹤冈聪\" data-size=\"normal\" data-rawwidth=\"428\" data-rawheight=\"605\" data-watermark=\"watermark\" data-original-src=\"v2-26bbb0f7e126c8c89f5e43b7df0af504\" data-watermark-src=\"v2-439bcd05d646995b737cd9ad6741be2d\" data-private-watermark-src=\"v2-8f990c8634a316c6bb8d11de36727041\" data-tags=\"porn\"></p>\n<p data-pid=\"Fzvvr7uL\">虽然Stella一声已经破圈，甚至连奥运会选手都曾经爆出过训练弓箭时会喊，但是在此之前，这个角色的CV鹤冈聪本人确实只是比较普通的声优，可以说是这个角色反过来成就了声优本人。</p>\n<p data-pid=\"sGsx0uLG\">但是方舟这块怎么处理的呢？</p>\n<p data-pid=\"Y5gsjfRu\">小车CV：緑川光、阿部敦。</p>\n<p data-pid=\"bKtvJrpX\">绿川光，圈内人称光叔，知名演绎角色有流川枫、新条直辉、希罗·尤尔、迪卢木多等等。</p>\n<p data-pid=\"E73Nzvvf\">可以说是男性声优中一线人物的代名词之一。</p>\n<p data-pid=\"yRyLO1pS\">阿部敦，大部分人可能会愣一下，但是如果我直接报他角色大名，老二次元肯定立马反应过来：</p>\n<p><img src=\"https://pic4.zhimg.com/v2-61dba645ab0620492a13d23d0c4bec8a_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"587\" data-rawheight=\"577\" data-watermark=\"watermark\" data-original-src=\"v2-61dba645ab0620492a13d23d0c4bec8a\" data-watermark-src=\"v2-197532c4635a376db8293147164a33e0\" data-private-watermark-src=\"v2-55a1032e7b1901018f3b8377c837a79f\"></p>\n<p data-pid=\"YCd9VImO\">没错，教主嘛，和炮姐齐名，可以说中国老二次元的入门作品了。</p>\n<p data-pid=\"loQ9j1T0\">因此其实小车从CV配置上来看，是非常“不简单”的。</p>\n<p data-pid=\"37njaf4D\">但是这份不简单究竟是为了什么呢？</p>\n<p data-pid=\"KOAhhU2i\">哎，我们又要回到隔壁去看看了，隔壁在第二部的第三章中推出了这么一个角色：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9f73f8a7c768ffaa1307f670aadf5509_720w.png?source=b1748391?rss\" data-caption=\"赤兔马化身英灵登场\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"724\" data-watermark=\"watermark\" data-original-src=\"v2-9f73f8a7c768ffaa1307f670aadf5509\" data-watermark-src=\"v2-9aa0afdb4d18f8662b5984b8c6cb4280\" data-private-watermark-src=\"v2-3f93876a89f125d66d5291f05d971ae3\" data-tags=\"porn\"></p>\n<p data-pid=\"JLHYPo1J\">就在当时主线章节公布当天，随着秦始皇热度暴涨，赤兔马实装的消息也是一下子上了热搜。</p>\n<p data-pid=\"hvAtArj5\">因为半人半马的人设，以及配合马头极度生草的模仿吕布的语气，此角色迅速获得了“孽畜”这一爱称。</p>\n<p data-pid=\"YKcHS_XP\">但是实装本身仅仅是第一步，在后续的大小活动中，甚至还有第二部第六章的主线剧情中，此马以其丝毫不动摇的宠物&amp;代步工具形象占据着一席之地。</p>\n<p data-pid=\"CeS__ekd\">以至于在型月官方的fate嘉年华中，出现了马生癫疯的一幕（无误）：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-40abf39740972abda55a2005a26a7715_720w.png?source=b1748391?rss\" data-caption=\"大概这就是爱吧\" data-size=\"normal\" data-rawwidth=\"1775\" data-rawheight=\"1025\" data-watermark=\"watermark\" data-original-src=\"v2-40abf39740972abda55a2005a26a7715\" data-watermark-src=\"v2-e3a82875ad77a12a3af830227b666ba2\" data-private-watermark-src=\"v2-a64857ae02a884defaf8b99bba613a4a\"></p>\n<p data-pid=\"omKdyRF-\">巧合的是，这位角色的CV也是绿川光（我可以说考哥.jpg吗）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-508fdae172b755c1050e4c24c3c0e798_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"519\" data-watermark=\"watermark\" data-original-src=\"v2-508fdae172b755c1050e4c24c3c0e798\" data-watermark-src=\"v2-74b3922785ab058f68fb6571c27d0ad9\" data-private-watermark-src=\"v2-d20acf9b951cf45bea404e64e0a953d0\"></p>\n<p data-pid=\"M1QOvzvu\">那这和方舟的小车有什么关系呢？</p>\n<p data-pid=\"CY50720w\">简单来说，这种设定符合一个潜规则公式：</p>\n<p data-pid=\"L6R6v8Bo\"><b>知名CV+非人的反差外表+时不时出现的曝光率=有人气的吉祥物</b></p>\n<p data-pid=\"kIhFWGcW\">对，方舟的小车就是完美符合这一定律的官方吉祥物。</p>\n<p data-pid=\"KMvdYpfa\">本质上，这个公式背后的逻辑是这样的：</p>\n<p data-pid=\"Gj1V-FHB\"><b>（1）知名CV可以保证CV厨方面的曝光热度，同时声优自带的梗可以更好进行模因传递，保证人气基础。</b></p>\n<p data-pid=\"fy4XrxiZ\"><b>（2）非人的反差外表让普遍以人类形态为主的其他角色不会刻意和这类角色在一个赛道上竞争人气，也就是所谓的不要和搞笑角色比较战斗力。这让这类角色拥有自己独立的话语圈子。</b></p>\n<p data-pid=\"gUn837fe\"><b>（3）官方刻意安排的曝光剧情是维持吉祥物人气的需要，保证角色的人气可持续。</b></p>\n<p data-pid=\"rVsBKVxH\">而为什么要特意制造这样的吉祥物角色呢？很简单，方便剧情上的人物互动。</p>\n<p data-pid=\"CAMaXyQp\">举个例子，在方舟中存在这么一个机械维修娘角色：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-3e6c7d717476c2cf4475277095e4eb58_720w.png?source=b1748391?rss\" data-caption=\"知名圣经中涉及的角色-森rua\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-3e6c7d717476c2cf4475277095e4eb58\" data-watermark-src=\"v2-c881c6c3525a99962b9504d8185b2793\" data-private-watermark-src=\"v2-dde9477cbc4f8b975b2333fbf6065817\"></p>\n<p data-pid=\"1KfM1CL4\">她在设定上与其说和玩家扮演的刀客塔这个角色关系密切，不如说和罗德岛的一辆小车关系才算得上“密切”.......</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9b1f0d6b1816e5a48a1201a0628cbde8_720w.png?source=b1748391?rss\" data-caption=\"对，就是这辆医疗小车，是不是很不可思议？\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"1024\" data-watermark=\"watermark\" data-original-src=\"v2-9b1f0d6b1816e5a48a1201a0628cbde8\" data-watermark-src=\"v2-e59d22d96c54f6a1f7c53ada32569e1a\" data-private-watermark-src=\"v2-3ccc0f0457e145a4a0d82a7a725fb68a\"></p>\n<p data-pid=\"R34d7jzk\">如果把小车换成其他角色，那可以说毫无疑问会引起玩家群体一部分的反感，但是基本不会有玩家去反感一辆机械小车和干员之间的关系，至于原因嘛，上面已经说过了。</p>\n<p data-pid=\"th3pRXJv\">这就充分体现出了这类低星吉祥物角色的剧情作用了。</p>\n<p data-pid=\"CW-4okeV\">而答主所说的小车，第二类就是本次夏日活动中会出现的新活动机制车辆：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c43a696f815b6f2e03a90bed58a1a8f4_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-c43a696f815b6f2e03a90bed58a1a8f4\" data-watermark-src=\"v2-dd46afb1635a4ed87f19eca0c9d1b6a2\" data-private-watermark-src=\"v2-11e18a217400d969021246d5292f8716\"></p>\n<p data-pid=\"vllp3lIU\">其实杜兰兹的理解是，这是一种充分分析近年来市场模因后才产生的合理商业决策，而这个市场模因，要从另一位神奇的主播说起：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-68e44cfd439d6fcf9e3f10c77a722994_720w.jpeg?source=b1748391?rss\" data-caption=\"看这个头像你应该知道我要说什么\" data-size=\"normal\" data-rawwidth=\"431\" data-rawheight=\"360\" data-watermark=\"watermark\" data-original-src=\"v2-68e44cfd439d6fcf9e3f10c77a722994\" data-watermark-src=\"v2-579d1ce12151d2ac616217780c6659b0\" data-private-watermark-src=\"v2-c20d646c7beb93a0393d2c553acf0a43\"></p>\n<p data-pid=\"PWGFIS2_\">泥头车虽然是早在陈鹤皋海皇时代就作为创人战术先驱载入史册，但是真正让泥头车成为制霸穿越轻小说、游戏王，乃至整个泛亚文化圈子的神奇源头的原因，或许还是要追溯到知名（也许不知名？）摸鱼主播MR.QUIN的那张病毒感染式表情包。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4356b130895c230869c98d56fda0c392_720w.jpeg?source=b1748391?rss\" data-caption=\"狗头洋溢着肆意的青春，以及对三三老师无敌的感慨，对吧（）\" data-size=\"normal\" data-rawwidth=\"867\" data-rawheight=\"734\" data-watermark=\"watermark\" data-original-src=\"v2-4356b130895c230869c98d56fda0c392\" data-watermark-src=\"v2-50439f7369c59c923f5af178b84d0aa7\" data-private-watermark-src=\"v2-585688b7797c9a6be0f5ee13a4254263\"></p>\n<p data-pid=\"83mm6z-v\">被一系列二次元穿越番剧以及游戏相关带火之后，泥头车无疑成为一切包含：</p>\n<p data-pid=\"4DfIz7k8\"><b>（1）车辆</b></p>\n<p data-pid=\"4RlL05n-\"><b>（2）具备攻击性能</b></p>\n<p data-pid=\"JB0_cs7R\"><b>（3）能对敌方肉体或者精神（有时两者兼备）造成巨大创伤</b></p>\n<p data-pid=\"fSb627I_\">以上三种元素集合体的综合模因。</p>\n<p data-pid=\"cBffEMwL\">自然，在方舟夏日直播2022中爆出的新小车机制也不能免俗。</p>\n<p data-pid=\"pN2EfqbU\">甚至可以说，官方就差把“这车就是给你用来迫害小怪创人”专用标注在说明中了。而本质上，这种设计关卡机制的思路，就是对泥头车模因的合理新诠释。</p>\n<p><img src=\"https://pica.zhimg.com/v2-c370e911eb8f511dc78e93fad72999ec_720w.png?source=b1748391?rss\" data-caption=\"官方甚至非常贴心地教你怎么创人，好温柔（）\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-c370e911eb8f511dc78e93fad72999ec\" data-watermark-src=\"v2-4a499ccbb83c18ae0a6cdb1521b7af6f\" data-private-watermark-src=\"v2-cc1a04d9b1e3e6a2868f5171263a65fd\"></p>\n<p data-pid=\"stGgUkjY\">因此不是《明日方舟》对小车机械有执念，而是小车恰好是一个优秀的载体。</p>\n<p data-pid=\"vU4qTqX3\">希望答主有所收获，更多内容可以关注杜兰兹移动大学！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-dao-heng-29?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">杜兰兹移动大学</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/547315961/answer/2616430213?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/516420772?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《明日方舟》中你最喜欢的设计是什么？</a><br><a href=\"http://www.zhihu.com/question/460131648?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待《明日方舟》中的敌人双持剑士及其变种?</a><br>\n","link":"http://www.zhihu.com/question/547315961/answer/2616430213?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派评 | 近期值得关注的 App","date":"2022-08-08 09:57:10","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/75051\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75051"},{"title":"被风吹过的「痛」：关于痛风你可能想要了解这些","date":"2022-08-08 08:30:00","description":"大家身边是不是总有一两个「痛风」的小伙伴呢？亦或者，你就是那个备受「痛风」折磨的那位同学呢？现阶段，「痛风」已经成为继「糖尿病」后，发病率最高的内分泌疾病了，并且有飞速增长及年轻化的趋势。中国「高尿酸 ...<a href=\"https://sspai.com/post/75049\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75049"},{"title":"如何评价漫画《5秒童话》？","date":"2022-08-08 05:23:16","description":"\n<p data-pid=\"6Q_Fh_PI\">从第年秒（胡伟）老师是一位极具灵气的漫画家，他那天马行空的想法加之技法娴熟的画工，创作出的作品都会让人眼前一亮且回味无穷。</p>\n<p data-pid=\"c47DMlDk\">这部2015年连载的只有7话+1番外的短篇《5秒童话》则非常能体现他的创作风格。剧情主线简单明了，但是却跌宕起伏反转不断，还能将伏笔前呼后应，是一部值得反复品鉴回味无穷的优秀短篇。</p>\n<p data-pid=\"zpp2dxsa\">故事的内容非常简单，讲述一位动态视力非常强的学生阿童（男主）在25楼往下掉的途中走马灯式地回顾了自己与各层邻居的关系，并从中发现每个人身上的秘密，并且重新审视自己的所作所为，最终成长蜕变的故事。</p>\n<p data-pid=\"aEJCg7mx\">要是让我来分类，这是一部包含校园暴力、爱情以及充满脑洞的烧脑推理作品。</p>\n<p data-pid=\"T7CxxTTq\">以下内容包含剧透，请谨慎观看</p>\n<h3>无处不在的小彩蛋（小细节）</h3>\n<p data-pid=\"q_rZwhJ4\">《5秒童话》作为一部短篇作品，在有限的页数之内，第年秒老师精心隐藏了许多小彩蛋在作品中，读者几乎找不到废页，回头品读，会发觉每一处都是细节。</p>\n<p data-pid=\"3Cla9g1L\">最显而易见的就是此处对<b>jojo白金之星</b>的致敬</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a63fa573711e5cb7c329232cc554b229_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"1474\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a63fa573711e5cb7c329232cc554b229\" data-watermark-src=\"v2-09235ba95b652e2b509406e3ae4079e1\" data-private-watermark-src=\"v2-acf070160aaf3dc5c0d76608cb6657dc\"></p>\n<p data-pid=\"CKePJaQ-\">包括故事开端，我们可以清晰看到主角背后被类似于石子\"之类的东西打中，因为会反弹</p>\n<p data-pid=\"xKF6pZ4x\">还有中间的三格小分镜，用<b>哎-哎哎-哎哎哎</b> 加上简笔画表现出男主阿童是如何从背后中石到脚滑坠楼之时的体位</p>\n<p data-pid=\"BH-5N9an\">因为如果不是背部向下，我们的男主就无法看见每层房间的人和事了（果然细）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-01e8a71561e3e6935aaeeebe77d6324e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2393\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-01e8a71561e3e6935aaeeebe77d6324e\" data-watermark-src=\"v2-dd413464f70067fc7f78f21548fef722\" data-private-watermark-src=\"v2-4685f5b771806d55d19b0698d4c0d7dd\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"m_9jsr80\"><br>《5秒童话》对于悬念的设置非常有一手，诸如最开始设置的悬念，究竟是谁将阿童击落坠楼？</p>\n<p data-pid=\"iCiona2k\">漫画中给出了一个背影，很明显是女同学的背影，随后就开始回忆，你说这误导性强不强？</p>\n<p><img src=\"https://pic3.zhimg.com/v2-3c964b4caf705cd7f5876b8d3b3d6d6d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"1808\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-3c964b4caf705cd7f5876b8d3b3d6d6d\" data-watermark-src=\"v2-ae08ccccdbee89216b2e3990fb4a980e\" data-private-watermark-src=\"v2-cd79f573ca2cf1fd8fa20eb4b7b1144f\"></p>\n<p data-pid=\"JoLPHXQs\"><br>还有在19楼的无人房间中第一次出现美少女偶像</p>\n<p data-pid=\"uCS4MzPE\">为何主角一见到就会肠胃不舒服？这也是一处精彩的伏笔</p>\n<p><img src=\"https://pic1.zhimg.com/v2-568dd79a33e6489fda9b5e5320dda3c2_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"2270\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-568dd79a33e6489fda9b5e5320dda3c2\" data-watermark-src=\"v2-f800993b7acfa18dd039b04e06a0f19b\" data-private-watermark-src=\"v2-bfb30b8fe554cef8e511a08fba368bb4\"></p>\n<p data-pid=\"o4ucsrlD\">还有最最最经典的开头，用校园暴力、文明冲突、生态破坏以及漫画作者脱稿并列来做序</p>\n<p data-pid=\"CO0k_Mz-\">最终作品中竟然将这几个主题全都包含在内，值得一提的是</p>\n<p data-pid=\"n9anbgQU\">作者脱稿那个只画了一个上吊的绳子，所以在暗示如果不交稿就会。。。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b8cba36fa410fa84a2406f802ea1f2c9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"1970\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b8cba36fa410fa84a2406f802ea1f2c9\" data-watermark-src=\"v2-7a7bfe5ed051f11eb57b9df64ef49fc4\" data-private-watermark-src=\"v2-d0a2651817a47a212b222b84a291766b\"></p>\n<hr>\n<h3>众生背后的秘密</h3>\n<p data-pid=\"YvgiN_Mc\">这部作品中出场的人物并不多，但是每一位都是第年秒老师精心设计的，每一位人物性格鲜明，尤其是在主角阿童坠楼过程之中发现了众人背后的秘密，让每一位人物更加具有真实感。</p>\n<p data-pid=\"mGGI91Z2\"><b>阿童</b></p>\n<p data-pid=\"eR_WxrxQ\">本作主人公</p>\n<p data-pid=\"F4KnD5C9\">一开始以为是普通的笨蛋学生，有着超乎常人的动态视力和难以想象的乐观精神，从他坠楼过程还‘’能给每家每户比个耶就知道他有多乐观（莫名想起罗格镇的路飞）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1d17750e7b6a92eff29119f4f71469cf_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"1960\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1d17750e7b6a92eff29119f4f71469cf\" data-watermark-src=\"v2-34f621f416304e35f384ad99f97a5d09\" data-private-watermark-src=\"v2-d81b3cf5d7b9f6fb9d78908b7ec94959\"></p>\n<p data-pid=\"5ImLSkgU\">同时他也是一位非常善良且有同理心的少年，毕竟在他准备迎接死亡之时还在想着鼓励他人</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b44fb6712c4933b764abbe064017ed8f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"1357\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b44fb6712c4933b764abbe064017ed8f\" data-watermark-src=\"v2-6c3fe001cd246f3d9cd095aa38178d64\" data-private-watermark-src=\"v2-ad9dc6cb3843258d6d8f917e754cad74\" data-tags=\"porn\"></p>\n<p data-pid=\"YQuOwBGP\">在发现同学何了了意图对他进行“绑架”之时，他依旧在心里说对不起让对方辛苦了</p>\n<p data-pid=\"mvk3b3JZ\">没仔细看的同学或许会觉得这行为很圣母，但是这行事风格确实是男主本色</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4e35bac9eae151948dc69cc031b3262f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"2028\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4e35bac9eae151948dc69cc031b3262f\" data-watermark-src=\"v2-3ba80aa5eff3f45ef11574f40275bad5\" data-private-watermark-src=\"v2-c88c00f22175e776bd3218819b073466\"></p>\n<p data-pid=\"hPR8Xf8M\">当然，我们的男主身上隐藏着大秘密，也是贯穿整部作品的主线之一</p>\n<p data-pid=\"7VwjfC-w\">我就不剧透太多，从人物成长角度来分析</p>\n<p data-pid=\"LLLYzx-q\">就是我们年幼无知的男主刚刚夸下海口要保护女主，但是下一秒在危险来临之际</p>\n<p data-pid=\"JrRAk7UH\">身体的条件反射让其抛弃了对方，即便双方都不约而同忘却这件事，但是回想起此事的男主心中有愧</p>\n<p><img src=\"https://pic4.zhimg.com/v2-361c1b0fbbf955b8f22275042c147c3a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2411\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-361c1b0fbbf955b8f22275042c147c3a\" data-watermark-src=\"v2-ded7d51a32ea3ae9fddb8ab3796d2b05\" data-private-watermark-src=\"v2-ccb996c404434415b5cdaec87aacf2c1\" data-tags=\"porn\"></p>\n<p data-pid=\"1l6JtqkS\">于是乎，在坠楼的5秒时间内，男主通过他人的人生经历，自己回顾一生所作所为，决定不再逃避，必须做出改变，因此改变了整个故事的结局。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bf8ed3a7062b0f53894cd835edf78081_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1371\" data-rawheight=\"2048\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-bf8ed3a7062b0f53894cd835edf78081\" data-watermark-src=\"v2-e08a3df9df19a4a073f60a49236174c8\" data-private-watermark-src=\"v2-c85626a45d20cb8b9340051e7d841619\"></p>\n<p><br></p>\n<p data-pid=\"EPmo5Toj\"><b>丁三言与何了了</b></p>\n<p data-pid=\"xYfJ7t1T\">在第年中学“魔性”和“狂暴”之花之称的两朵金花，一位是班长，一位是插班生。 一位是武力值高强的美少女、一位是处处不为人知的神秘美少女。两人似乎都对阿童有着不一样的情愫。</p>\n<p data-pid=\"HFBjAvAM\">最终本作的最大反转也来自于两人。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fb9fa84df4632c9eaeca2ba2ebc72ed0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2547\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-fb9fa84df4632c9eaeca2ba2ebc72ed0\" data-watermark-src=\"v2-b98c1cfd05b9cd10848e5ddd98ac5b2c\" data-private-watermark-src=\"v2-dac0009bc6db5b6a20ad7758ec9543e4\" data-tags=\"porn\"></p>\n<p><br></p>\n<p data-pid=\"k9gHP8Nt\"><b>张元首</b></p>\n<p data-pid=\"gRmYUfTa\">经常和阿童混在一起的几人之一，是个性格恶劣的自恋狂，感官敏锐，第年中学全校第二的武力值担当，喜欢的人是何了了，因此还将自己送进警察局，最终发现他也不是一个简单角色。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-f4e5d14421d088903e7ae3caf8484af7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"1939\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f4e5d14421d088903e7ae3caf8484af7\" data-watermark-src=\"v2-0a53e0fea2f55ef12cd66b69373e6907\" data-private-watermark-src=\"v2-ded95f51f8b4e09ca85d1cbcc8ff5284\"></p>\n<p><br></p>\n<p data-pid=\"jho1UBe2\">孙又名</p>\n<p data-pid=\"0sSB3CCo\">经常和阿童混在一起的几人之一，外貌平平，满口之乎者也的书呆子，很喜欢收藏珍贵的书籍，有着爱斤斤计较的性格。成绩非常优秀，传说中的优等生。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c81ec618ca5e4de79e1df2809e188af1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2537\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-c81ec618ca5e4de79e1df2809e188af1\" data-watermark-src=\"v2-05dab22b8f72b07db29f15c4c153e7df\" data-private-watermark-src=\"v2-343e321e8ab9009db8fd284ccdfc6abf\" data-tags=\"porn\"></p>\n<p data-pid=\"EjjoadUQ\">然而被阿童在坠楼过程中发现其实他就是最近大火的美少女偶像本人，难怪每次阿童见到都会反胃</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1fd20cc718f4ff6f1880e6946feeb5fe_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2694\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1fd20cc718f4ff6f1880e6946feeb5fe\" data-watermark-src=\"v2-49325e794b21c74b2cfeb632787f5122\" data-private-watermark-src=\"v2-a15c7b9c817d9753e0c2fc98789fc14f\" data-tags=\"porn\"></p>\n<p data-pid=\"-XQOFJTH\"><b>查尔斯</b></p>\n<p data-pid=\"5L-Mv3-k\">阿童自认为玩的最好的铁哥儿们，但是在坠楼过程中发现对方却对自己恨之入骨</p>\n<p><img src=\"https://pica.zhimg.com/v2-d3feb3704e69aa10e926b12d8e400a65_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2384\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-d3feb3704e69aa10e926b12d8e400a65\" data-watermark-src=\"v2-199d13af6cb4c5126fa6f30dac6e814e\" data-private-watermark-src=\"v2-956538a778b9fc2d98fe89fc725d7833\" data-tags=\"porn\"></p>\n<p data-pid=\"rmHlwICH\">所以从这几个人物身上我们可以知道一个道理，每个人身上都有属于自己的秘密，平时表面对着外人是一个人设，回到家中做回真正的自己有可能是另一个模样。因此我们替别人考虑之时必须想他人之所需，解他人之所难，未经他人事，莫言他人易。</p>\n<hr>\n<h3>逻辑严密的推理</h3>\n<p data-pid=\"1btHy_bN\">作为一部名义上的推理漫画，作品中展示的逻辑非常自洽，没有明显的BUG，在一众国漫中实属罕见，即便有小瑕疵，其实换个角度也能解释的通，这就说明了这部作品的优秀之处。</p>\n<p data-pid=\"ELQeKtkL\">简单来说，本作的逻辑推理主线以及需要解决的问题有以下几条</p>\n<p data-pid=\"Lv6pa1m4\">1.男主阿童究竟是被什么人用什么方式导致坠楼，其背后原因究竟是什么？</p>\n<p data-pid=\"x4a4kx8m\">2.男主阿童与两位魔女之间的恩怨情仇</p>\n<p data-pid=\"Pf6aFOEw\">3.何了了究竟是何人，为何她会对男主说：外遇是不可被原谅的</p>\n<p><img src=\"https://pic3.zhimg.com/v2-14103bd8a7b5ea9765b1ad04dc897e86_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-14103bd8a7b5ea9765b1ad04dc897e86\" data-watermark-src=\"v2-348a24f4ba2bc9d9369e86198ba88b7c\" data-private-watermark-src=\"v2-1936b7b81afcc2141c42056be1d8311f\"></p>\n<p data-pid=\"A-DZ6Idv\">在推进主线的同时，几条支线也在齐头并进，因此最终所有线收缩之时，观众直呼过瘾</p>\n<p data-pid=\"6vp4NCg1\">包括中途起到搞笑缓解作用的跟踪何了了的被抓二人组竟然还和孙又名这条支线串在一起，所以说这部漫画中没有一格是废页，每一格每一句台词都值得细细品读。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-38bdd09ced2ad5a744322121773d1fc6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2707\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-38bdd09ced2ad5a744322121773d1fc6\" data-watermark-src=\"v2-761867e80f6e2a35cc97415a951c764f\" data-private-watermark-src=\"v2-efd16ae909c51073b6abbb221306a8ff\"></p>\n<p data-pid=\"lafeE-_n\"><br>最后的最后，本作的最后一幕，终极大反转，可以说第年秒老师仅用一格就推翻了之前所有的假设推论，让读者在2015年就体会到了这般精神过山车般的感受，相信我，你看完整部作品再来看这张图，你也会说一句，第年秒YYDS!</p>\n<p><img src=\"https://pic2.zhimg.com/v2-d5b3460d1844419bc151841096528f28_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"1991\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-d5b3460d1844419bc151841096528f28\" data-watermark-src=\"v2-cdd711d712fcb2a8c41b1e8aaf6dd9bd\" data-private-watermark-src=\"v2-11b296841fd6399bef10b2cd34c48ee9\"></p>\n<hr>\n<h3>连载顺序排列：</h3>\n<p data-pid=\"UDdy2slf\">作为一部短篇作品，《5秒童话》可以分为三种不同的连载载体，顺序分别如下</p>\n<p data-pid=\"VKAqQm03\">1.杂志《漫画行》2014年1-8期。完结的第8期有作者访谈四页和彩页，并没有收录在单行本，算是杂志的专属福利。</p>\n<p><img src=\"https://pica.zhimg.com/v2-cc29073e3aea270961dbe3fb6f19b7e1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"图片来源见水印。下同\" data-watermark=\"watermark\" data-original-src=\"v2-cc29073e3aea270961dbe3fb6f19b7e1\" data-watermark-src=\"v2-766f8bbc4d4aa0fc7a9b4d6226c49cb0\" data-private-watermark-src=\"v2-19ca1a7305019c89335f66a181ca0924\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-dd4876c1beeeca4486a877b85569a99e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1440\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-dd4876c1beeeca4486a877b85569a99e\" data-watermark-src=\"v2-61b96c4845e6b392adfd334ddc01c247\" data-private-watermark-src=\"v2-1c53d2911be263b3a3cbba37b12a2d07\"></p>\n<p data-pid=\"UqsHU8yH\">2.单行本有中文版和日版。收录新绘彩页和作者后记，中文版附赠海报一张，已绝版。日版多收录一篇<b>番外</b>，中文版没有</p>\n<p><img src=\"https://pica.zhimg.com/v2-105c627942ccc850168e166b8618e7c1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1440\" data-size=\"normal\" data-caption=\"留着书腰看规格\" data-watermark=\"watermark\" data-original-src=\"v2-105c627942ccc850168e166b8618e7c1\" data-watermark-src=\"v2-46fe7f7e2169898095564d5bbebe58f3\" data-private-watermark-src=\"v2-53b7a61490fc97bba1b7ef345964a778\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-6f125ced8aae9d177686360bea467c61_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"内封和折页\" data-watermark=\"watermark\" data-original-src=\"v2-6f125ced8aae9d177686360bea467c61\" data-watermark-src=\"v2-88c39f1c1356e58842b19a3bcbb94245\" data-private-watermark-src=\"v2-5fb73c4d2f1a346e3ab6846251c5f0d1\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8529bc006506eed0c0c2266f6a54a1a1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1440\" data-size=\"normal\" data-caption=\"目录\" data-watermark=\"watermark\" data-original-src=\"v2-8529bc006506eed0c0c2266f6a54a1a1\" data-watermark-src=\"v2-f631a36ee8775418c91f7144a088d8a5\" data-private-watermark-src=\"v2-6153ebfb824f5d0b47719084dfff529f\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-d01f49ca7cdf51b7adcf566a9253f581_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1440\" data-size=\"normal\" data-caption=\"新绘彩页\" data-watermark=\"watermark\" data-original-src=\"v2-d01f49ca7cdf51b7adcf566a9253f581\" data-watermark-src=\"v2-425371edb4e1121a4574ab476e4f2a99\" data-private-watermark-src=\"v2-77167db13d61a0ce14af7030613bb8a8\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-cb1a00e7d0d240d9083b0e467999fa7a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1440\" data-size=\"normal\" data-caption=\"作者后记\" data-watermark=\"watermark\" data-original-src=\"v2-cb1a00e7d0d240d9083b0e467999fa7a\" data-watermark-src=\"v2-a19d824ae310df64f3cb5db47e32eb68\" data-private-watermark-src=\"v2-35407e06bc294cc9fa5a41807df4bf81\"></p>\n<p data-pid=\"oe12GqcX\">3.电子版：哔哩哔哩漫画或腾讯动漫都有免费全集可看，感兴趣的朋友可以支持一下。</p>\n<p><img src=\"https://picx.zhimg.com/v2-ce4ccac5de855abc8413d542ba2a2d31_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1079\" data-rawheight=\"1491\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ce4ccac5de855abc8413d542ba2a2d31\" data-watermark-src=\"v2-ce331678cba01f539fd343a1abb6d5b1\" data-private-watermark-src=\"v2-66efd3b3e764eea5eff7acd2bea21b8e\"></p>\n<p data-pid=\"5RW28wZH\">以上</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bin-di-47-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">彬帝</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/27155359/answer/2615381800?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/360893393?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">哪能买到五秒童话（漫画）？</a><br><a href=\"http://www.zhihu.com/question/427429677?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有人看过这个童话动画片么？</a><br>\n","link":"http://www.zhihu.com/question/27155359/answer/2615381800?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"陕西有哪些国家级历史文化名城值得游玩？","date":"2022-08-08 03:00:45","description":"\n<blockquote data-pid=\"P52XttSw\">杨家沟是米脂县一个村庄的名字，坐落在沟壑梁峁之间。从明代起，马氏家族定居于此，已经有了400年的历史。在清代中叶，逐渐形成了陕北一处规模较大的地主集团庄园。保存至今，列入了国家历史文化名村。不过真正让杨家沟名扬天下的，是1947年毛主席率领中共中央机关转战陕北，曾在此居住120天，成为中共中央转战陕北停留时间最长的一站，在中国革命史上具有重要的地位。</blockquote>\n<p><img src=\"https://picx.zhimg.com/v2-23c6b0b9b3ab9cad9391dea1df56c17c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"420\" data-watermark=\"original\" data-original-src=\"v2-23c6b0b9b3ab9cad9391dea1df56c17c\" data-watermark-src=\"v2-3230d71706fd89112b38d20d5216a97e\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"7F8RAsvS\"><b>01陕北最大地主庄园是如何形成的</b></p>\n<p data-pid=\"QuqnkO5d\">杨家沟最核心的窑洞建筑，位于沟谷岸边的半山腰上，叫做扶风寨。之所以称作扶风寨，因为居住在这里的马氏一族，其祖籍为关中的扶风县。马氏一族于明代搬迁到杨家沟，在这里开枝散叶，家族势力越来越大，成为名门望族。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-35e736595bedfb8810be891e4b57cac3_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"424\" data-watermark=\"original\" data-original-src=\"v2-35e736595bedfb8810be891e4b57cac3\" data-watermark-src=\"v2-0bb55ca9e50d1e9785564d3004a62b66\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"JK90a_xa\">清同治年间，因为天下不太天平，为了躲避战乱，马氏第九世祖马国士发动家族集资建寨。寨子选址讲究风水地利，它建在一座龙头凤尾的孤山上，又称龙凤山。最终形成了一个具有寨墙、瞭望台、炮台、水井、排水系统、道路、广场、戏台的建筑群。</p>\n<p><img src=\"https://picx.zhimg.com/v2-d7f729a8964f331f4cb2beb5652520f3_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"425\" data-watermark=\"original\" data-original-src=\"v2-d7f729a8964f331f4cb2beb5652520f3\" data-watermark-src=\"v2-14784dc31750ea2fec2afbee860a8bbc\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"dBhVV-he\">到清代中晚期，马氏家族基本上垄断了杨家沟周边的土地，成为陕北著名的地主集团。例如，光裕堂马嘉乐，给他的子孙留下了5000余垧（1垧约合3亩，共15000亩）的土地。可以说，当时杨家沟方圆几十平方公里的土地都掌握着马氏家族手里。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b322e288e21fb8ef7945b5617f1c450a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"425\" data-watermark=\"original\" data-original-src=\"v2-b322e288e21fb8ef7945b5617f1c450a\" data-watermark-src=\"v2-c052423badd77578620a057343826042\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Zmle7BCA\">毛主席曾经说过，“没有调查就没有发言权”。1941年，中央作出了《关于调查研究的决定》，掀起了调研研究的热潮。杨家沟作为一个土地矛盾对立非常严重的典型村寨，引起了张闻天的注意。张闻天率领调查组进驻杨家沟，当时杨家沟的开明地主马维新，主动将自家上百年账簿交给调查组。调查组依靠这些一手材料，写出了《米脂杨家沟调查》，揭示了中国封建地主经济的特征，受到了各界的高度肯定。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8e58ef961248e69f7ef89dd4e182c041_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"357\" data-watermark=\"original\" data-original-src=\"v2-8e58ef961248e69f7ef89dd4e182c041\" data-watermark-src=\"v2-b92528b6b02727de8a3b31920c679c05\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"b31qUpne\">根据报告研究，当时杨家沟一共有270户人家，马氏地主就有72户，占三分之一，但其中三个大地主就占有千垧以上土地，而剩下的200来户人家里，只有47户人家有自己的土地，总数是457.5垧，可见当时土地集中的严重程度。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8e8354b0edc3ee7bd4036e39a60a29f5_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"422\" data-watermark=\"original\" data-original-src=\"v2-8e8354b0edc3ee7bd4036e39a60a29f5\" data-watermark-src=\"v2-908d38ab5df64caa5db26a8a9ff0cbae\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Z0CqvxhX\">随着地主集团的形成，马氏家族的窑洞，建筑规模和质量在陕北都是首屈一指，成为远近闻名的地主庄园。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1d6bc46228681b294b6e4db74db5999f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"356\" data-watermark=\"original\" data-original-src=\"v2-1d6bc46228681b294b6e4db74db5999f\" data-watermark-src=\"v2-4dc504197daad3adee4c568ac606c4f8\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"rzaSQix3\">其中有个叫马醒民的地主，早年留学日本，后回到杨家沟，他将西方的建筑风格与窑洞文化巧妙融合，在1929年动工建造了一处中西合璧的新窑院，直到1938年才完工。新窑院建造在9个自然生成形同飞龙的土梁上，共11孔窑洞，建筑在采光、取暖、保温、纳凉、安全防范、造型审美等方面均有独创之处，构思精巧，工艺精湛，堪称中西建筑风格结合的典范。这个窑洞，成为1947-1948年中共中央转战陕北期间，毛主席和周副主席的住处，也因此名闻天下。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c4beefba894acb46fc10122f4ddae2fe_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"361\" data-watermark=\"original\" data-original-src=\"v2-c4beefba894acb46fc10122f4ddae2fe\" data-watermark-src=\"v2-7d8f45159f844b8b32c59e89ad893844\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"n0pLJ3Rn\">时至今日，杨家沟扶风寨是全国规模最大、等级最高的窑洞庄园，是陕北窑洞四合院形式的集大成，代表陕北地区最高等级的窑洞四合院遍布庄园，其中有堂号的就有36院。毛主席居住过的新院代表了陕北窑洞与西方建筑融合的全新形象，杨家沟村因此入选了国家级历史文化名村，是陕西仅有的3处国家级历史文化名村之一。</p>\n<p data-pid=\"MNjlDbQK\">02</p>\n<p data-pid=\"_-SFrUyL\">中共中央转战陕北居住杨家沟120天杨家沟地主集团在抗日战争、解放战争期间是比较积极、开明的。他们捐钱捐物，支持抗战。马家后人出了不少共产党人，典型的如马豫章。他在1928年就加入了中国共产党，从事地下工作。西安事变以后，国共合作抗日。马豫章出任国民党肤施（今延安）县长，毛主席称赞他是“白皮裹红瓤”的抗日县长。后曾任八路军后方留守兵团司令部秘书长、边区政府秘书处主任、延安市市长等职。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-712035c19d13d83f5d212d278713860a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"424\" data-watermark=\"original\" data-original-src=\"v2-712035c19d13d83f5d212d278713860a\" data-watermark-src=\"v2-2408751c9fca22e81ae0401b3fc9829a\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"kx8Reghe\">1947年，国民党胡宗南部进犯延安，出于战略考虑，毛主席率领党中央机关撤离延安，开始了1年零5天的转战陕北之路。据统计，转战陕北期间，毛主席及党中央等走过了12个县，驻留了38个村庄，时间最短的仅几小时，大多不过一两天<b>，</b>而在杨家沟，他们住了长达4个月，是转战陕北期间居住时间最长的驻留地。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-f8857268a4f71e44de1b30c9be0218e0_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"425\" data-watermark=\"original\" data-original-src=\"v2-f8857268a4f71e44de1b30c9be0218e0\" data-watermark-src=\"v2-1b77d058e57520d6f36cb9b02c95ed68\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"5KEPoR-l\">1947年11月22日，毛主席率领中共中央机关进驻杨家沟，开明地主主动腾出杨家沟建筑水平最高的新窑院，给毛主席等人居住，杨家沟也因此有机会见证了中国革命的重大转折。1947年在此召开了“十二月会议”，确定了中国革命从战略防御转入战略反攻，毛泽东同志所做的《目前形势和我们的任务》报告为最终夺取全国胜利做了充分的理论准备，提出了一系列纲领文件，其中包括了十项军事原则、三大经济纲领、全国土地改革总路线等。影响历史走向的“曙光就在前面”的号召声从这里传向全国。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4da96d00da00abee311941c8714de351_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"425\" data-watermark=\"original\" data-original-src=\"v2-4da96d00da00abee311941c8714de351\" data-watermark-src=\"v2-30e5c0c8e8c2a5d8d0c27a8848458ecd\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"XadRH8R0\">杨家沟是转战陕北取得光辉胜利的标志点，是离开陕北走向全国胜利的出发点，在中共党史和中国革命史上占有重要地位。</p>\n<p data-pid=\"D_oz_SMZ\">03</p>\n<p data-pid=\"wL69tgTG\">​今日杨家沟：综合旅游目的地正在形成杨家沟目前拥有全国重点文物保护单位、中国历史文化名村、全国爱国主义教育示范基地、国家国防教育示范基地、全国关心下一代党史国史教育基地五个国家级招牌。1972-1978年，杨家沟建设了革命纪念馆，面向公众予以开放。主要可以参观：中共中央十二月会议旧址；毛主席、周恩来旧居；毛主席转战陕北纪念馆；劳动人民翻身纪念大会等。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-dcc620e380b996e6c88171e25f5a4cd7_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"430\" data-watermark=\"original\" data-original-src=\"v2-dcc620e380b996e6c88171e25f5a4cd7\" data-watermark-src=\"v2-16643f360f3ae70c31f671735030a48f\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"8ukHiZT1\">近些年，杨家沟以创建国家4A景区为目标，进行了一系列提升改造。在过去的几年，米脂县投资数亿元，建设了多个旅游项目，并完善了游览设施。由过去的一个纪念馆，逐渐向一处综合旅游目的地演变。今日杨家沟，森林覆盖率和绿化状况较过去有极大的提升，如果是5月-10月期间到访，可以看到的是一个郁郁葱葱、满眼绿色的杨家沟。</p>\n<p><img src=\"https://pica.zhimg.com/v2-e37e2bc424fae39016e84476ba46852b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"471\" data-watermark=\"original\" data-original-src=\"v2-e37e2bc424fae39016e84476ba46852b\" data-watermark-src=\"v2-a2d5c84591bddf14d68ad4cc327f696a\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4Jzfs5cp\">观赏杨家沟窑洞村落全景，主要有两个地点。一个是杨家沟对面的阳坬山，在这里可以俯瞰扶风寨全景。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-420d23e76a47f713642605fcdd6902dd_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"359\" data-watermark=\"original\" data-original-src=\"v2-420d23e76a47f713642605fcdd6902dd\" data-watermark-src=\"v2-cb21b8e5dab9e426666786589fcbbec4\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"pjjYv5OF\">另外一处要通过后山盘山路，到达一处地势较高的农田，这里是俯瞰毛主席居住的新窑院最佳视角。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4a3d87b670a3b46d142ddf0910559b8e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"359\" data-watermark=\"original\" data-original-src=\"v2-4a3d87b670a3b46d142ddf0910559b8e\" data-watermark-src=\"v2-1914fc436b82a273c4c42374a85422b4\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"7iuZQIC1\">在杨家沟，农业开始景观化。新打造了几处景观农业，包括梯田樱桃园、黄花菜采摘园、格桑花海等。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-794451b8a0b761de627eecb52034b86f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"802\" data-watermark=\"original\" data-original-src=\"v2-794451b8a0b761de627eecb52034b86f\" data-watermark-src=\"v2-c13e94e86e924306b6f4d721bf4f5186\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"crQH-0LH\">扶风寨里面，有几家马氏后人开办民宿，提供窑洞住宿、特色小吃服务。有当地企业进驻，提供小米贴画等米脂特色文创产品。</p>\n<p><img src=\"https://pica.zhimg.com/v2-afb455a1c31ffaa934e7eecbaaea04dc_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"425\" data-watermark=\"original\" data-original-src=\"v2-afb455a1c31ffaa934e7eecbaaea04dc\" data-watermark-src=\"v2-27070102177d7adbe0eccbd3f262899f\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"jYj4pIaY\">许多窑洞民居得到了保护和修复，越来越多的窑洞和红色革命旧址正在修复，未来可以列入开放参观范围。当然，杨家沟的魅力不止于此。它还有很多未被挖掘的潜力旅游吸引力。我们曾在杨家沟居住了几天时间，拍摄了很多有意思的内容。例如，黄土高原上的风力发电机集群。坐落在山梁之上，非常壮观。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-58b030f86ac4b39d4a8fead1edf8625f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"360\" data-watermark=\"original\" data-original-src=\"v2-58b030f86ac4b39d4a8fead1edf8625f\" data-watermark-src=\"v2-b7609836306b60e3ecaae4b3ae95dffe\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"7R70NMl6\">到了晚上拍个星星，同样是非常好的感受。这里没有大气污染，空气质量非常高。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-692a3df1abe7e8edd22ecaca533d7a85_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"358\" data-watermark=\"original\" data-original-src=\"v2-692a3df1abe7e8edd22ecaca533d7a85\" data-watermark-src=\"v2-f69d33bff681ac866a153d2428fcd436\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KL5r9ny6\">杨家沟还有很多神奇的人，就看你能否遇到了。我们在这里，碰见了杜聿明的家族侄女（或是家族侄孙女，我没听太懂），老人家把我们带到家里，参观了她的个人收藏，非常震撼。杜老太太的父亲是革命烈士，牺牲于解放战争。我会单独为她的收藏做一期图文，大家可以期待一下。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-f0cae0fe35cb1e5ce55969c223b266c4_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"439\" data-watermark=\"original\" data-original-src=\"v2-f0cae0fe35cb1e5ce55969c223b266c4\" data-watermark-src=\"v2-ba3f1ccbbd48438763f8919d00740624\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"66wGGzXx\">杨家沟也是陕北农村风情拍摄的创作基地。这里的人，带有强烈的陕北特质，人文摄影爱好者一定能拍出很多好片。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-99b183f1f030b19724872c37bfdd2320_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"394\" data-watermark=\"original\" data-original-src=\"v2-99b183f1f030b19724872c37bfdd2320\" data-watermark-src=\"v2-8a60c30de158b2ded4c08b25ae17eef8\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xYAHo00-\">这是我随手拍的几张。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2d4ac548735fa489e1a546c2300eeb79_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"927\" data-watermark=\"original\" data-original-src=\"v2-2d4ac548735fa489e1a546c2300eeb79\" data-watermark-src=\"v2-f4ec48a9cee06fbf32fe924e1a733478\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"NpfWdBy8\">小卖部的老太太。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b4da3565e378e5375e300a3463305788_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"424\" data-watermark=\"original\" data-original-src=\"v2-b4da3565e378e5375e300a3463305788\" data-watermark-src=\"v2-92345a4586dbd573872bd17e99b561e0\" data-private-watermark-src=\"\" data-tags=\"politic\"></p>\n<p data-pid=\"_k5bzjb0\">寺沟纳凉的大爷大妈们。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-500a856d90517c020531f3d67d87c112_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"399\" data-watermark=\"original\" data-original-src=\"v2-500a856d90517c020531f3d67d87c112\" data-watermark-src=\"v2-557e6fe2b2fd88f50fc7c2739044a3d1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"bDcZ8E2n\">杨家沟，还有很多鲜有人知的魅力，等待你来挖掘。这里的人，这里的景，这里的一草一木，都有它独特的吸引力。我相信，你会喜欢这个地方的！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chengyingwen?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">成博士旅游频道</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/542320735?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">陕西有哪些历史悠久的古迹值得参观？</a><br><a href=\"http://www.zhihu.com/question/65094893?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问陕西除了西安以外，还有那些历史名城、古人类居住地？</a><br>\n","link":"http://www.zhihu.com/question/534757699/answer/2603624766?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价动画《新秦时明月》第37集？","date":"2022-08-07 10:18:12","description":"\n<p data-pid=\"_7VGjiFQ\">大家好，《新秦时明月》已经播出第三十七集。 </p>\n<p data-pid=\"HsXHfNkm\">在本集剧情中，聂蓉“泪断剑”名场面与大家再次见面了。端木姑娘为了保护盖聂，顾不得师父临终前的劝阻，挺身而出挡下了白凤的羽毛飞镖。身受重伤的端木姑娘泪洒渊虹，二人从相遇到相知的场景伴随着《月光》一幕又一幕地浮现。这段由回忆杀组成的官方MV，不知道有没有感动到大家呢？盖聂与端木姑娘对望的这个片段本来应该放在上一集的结尾，但导演在播出前发现七夕佳节马上就要到了，如果把这段剧情放到七夕这一天播出可能会更应景，所以我们为此临时调整了剪辑顺序。如果大家被聂蓉虐到了，不妨移步秦时官博，我们准备了温馨的七夕壁纸，希望可以治愈大家~祝有情人终成眷属！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f7e2258a711f1558c6a13ca4c182b73d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1060\" data-rawheight=\"596\" data-watermark=\"watermark\" data-original-src=\"v2-f7e2258a711f1558c6a13ca4c182b73d\" data-watermark-src=\"v2-9a1f40a12397ecb524b9793e7a93774f\" data-private-watermark-src=\"v2-eba6521ed24bf2dd5c0d2d8a985f3f9d\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-0a02800906bcc63a518ee0a4b64a3864_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2000\" data-rawheight=\"1125\" data-watermark=\"watermark\" data-original-src=\"v2-0a02800906bcc63a518ee0a4b64a3864\" data-watermark-src=\"v2-05a4598105d9d9993aac88d8e6326278\" data-private-watermark-src=\"v2-e292d6b3eb6282aab6113fd831ad3691\"></p>\n<p data-pid=\"fowvNG_Z\">在老版中，可能没有交代清楚端木姑娘是如何挣脱绳索的束缚去救盖聂的。所以在新秦时中，我们为了完善逻辑，针对这个环节进行了讨论。有人建议让盖聂在战斗中找机会帮端木姑娘松绑，也有人建议让雪女趁机过去解救；但考虑到卫庄所率领的流沙众人都在，以他们的敏锐和实力，不会允许敌方轻易把端木姑娘救走，所以考虑到剧情的合理性，我们还是把这段剧情设定为端木姑娘一直在等待机会自救，而盖聂的到来，就是她挣脱束缚的时机。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ffa90cc520f4dd5ac720e6ca839208b9_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1060\" data-rawheight=\"599\" data-watermark=\"watermark\" data-original-src=\"v2-ffa90cc520f4dd5ac720e6ca839208b9\" data-watermark-src=\"v2-13df4daaeb5e8b3213f3dab582875892\" data-private-watermark-src=\"v2-50825b05a6df254e34df291e9bf7aaec\"></p>\n<p data-pid=\"xLTPSHMG\">由于端木姑娘在后续剧情中还会苏醒，所以本次我们调整了她被羽毛击中的位置，比老版向上移动了一些，避免太过于接近心脏。因此，她虽然被羽毛的强大内劲所伤，但并不会致命。期待端木姑娘与盖聂早日重逢！</p>\n<p><img src=\"https://pica.zhimg.com/v2-820eb12d207892ecc063ab5f47ae3e6c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1060\" data-rawheight=\"595\" data-watermark=\"watermark\" data-original-src=\"v2-820eb12d207892ecc063ab5f47ae3e6c\" data-watermark-src=\"v2-33df708f881576f9867987c64a915976\" data-private-watermark-src=\"v2-54a46566b24d3e8de56f827c1af80b8e\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-8faa2127dd24c6957ada7d903d74bcfb_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1060\" data-rawheight=\"597\" data-watermark=\"watermark\" data-original-src=\"v2-8faa2127dd24c6957ada7d903d74bcfb\" data-watermark-src=\"v2-72195dbbd5118305eab6300f3d81bf31\" data-private-watermark-src=\"v2-f7fd6e00489841a9d8ca10a4a5204fde\"></p>\n<p data-pid=\"iCSNRuOM\">本集的另一段经典剧情就是大家期待已久的纵横之战了。因为是高手之间的较量，我们力求把渊虹和鲨齿的交锋呈现得更加行云流水。除保留了部分老版的经典动作外，基本都进行了重新设计。经过两回合的酣战，盖聂和卫庄都受了不同程度的伤。关键时刻，黑麒麟假扮天明出现背刺盖聂；身受重伤的盖聂反手一击，却被卫庄挡下。二人的一番对话，再次体现了他们之间立场的分歧。这对师兄弟各自的命运，又将走向何方呢？</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f16fe282db2706c36a31e87fa5516c47_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1060\" data-rawheight=\"595\" data-watermark=\"watermark\" data-original-src=\"v2-f16fe282db2706c36a31e87fa5516c47\" data-watermark-src=\"v2-655862f4c96061264c6c3cee125448f6\" data-private-watermark-src=\"v2-36fa4ff4b5ed5a1a69d96ef3901437c8\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-dc0151a2eb718070e5e51e0dccd23e87_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1060\" data-rawheight=\"594\" data-watermark=\"watermark\" data-original-src=\"v2-dc0151a2eb718070e5e51e0dccd23e87\" data-watermark-src=\"v2-3d4f966d61828f3787c47a493b40f4cd\" data-private-watermark-src=\"v2-2d24ec59cdaf4e5f8a93f074130e3f32\"></p>\n<p data-pid=\"5JSdAYKY\">墨家众统领见盖聂受伤，纷纷出战，流沙众人当然也不会示弱。机关城大战已近白热化，下集剧情会更加精彩哦~</p>\n<p data-pid=\"Duivjq7P\">让我们一起拭目以待吧！</p>\n<p><img src=\"https://pica.zhimg.com/v2-9b840e0bb211ab999b128443a489b849_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1060\" data-rawheight=\"593\" data-watermark=\"watermark\" data-original-src=\"v2-9b840e0bb211ab999b128443a489b849\" data-watermark-src=\"v2-74fb3abb6d04d64c9ace5489858eb5ce\" data-private-watermark-src=\"v2-549e1f39642074a90dad0c9a8b51c595\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xie-xiao-ming-98-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">薛小明</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/547146071/answer/2611887801?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">6 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/535786937?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《新秦时明月》第29集？</a><br><a href=\"http://www.zhihu.com/question/530497535?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《新秦时明月》第24集？</a><br>\n","link":"http://www.zhihu.com/question/547146071/answer/2611887801?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价雨人Redregan创作的国产漫画《白乐园》以及其他作品？","date":"2022-08-07 09:48:20","description":"\n<p data-pid=\"132rRkbX\">雨人Redregan是活跃在微博的新锐漫画家<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\" data-text=\"雨人老师微博\" data-url=\"https://weibo.com/p/1005057207802873/home?from=page_100505&amp;mod=TAB&amp;is_all=1#place\">[1]</sup></p>\n<p data-pid=\"ILY0nE9n\">她的漫画作品目录如下</p>\n<p data-pid=\"75ee-qXL\">※<b>《光之城1905》</b>（架空历史剧）关于一个想要制造人造人国王的国家的故事。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-50d593f5f4962c2851e65097228273e1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"947\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-50d593f5f4962c2851e65097228273e1\" data-watermark-src=\"v2-20ffb337dddba419f94cccc10880332c\" data-private-watermark-src=\"v2-130d26391f2114e0971debfa05d088ac\"></p>\n<p data-pid=\"BIp2jgD2\">※<b>《白乐园》</b>（科幻）关于逃亡的故事。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-630f4c4a17be42b82793ba00330ab720_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"960\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-630f4c4a17be42b82793ba00330ab720\" data-watermark-src=\"v2-39fad03852d697bf58fef4e359faac00\" data-private-watermark-src=\"v2-045b4149397d4f19e90f36a1bfd86d5a\"></p>\n<p data-pid=\"AjdRHFJr\">※短篇</p>\n<p data-pid=\"DVsGR6yf\"><b>《不正经超人传说》</b>（搞笑）(2020) （一回完）（新漫画投稿）</p>\n<p data-pid=\"ElOiNMIj\">※<b>《海岛漂流》</b>(2018-2019)（黑历史，全14话，已完结）</p>\n<p data-pid=\"syaFxFo6\">=============================================</p>\n<p data-pid=\"tVYiF4gx\">短篇我就不拿出来多说了，《光之城》因为还没完结，所以本回答主要聊一聊《白乐园》</p>\n<h3>《白乐园》</h3>\n<p data-pid=\"gx_UaTBL\">这是一部在这个时代非常难得的好作品，不是说这部作品画工，故事有多好，是这部作品假借架空历史架空城市以及历史中真实存在的事件来表达一些思想，是一部具有时代感的作品。</p>\n<p data-pid=\"bnoWpIlC\">相信很多00后的小伙伴看完以后并不会有太多感触的，因为这些在教科书，甚至在互联网上不能存在的事件，随着时间的推移，会慢慢消失在人们的记忆中，但是这部作品用这样一种方式保留了下来，难能可贵。</p>\n<p data-pid=\"-PW2v-AX\">《白乐园》这部作品总共12话，作者用时9个多月在微博连载，貌似已经出单行本了，大家可以支持一波。</p>\n<p data-pid=\"24Zp3ReO\">故事主要背景</p>\n<blockquote data-pid=\"iEDtUQyi\">世界大战后，A国的生物学家发明了一种名为SPID的药物，于6至12岁注射SPID的儿童可以获得超能力。受到国内激进儿童保护主义者的阻扰，A国不得不将国内的研究机构转移到临近的发展中国家——X国。通过扶持傀儡政府，A国在X国建立起了世界最大的SPID研究中心——朝南医学研究所。</blockquote>\n<p data-pid=\"WEsSFuWi\">然而最终也没往超能力战斗漫方向发展，而是更偏向于现实主义题材</p>\n<p data-pid=\"idiTVDFu\">这部作品中主要角色有三个人物，小林，108号实验体小雪以及李主任</p>\n<p><img src=\"https://pic3.zhimg.com/v2-88bab1f2241a554db54f299b2d3a5ef0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"687\" data-rawheight=\"991\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-88bab1f2241a554db54f299b2d3a5ef0\" data-watermark-src=\"v2-45827b2ba40bf724c140ffe9c1ee06fe\" data-private-watermark-src=\"v2-4328187f4158a9e8425f12f8519f52ab\"></p>\n<p data-pid=\"CVfkQ1ON\">故事开篇先通过塑造108号实验体小雪由于当时的社会环境加之家庭原因，所以被贩卖至朝南研究所，从此以后没有小雪，只有实验体108号</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e5786ff6c1083afb160a8950071fb414_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"999\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-e5786ff6c1083afb160a8950071fb414\" data-watermark-src=\"v2-0caca37c3fb83834d806d34122862a56\" data-private-watermark-src=\"v2-26450686304430d8754cd5f1d9765130\" data-tags=\"porn\"></p>\n<p data-pid=\"sCBskpZv\">并且她还是拥有着可以复活某类动物的超能力儿童，只是一直没有被发现复活规律，直到108号即将12岁（如果没有研究价值会被安乐死）之际，我们的男主小林从一堆数据中发现了秘密。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f5cb35dd8bac659a1e3d78096524266a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"2998\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f5cb35dd8bac659a1e3d78096524266a\" data-watermark-src=\"v2-c2221dc50a1dafe5ec8f476861655eab\" data-private-watermark-src=\"v2-6642018f575942f5509eb8b893e7a8ea\" data-tags=\"porn\"></p>\n<p data-pid=\"YQVyAMDv\">而在小林与108号交谈的过程中，他发现了小雪内心的伤痛，因此他自责，怪自己无能为力，因为自己的原生家庭也同样充满问题（此伏笔后面有解释），所以小林决定救赎108号，同时也是救赎自己</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fb7248f277635add63e95a29633a8340_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"999\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-fb7248f277635add63e95a29633a8340\" data-watermark-src=\"v2-a67faa38a52684f22dcf6563d758073e\" data-private-watermark-src=\"v2-afe3bdeabd2e4174f070b4e3c4b2f2f1\"></p>\n<p data-pid=\"FG2w2Y7U\">一个从小就被关在实验里的孩子，一个从未见过大千世界的孩子，一个一直被当做试验品的孩子，突然受到了来自小林的关怀，因此在小林的陪伴下，她有了自己的愿望--<b>想去外面的世界看看，想去游乐园玩</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-7e9a5488be5840bdf3c671502e06d378_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"1020\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-7e9a5488be5840bdf3c671502e06d378\" data-watermark-src=\"v2-6b85a9c0cf55bc4f9e1ecc3f08a80ba9\" data-private-watermark-src=\"v2-3a2ab53c33218051939921dcf78bc554\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-f7cdca843886b90d9608a897ade7747c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"480\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f7cdca843886b90d9608a897ade7747c\" data-watermark-src=\"v2-462688d2ca1ff51173d39fbd857ab116\" data-private-watermark-src=\"v2-e0afe5f5e21e078f4d5c95536f4f1ae1\"></p>\n<p data-pid=\"mmHoGmom\">然而事实上她在一次重要的实验中暴走，伤害了有可能注资研究所的大人物，因此马上会被研究所处以安乐死</p>\n<p data-pid=\"3-3vP5ov\">所以小林冒着生命的危险，将108号带出实验室，最终被李主任发现，也是由此，展开讲了李主任和小林的身世（这里就不剧透了）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-68f416b7cd19e572ea70ef03a97dbe31_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"999\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-68f416b7cd19e572ea70ef03a97dbe31\" data-watermark-src=\"v2-a5e86e1b65b207cd65e334cfa0a73b00\" data-private-watermark-src=\"v2-6135b90e823ac276ad9921ad4db34ea6\"></p>\n<p data-pid=\"9Ju-9-r6\">最终，小林和108号如愿去到游乐场，但是最终由于小林之前错杀了人，因此警察前来逮捕他</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0498b0defd5d1f8f99a473198d356585_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"960\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0498b0defd5d1f8f99a473198d356585\" data-watermark-src=\"v2-3f74084a54a827549f14383ba9726931\" data-private-watermark-src=\"v2-a0f04f4a4ac5f75180eb718b3af6e55b\" data-tags=\"porn\"></p>\n<p data-pid=\"TTBmmkYo\">最终在一番抗争之下，小林为了108号的未来，选择了面对现实的妥协</p>\n<p><img src=\"https://pic3.zhimg.com/v2-73d1ff927736b4a28a8811b847afebed_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"1022\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-73d1ff927736b4a28a8811b847afebed\" data-watermark-src=\"v2-e3a41713ef746cfb83390c67051598ff\" data-private-watermark-src=\"v2-913a02522996e77a824767b0c32a50e9\"></p>\n<p data-pid=\"th_rcEVS\">而李主任也答应了小林，要给他们一个新的未来，就在我们以为故事就这样结束之际，作者用最后一话来了一个升华</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1de301177901b94029e10748a236bd63_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"1022\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1de301177901b94029e10748a236bd63\" data-watermark-src=\"v2-ad4a033899940db1974bc7210f869d52\" data-private-watermark-src=\"v2-0113ff03e3c20fd53b93abf3712b972e\"></p>\n<p data-pid=\"MqzaodkN\">李主任的一句：<b>你们凭什么杀人</b></p>\n<p data-pid=\"dAhN2VLc\">喊出了无数平民老百姓对当权者的质问，表达了底层人民的愤怒，同时也是一声无奈与妥协</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-760e24e1ee91d6a84703b11f693b75a0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"1022\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-760e24e1ee91d6a84703b11f693b75a0\" data-watermark-src=\"v2-8fb18cee0d75f17c6e5d58d898893d33\" data-private-watermark-src=\"v2-72677a6375deb0832ed1491ea68dd5dc\"></p>\n<p data-pid=\"8ovM89tQ\"><b>故事的结局不是常规的happy end也不是反转留白之类，而是一个看似悲剧实则一切归于虚无的结局。命运总是让人无可奈何，历史可能不会记录这段，但是他们至少抗争过。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-66e117ea53794df9799b55fc989f14b4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"1022\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-66e117ea53794df9799b55fc989f14b4\" data-watermark-src=\"v2-3bbffb45457a0ff205845eeab97e6599\" data-private-watermark-src=\"v2-703b1a99d5a57e318195c8895de7d347\"></p>\n<p data-pid=\"Vl54-wyL\">正如原作者在完结后所说：</p>\n<p data-pid=\"NRtstm57\">@雨人Redregen: <b>我知道大家喜欢什么，我知道画什么能让人满意，但是我不想那么做，我就是想让别人看完之后感到压抑，生气，因为这是我每天的生活</b>。我知道这部漫画不会火，一部不快乐的漫画是不会受到大众喜爱的，它会被遗忘，被抹除，就像小孩墙画一样，但是我不在乎，因为这是最完美的结局。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bd7c02799fb70ea08cb19f516f2ac1f1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"2070\" data-size=\"normal\" data-caption=\"作者后记\" data-watermark=\"watermark\" data-original-src=\"v2-bd7c02799fb70ea08cb19f516f2ac1f1\" data-watermark-src=\"v2-88295d9be32a40b0ce215eb089f47c7c\" data-private-watermark-src=\"v2-fa28d7fe20571556dbae9f376027b518\"></p>\n<p data-pid=\"zhaJUHSa\">以上</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bin-di-47-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">彬帝</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/515277181/answer/2609837734?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/469929414?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">找一个日漫，主题曲结尾是主角躺在黄色的花海上?</a><br><a href=\"http://www.zhihu.com/question/282935890?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">寻找这个作品的主人？</a><br>\n","link":"http://www.zhihu.com/question/515277181/answer/2609837734?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价白骁编绘的拳击漫画作品《4.9x4.9》?","date":"2022-08-07 09:48:17","description":"\n<h2>拳击X恋爱</h2>\n<p data-pid=\"cWFQ1UVT\">《4.9x4.9》这部曾经我以为是国内最好的拳击漫画，没想到最后变成了恋爱漫~</p>\n<p><img src=\"https://pic1.zhimg.com/v2-30da43e310492bb03802434f38579490_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"263\" data-watermark=\"watermark\" data-original-src=\"v2-30da43e310492bb03802434f38579490\" data-watermark-src=\"v2-1a53fbab7344acfec293c8d624c50047\" data-private-watermark-src=\"v2-40998e104bcb8c1c441ca7385b1e61db\"></p>\n<p data-pid=\"AC7eL7Ji\">这是一部优秀的拳击漫画吗？前期是的。</p>\n<p data-pid=\"rThQg6YU\">这是一部优秀的恋爱漫画吗？除去结尾，勉强算吧。</p>\n<p data-pid=\"1kKRn6qG\">这是一部被腰斩的作品吗？大家看完结尾，就知道了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5b0bee7b62096f114b8f4cbbdcc861f7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"907\" data-watermark=\"watermark\" data-original-src=\"v2-5b0bee7b62096f114b8f4cbbdcc861f7\" data-watermark-src=\"v2-e432784ca1c10cb841c942e2bc96a18e\" data-private-watermark-src=\"v2-2d8f8f3f7402065e854892929d443838\" data-tags=\"porn\"></p>\n<p data-pid=\"u4HVt7ZF\">那这部作品值得我们再去看吗？</p>\n<p data-pid=\"p6uw3Keu\">用 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/e6fa6fae41d56969578ef89e6b8f0f45\" data-hash=\"e6fa6fae41d56969578ef89e6b8f0f45\" data-hovercard=\"p$b$e6fa6fae41d56969578ef89e6b8f0f45\">@坛子鸦</a> 老师的话来说，<b>4.9的场景线稿，一笔一画都是那个时代漫画家的理想主义。</b></p>\n<p data-pid=\"KdPqvNeX\"><b>作者白骁凭借本作荣获第6届金龙奖最佳少年漫画奖</b></p>\n<p data-pid=\"-UFFCptu\"><b>《4.9×4.9》第一部（黑白版）连载于《漫友·少年SUPER》，第二部《漫画SHOW》上。 </b></p>\n<p data-pid=\"SI3fmTE8\"><b>第一部全14话+2话番外，第二季全50话。已有作者认证，本作不会有续章。 </b></p>\n<p data-pid=\"0qlNncsK\"><b>为啥叫《4.9x4.9》？因为青年组拳击最小擂台为4.9x4.9</b></p>\n<p><br></p>\n<hr>\n<h2>作者X访谈</h2>\n<p data-pid=\"uaD9DvPm\">关于这部作品，老实说有很多争议，在完结之时也一片嘘声，如今时过境迁，我们回头再来审视这部作品，前期一直很出彩，尤其是第一部完成度极高。很多人说作品是被迫从拳击漫转为恋爱漫的，其实不然，经本人微博私信求证，作者一开始的定位就是类似于安达充的恋爱漫。</p>\n<p data-pid=\"85uT9U5D\">至于最后为什么结束了这个故事，作者在完结之时，如是说</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7541398112e3dbbe64cdde55b8bef3e9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"713\" data-watermark=\"watermark\" data-original-src=\"v2-7541398112e3dbbe64cdde55b8bef3e9\" data-watermark-src=\"v2-1c72b37c5bb7ce3fca4c6a2ab87ef445\" data-private-watermark-src=\"v2-45b012114081dc0011ec482a68996bfb\"></p>\n<p data-pid=\"SQr4MdgL\">写在4.9完结之时 <sup data-text=\"杂志访谈\" data-url=\"https://tieba.baidu.com/p/1441209758?&amp;share=9105&amp;fr=sharewise&amp;is_video=false&amp;unique=DC49A144C54CDF0F164FD0E1DE6292EB&amp;st=1647882810&amp;client_type=1&amp;client_version=12.21.1.0&amp;sfc=copy&amp;share_from=post&amp;source=12_16_sharecard_a&amp;red_tag=1533435943\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup></p>\n<p data-pid=\"4zWIKlbw\">4.9是个蛮奇怪的故事，作为少年漫画，他里面有太多的心情描写，太太过细腻。而作为少女漫画，他又动不动就打个六七期。所以别人问我在画什么类型的故事，我都说“我画的是最少女的少年漫画和最少年的少女漫画”。</p>\n<p data-pid=\"Lr6kWtHE\">最初，我觉得这是我的优点，但现在看来，它是双刃剑，少年们期待的热血这里并不常见，少女们期待的浪漫这里也不多给。哈哈，大家都很难得到百分百的满足是我这个作者的失败。</p>\n<p data-pid=\"lA7DOZIo\">4.9是很难定性的故事，如果让我归类的话，他是一个描写我自己生活的青年故事。 我把我自己漫画道路上的心情，恋爱的心情，和父母老师相处的心情，写进故事，以一个大小孩的心态讲给各位。</p>\n<p data-pid=\"gP2MJlxX\">曾经听到一个在打拳击的读者告诉我，“我讲的拳击技术都太夸张，只有比赛心情是真实的”。我偷乐，那根本不是拳击心情，而是我画漫画时候的心情呀。</p>\n<p data-pid=\"tjdjSA06\">在随着年龄的成长，我不但能够体会年轻人追求梦想的拼劲，也能体会一些大人们对孩子的心情了。我不想只单方面的为梦想加油，也想说说那些我年少时看做敌人的老师，家长们的想法。 所以，我写了abcd后，又写了唐桦老师对小争他们的各种看法。也因此写了小争的对梦想的拼搏，也写了坡对梦想的迟疑，畏惧。我没有给出到底哪个看起来更合理，更可行，因为这种事没有答案，是要每个人自己去选择自己去承受的，他永远没有明确答案。这也是我说自己的漫画有点青年的原因。青年漫画可不是只要喷血色情就是青年呦，青年和少年的区分是“<b>少年漫画是给读者鼓劲加油的，而青年漫画是给读者提问题造成读者疑惑让读者去思考的。</b>”</p>\n<p data-pid=\"EYa9G1ks\">曾经在一次签售上，一个看似高中生的读者和他妈妈一起来，他们和我说，两人有讨论过我写的那些话，之后母子的互相了解加深了。 这应该是我听过的最棒的反馈，因为我真正想通过故事做的事情，至少在他身上成功了。关于恋爱，哈哈，我被评价为韩剧了，恩，49上来就是恋爱故事，从第一集就是，虽然有樱木花道这个打着追晴子却和流传搞基的经典人物做先例，可，我一点都不想那么做呀。</p>\n<p data-pid=\"IApIepuw\">4.9第一话里小争不敢向温雅表白，是我自己做过的事情，我有好长一段时间都沉浸“不敢开口”的悔恨。也因为这个我把他画进了我的第一个连载。</p>\n<p data-pid=\"OOBLb6Vw\">而在故事的结尾，小争憎恶自己的懦弱，他对原来的自己极度的不自信，他觉得自己只有变成另外一个人，才能获得温雅的亲睐。所以他突然大变身，一直瞪眼睛，一直大声讲话，一直给自己披上一层别人的外衣。 这其实也是我的经历，而且就在最近。</p>\n<p data-pid=\"icrSXOir\">大家都知道，画漫画是比较宅的职业，少出门，少社会经历，本来我觉得这没什么。但我那个她不喜欢宅这个属性，我第一次后悔选择这个职业。之后我逼迫自己做很多以前不做的事情，改变我的想法，处世方式，有锻炼机会就跑去寻求改变。那段时间我满脑子里想的都是这方面的事情，也就顺其自然的把它编进了故事。 画到温雅说小争你不需要勉强自己，小争恢复了原来的表情的时候，我在电脑前哽咽，我自己其实也很想听到这句话呀，谈恋爱真是很累呢......。 九把刀说“喜欢什么样的女生，就会变成什么样的人”，小争在变，我也在变，希望各位读者也喜欢上优秀的女生，然后变成更加完美的男性（女性读者我就不管了，你们是上帝）总之，这就是49一路下起起伏伏的原因。这个故事过于个人化，我考虑自己想法多过考虑读者的阅读需求。所以，我停止了这个故事，努力让下个故事能做到我自己和读者的喜好都能兼顾。</p>\n<h2>黑白X第一部</h2>\n<p data-pid=\"QqHh2_YU\">《4.9×4.9》第一部连载于《漫友·少年SUPER》上，彼时在《漫友·少年SUPER》上连载的都是黑白漫画，也非常切合拳击漫画特有的线条感，因此《4.9x4.9》第一部的评价相当之高。也因此第一部收录单行本有全3卷。并且还创作了金龙奖特别篇 ——叶楠的故事（连载版本为15，16话）</p>\n<p data-pid=\"8uqZ2c8D\">作品最开始，是一名普通到不能再普通的少年，他有着如同所有人一般的梦想--变强</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5c147f8e707487e1dd12f841568671dd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1853\" data-watermark=\"watermark\" data-original-src=\"v2-5c147f8e707487e1dd12f841568671dd\" data-watermark-src=\"v2-50c57d29f79583af999e2350bad40474\" data-private-watermark-src=\"v2-73c9c60711eb03d544191e71f23c4194\"></p>\n<p data-pid=\"6dV1QIPj\">因为他本身是一个不够勇敢，甚至可以说是一个胆小怕事的人，自己暗恋了许久的校花，根本不敢告白。</p>\n<p><img src=\"https://pica.zhimg.com/v2-92e6d07c30a46ce18100ff1b74dd3494_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1749\" data-watermark=\"watermark\" data-original-src=\"v2-92e6d07c30a46ce18100ff1b74dd3494\" data-watermark-src=\"v2-f62d2968da2f4fe7e9a7bd3f814dd4ae\" data-private-watermark-src=\"v2-3e1da2da1dad61b149fb92064c20ddf4\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-fc40d71151fb7d3d616a37db682392aa_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1522\" data-watermark=\"watermark\" data-original-src=\"v2-fc40d71151fb7d3d616a37db682392aa\" data-watermark-src=\"v2-058d6aacbc4c7dadef7631cf3d97acd2\" data-private-watermark-src=\"v2-42db8211f7e747080549acd847cc82d8\" data-tags=\"porn\"></p>\n<p data-pid=\"97Ms407P\">就连放学以后被欺负，也选择认命，被打一下就好了，关于这一点，连续两次被女主温雅看破</p>\n<p><img src=\"https://pica.zhimg.com/v2-3953a3dca002d27b8b1406ce018cfef2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1700\" data-watermark=\"watermark\" data-original-src=\"v2-3953a3dca002d27b8b1406ce018cfef2\" data-watermark-src=\"v2-ba67ef337a6c0f9ec816987552442e4c\" data-private-watermark-src=\"v2-5fe47120fa6b4727052586395c330e23\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-0eb8537e01475d3de764ab124f7a41d1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1892\" data-watermark=\"watermark\" data-original-src=\"v2-0eb8537e01475d3de764ab124f7a41d1\" data-watermark-src=\"v2-add8485df21888568ab7014f7bb77623\" data-private-watermark-src=\"v2-0306976ea9f7eea3529f0e5e5dcde32e\"></p>\n<p data-pid=\"1WJQnjaw\">但是在最后，温雅依旧出手相救。但是对男主却失望透顶</p>\n<p data-pid=\"A_iwxDaD\">也正是这个离开之时冷漠的眼神，碾碎了小争的自尊心，为其后面爆发埋下一颗种子</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b8d961fb33f13c22a29dffff61c156a9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2308\" data-watermark=\"watermark\" data-original-src=\"v2-b8d961fb33f13c22a29dffff61c156a9\" data-watermark-src=\"v2-b75beffc06d9880577e14f94d664d999\" data-private-watermark-src=\"v2-0ca6abeab1046a04949729162f56ecc3\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-28fdda5747d513d42fdbb3efef905ca8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1781\" data-watermark=\"watermark\" data-original-src=\"v2-28fdda5747d513d42fdbb3efef905ca8\" data-watermark-src=\"v2-a9d7b422fa4ca7908305ed8ab5234d72\" data-private-watermark-src=\"v2-79fcdf3cc67d9f196e18d8f0191092b4\" data-tags=\"porn\"></p>\n<p data-pid=\"57qkv-5Y\">于是乎，顺理成章地，小争被带到拳击社，也自然而然地发现女主温雅就是这里的学员</p>\n<p data-pid=\"xCrAEvsx\">因此，恋爱与拳击的故事，就从这一刻开启。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-07f55954b2d37aff16f48cb9772a52c2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2157\" data-watermark=\"watermark\" data-original-src=\"v2-07f55954b2d37aff16f48cb9772a52c2\" data-watermark-src=\"v2-fb76782189352e9eaec44857f3b1945d\" data-private-watermark-src=\"v2-d88e486c5b49ca4ee46e19cf94f22537\" data-tags=\"porn\"></p>\n<p data-pid=\"UVVIYLd_\">而第二天再次在学校被欺负，还是被一位前拳击手欺负之时</p>\n<p data-pid=\"jUQIKqPp\">我们的男主吴争，想起了温雅那句，他就是一直任人宰割的兔子之时</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7bdcbb4525b95f31bc9130948cd0c882_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1889\" data-watermark=\"watermark\" data-original-src=\"v2-7bdcbb4525b95f31bc9130948cd0c882\" data-watermark-src=\"v2-bf2467eea5ebca7f4364c99f3c256ce7\" data-private-watermark-src=\"v2-76fe72577272fc50327f1aa2f7e71169\"></p>\n<p data-pid=\"B8-3g77-\">他勇敢地站起来了，并用在拳击社看到的动作，做好反击准备</p>\n<p data-pid=\"lniIlFEy\">这一段剧情中由远到近的特写，黑色网格的应有，无不彰显出这部作品的潜力，同时也从小争 的眼神中看到他的不甘与改变</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e770d0826d0a29d66edab29f5326393c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-e770d0826d0a29d66edab29f5326393c\" data-watermark-src=\"v2-644fe08adff43f59d56933a74ab65278\" data-private-watermark-src=\"v2-824bbce35cb91c6811f1bfa210417e93\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3cb77e9ffcb69248c3b792eb0c379885_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1057\" data-watermark=\"watermark\" data-original-src=\"v2-3cb77e9ffcb69248c3b792eb0c379885\" data-watermark-src=\"v2-7cfc1c2fd940e46b4a8642bae2889852\" data-private-watermark-src=\"v2-85b531898a3d1e991bfe5e7e3a0b1e1f\" data-tags=\"porn\"></p>\n<p data-pid=\"5mniNpWW\">尤其是在面对强大的对手之时，能应用昨晚第一次见到的招式，也显露出来男主身上惊人的动态视力</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5679a5c9e8887b85cceb83316b92a10e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1446\" data-watermark=\"watermark\" data-original-src=\"v2-5679a5c9e8887b85cceb83316b92a10e\" data-watermark-src=\"v2-bfc4a126ee0a10a2871f34462d641f1b\" data-private-watermark-src=\"v2-34ac0a6bdf8826243cc208d5b96a325e\" data-tags=\"porn\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-4edc6aa29b6d7cc8f67a19383c66c11b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2140\" data-watermark=\"watermark\" data-original-src=\"v2-4edc6aa29b6d7cc8f67a19383c66c11b\" data-watermark-src=\"v2-e2d732376b906560d3cb063764919f77\" data-private-watermark-src=\"v2-b816cd9628bb545e71facc5f92b21bc2\" data-tags=\"porn\"></p>\n<p data-pid=\"Xj4JrAeX\">即便最后还是被打倒在地，但是这一幕恰巧被温雅看到，因此温雅帮小争立下了一个月后学会拳击与对方PK的约定，如果输了就当对方女朋友</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9154e856594482d751a4109bf27fb858_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1557\" data-watermark=\"watermark\" data-original-src=\"v2-9154e856594482d751a4109bf27fb858\" data-watermark-src=\"v2-61c16a478f005bd5147f7bd9efae6fa2\" data-private-watermark-src=\"v2-fe89480284b24d1304d96fa87a516ded\"></p>\n<p data-pid=\"uFahANJY\">因为主角是拳击小白设定，所以这部作品也很好地向读者科普了关于拳击的一点知识点</p>\n<p><img src=\"https://pica.zhimg.com/v2-b7bddd5047daa4711b1a462841c23f55_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1226\" data-watermark=\"watermark\" data-original-src=\"v2-b7bddd5047daa4711b1a462841c23f55\" data-watermark-src=\"v2-a6b95b5191bc545de3944142cec11c38\" data-private-watermark-src=\"v2-f26a8d29bfc13ecafc0c22a6825aedad\" data-tags=\"porn\"></p>\n<p data-pid=\"TBzS8DMt\">这部作品前期之所以好看，除了故事外，白骁画的各种线条确实非常有力量感，能让读者自然带入拳击现场。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-17aab13cdaf5304922e6852351d74ee4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2234\" data-watermark=\"watermark\" data-original-src=\"v2-17aab13cdaf5304922e6852351d74ee4\" data-watermark-src=\"v2-d6c09ef2796ffa471cc54f80afd095fd\" data-private-watermark-src=\"v2-18f3eec69ef97a24c9b8aa36a322ff38\"></p>\n<p data-pid=\"Ghk7L8xk\">当然也会有一些特殊的拳击步法和特殊技巧</p>\n<p><img src=\"https://pic1.zhimg.com/v2-518010d560d1ed90027ffe9b34e09bbb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2259\" data-watermark=\"watermark\" data-original-src=\"v2-518010d560d1ed90027ffe9b34e09bbb\" data-watermark-src=\"v2-6413e133f71270651cd5afef4483d1a7\" data-private-watermark-src=\"v2-fd3596c3432cc1be0e0029af94af7d3f\"></p>\n<p data-pid=\"x3_h4MHh\">既然是恋爱漫画，中间还穿插了一段温雅不慎落河，小争英雄救美的桥段，以提升两人之间好感度</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6e608510c7df0023e8f6d8f5db427b2c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2601\" data-watermark=\"watermark\" data-original-src=\"v2-6e608510c7df0023e8f6d8f5db427b2c\" data-watermark-src=\"v2-92ecc63b226aa0f4bfa2794dbd9a303e\" data-private-watermark-src=\"v2-1209b50e4b6dd27a7fb3a0e4e9389f68\"></p>\n<p data-pid=\"BYBCPUJ5\">终于到了决赛的日子，两人正式开打，这幅对决图中两人的眼神就可以看出彼此的性格</p>\n<p data-pid=\"18DjssBA\">小争眼神坚定，果敢。</p>\n<p data-pid=\"Dfoa9Q3j\">而他的对手，郭菲则眼神充满不屑，轻视对方</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e291b826f39d8171451c9a1187f28a65_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1853\" data-watermark=\"watermark\" data-original-src=\"v2-e291b826f39d8171451c9a1187f28a65\" data-watermark-src=\"v2-cee713832d9c0b0496925146002fe2ab\" data-private-watermark-src=\"v2-5ab16c3c9c06106b2137a3a98794d44b\"></p>\n<p data-pid=\"RC1jHf5p\">因此造成了最开始的局面，小争全力以赴，用尽自己在这一个月中所学，不留遗憾</p>\n<p><img src=\"https://pica.zhimg.com/v2-6af72b5bca29cdb8a9025ff9d456011d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2462\" data-watermark=\"watermark\" data-original-src=\"v2-6af72b5bca29cdb8a9025ff9d456011d\" data-watermark-src=\"v2-d2beb3784dec9017f2380f7e29d27c24\" data-private-watermark-src=\"v2-bb0642fd8b79e79f2cb528f58d081c43\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-5a516cbd388e0ba8e52acdbd6399de06_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1885\" data-watermark=\"watermark\" data-original-src=\"v2-5a516cbd388e0ba8e52acdbd6399de06\" data-watermark-src=\"v2-33ac664538cd710a7eeb564609ca18ca\" data-private-watermark-src=\"v2-893da5348971dc91a47939922136a963\" data-tags=\"porn\"></p>\n<p data-pid=\"ZB7a7f6c\">然而前少年组拳击亚军不是那么简单的，因此小争只有孤注一掷，使用自己最强力的招式--上钩拳</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9f6e8de0af209db15df4e8122b3879ec_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2168\" data-watermark=\"watermark\" data-original-src=\"v2-9f6e8de0af209db15df4e8122b3879ec\" data-watermark-src=\"v2-848b951915c1facbfe90fca70f138cf5\" data-private-watermark-src=\"v2-e8e08c5ae78275ab01fa4844ee58f552\" data-tags=\"porn\"></p>\n<p data-pid=\"wSEGrY8r\">然而这一切早已被强大的对手所看透，一击必杀予以回应</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7cab9e7ebdd193c9f769791f3de149b1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-7cab9e7ebdd193c9f769791f3de149b1\" data-watermark-src=\"v2-e7796fc73abcddeaff1d7e04d874963e\" data-private-watermark-src=\"v2-3bb2cf63b805ae37cd80f2c5d412292e\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-b6d133148cea9d0432350c2fa780b3f0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-b6d133148cea9d0432350c2fa780b3f0\" data-watermark-src=\"v2-a96ea2152c5038371dbf7baca3adf16c\" data-private-watermark-src=\"v2-11ef3886c814a629481f3bca11f82a12\"></p>\n<p data-pid=\"HNhDfPHj\">但是小争并没有因此而倒下，而是凭借着自己的意志力站起来，他告诉自己还有一招没用出来，不能再像以前一般逃避，因此他站起来了，在遭受一记重拳以后依旧站了起来</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-6c4225ff89674c94249a104abdde3a1c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1891\" data-watermark=\"watermark\" data-original-src=\"v2-6c4225ff89674c94249a104abdde3a1c\" data-watermark-src=\"v2-814e0344306063f993d80cb4356ad5b2\" data-private-watermark-src=\"v2-15975903b152154f5ba88c6d33f4ce36\"></p>\n<p data-pid=\"agx2oK5k\">并且采用舍命陪君子的方式，极限一换一，最终成功打中对方一拳</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e52c50cd28c7d0e2664310015ed7c551_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-e52c50cd28c7d0e2664310015ed7c551\" data-watermark-src=\"v2-d73c2786b8d7c8c2725ae1e0c521df61\" data-private-watermark-src=\"v2-d77ed3d8a5e320e4e818dd98b817af31\"></p>\n<p data-pid=\"PC5zOppW\">不过这部作品难能可贵的地方，就是真实感</p>\n<p data-pid=\"Z85A52UN\">我们想一下也知道，即便是主角，即便再怎么开挂，一个再天才的人还是不能在短时间之内打赢一位前专业拳击手</p>\n<p data-pid=\"F9KXftFi\">因此，小争打完那一拳就输了，此时的温雅代替小争上台继续对打</p>\n<p><img src=\"https://pic1.zhimg.com/v2-62e014cd9a7ee8b1320f2ed289796e1a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1232\" data-rawheight=\"2553\" data-watermark=\"watermark\" data-original-src=\"v2-62e014cd9a7ee8b1320f2ed289796e1a\" data-watermark-src=\"v2-7e45859349d5257e551094d2b5952f2c\" data-private-watermark-src=\"v2-820737e02c363680252eb0f947e77ad1\" data-tags=\"porn\"></p>\n<p data-pid=\"vh2CdAJl\">在温雅强大的实力下，郭菲很快招架不住，因此在看到温雅光脚的一瞬间，为了赢，他抛弃了规则，抛下了拳击的尊严。</p>\n<p data-pid=\"Clwpk6p2\">因此，被温雅称之为“弱”的他，被一击KO</p>\n<p><img src=\"https://pic3.zhimg.com/v2-20226e0d96434e3de61fa36c42811c29_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2374\" data-watermark=\"watermark\" data-original-src=\"v2-20226e0d96434e3de61fa36c42811c29\" data-watermark-src=\"v2-3bfa607f458f559a0487123de27ac99e\" data-private-watermark-src=\"v2-b2cb2acd71a02e1f204e0bb8a9f17906\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-55559e7301c33bf2f8e3a9a92002093c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2312\" data-watermark=\"watermark\" data-original-src=\"v2-55559e7301c33bf2f8e3a9a92002093c\" data-watermark-src=\"v2-2a745c70e74cc6ba8af4c2c2ec6698cf\" data-private-watermark-src=\"v2-0771900585ed27a221261689298233cb\"></p>\n<p data-pid=\"YJqv1Gj-\">在比赛结束以后，小争回顾这短短一个月发生的事情</p>\n<p data-pid=\"8GuNcx6w\">自己从一个胆小怕事的普通人到如今敢于他人在拳击台上决斗的准拳击手</p>\n<p data-pid=\"YA22lvOk\">第一次感受到了通过努力实现一件事带来的满足感</p>\n<p data-pid=\"TsNdXpJ5\">这也是这部作品前期带给我们读者的感受，似乎我们真的跟随小争一步一步努力到今天</p>\n<p data-pid=\"uc0YwHOG\">千言万语汇成一句话：能爱上拳击，真的太好了！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-76d7236016774e2884207ff9c9532628_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1920\" data-watermark=\"watermark\" data-original-src=\"v2-76d7236016774e2884207ff9c9532628\" data-watermark-src=\"v2-fe2267b42ab33122bb07eb3249980351\" data-private-watermark-src=\"v2-f4cab833553a15dd6e651edfde531d46\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-9377d327fa864348f2f5ed6401f9be85_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1303\" data-watermark=\"watermark\" data-original-src=\"v2-9377d327fa864348f2f5ed6401f9be85\" data-watermark-src=\"v2-bd813d3795c6f8e64ef4fa945ea70f27\" data-private-watermark-src=\"v2-9a9aaa187de1f0a6210de7543bd7b879\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-97a3e7aa92c462ca6d873249c28f2d95_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-97a3e7aa92c462ca6d873249c28f2d95\" data-watermark-src=\"v2-2a8c8a2a3981b979afa2f0cb6b763ca4\" data-private-watermark-src=\"v2-37f025b5c5d733b540cda22e6c02d966\"></p>\n<p data-pid=\"2tHCuz28\">有一说一，如果作品就此完结，不失为一部佳作。剧情简单明了但是又不缺乏转折性，拳击线条搭配黑白简直绝赞。</p>\n<hr>\n<h2>彩漫X第二部</h2>\n<p data-pid=\"_0e-ibj1\">第二部是因杂志改版而展开新篇章并更名<b>4.9X4.9 NEW BATTLE</b></p>\n<p data-pid=\"3Xt7xVVm\">杂志连载版命名为 <b>4.9X4.9遗失地图的旅程</b></p>\n<p data-pid=\"aeTm_VNY\">第二部的故事开篇讲述了真正爱上了拳击的小争，对其他事已经不再感兴趣，一心只想打拳击</p>\n<p><img src=\"https://pica.zhimg.com/v2-08866d29d629d5da5a5783f819ea4e5d_720w.jpg?source=b1748391?rss\" data-caption=\"这位酷似某人的角色后期还是不得不变换发型\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-08866d29d629d5da5a5783f819ea4e5d\" data-watermark-src=\"v2-e70ec20b72915c1ff62435b671178329\" data-private-watermark-src=\"v2-6e68a3fcfcff5f5e9cd9f50a9801da7e\"></p>\n<p data-pid=\"QZ26yJLq\">而新的故事，就会有新的玩法，没想到第二部的主题竟然是团体赛，并且还是以学校为单位,因此，如同其他许多运动类漫画一般，首先要组建队伍</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6b56310196dd2805f7cb5f0782792489_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1743\" data-watermark=\"watermark\" data-original-src=\"v2-6b56310196dd2805f7cb5f0782792489\" data-watermark-src=\"v2-ac19d8164c69efe81a1cd67f8d71a179\" data-private-watermark-src=\"v2-3e81fba7a2406c73e6253e4bab4b72a4\"></p>\n<p data-pid=\"y5xC4142\">而这支队伍有两个非常强大且关键的人物，坡学长和新角色黎昕</p>\n<p data-pid=\"854cLKRT\">一位是在第一部就已经登场，但是由于过去某些事情无法继续上场比赛的师兄</p>\n<p data-pid=\"X2PXKf8c\">一位是截拳道高手，但是小时候受过伤的未来电影之星的红发帅哥</p>\n<p><img src=\"https://pic1.zhimg.com/v2-beac0ec70fa97c293c4924a2c0279fa2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1805\" data-watermark=\"watermark\" data-original-src=\"v2-beac0ec70fa97c293c4924a2c0279fa2\" data-watermark-src=\"v2-292df78e217921233be92533efc74397\" data-private-watermark-src=\"v2-3a2d216e2fdcfd8c00e6897444f78dae\"></p>\n<p data-pid=\"_IGGfuqL\">在这之前，第一部的boss也化敌为友，帮助我们的小争进一步成长</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8b2794bca139bdb82fac7eabd7417afa_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1235\" data-rawheight=\"2265\" data-watermark=\"watermark\" data-original-src=\"v2-8b2794bca139bdb82fac7eabd7417afa\" data-watermark-src=\"v2-126ad38830f2897d436dc40af7ab12e1\" data-private-watermark-src=\"v2-0332c2b2f2ee9d685e7a7516e57b5d30\"></p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-e0e145a8222bfdacab53c3905d16b3a7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2353\" data-watermark=\"watermark\" data-original-src=\"v2-e0e145a8222bfdacab53c3905d16b3a7\" data-watermark-src=\"v2-81690fc0404cab5d11580b949522971a\" data-private-watermark-src=\"v2-5c58e8c5c370228789d2b740752c26d4\"></p>\n<p data-pid=\"8l3x2nX6\">而在此之前，有个最大的问题就是学校不让众人参赛，理由是影响学习</p>\n<p data-pid=\"srjyA2EA\">在这一段校园剧情中，非常多的读者会有很深的代入感，这是只有中国学生才能感同身受的剧情</p>\n<p data-pid=\"aCaFZg_A\"><b>很长一段时间里，学生的分数就是学生的命根，学校只以分数为等级划分学生</b></p>\n<p data-pid=\"xhuWGM3f\"><b>因为，不管是画漫画、跳街舞、爱唱歌还是打拳击，这些即便学生们付出很多心血和实践</b></p>\n<p data-pid=\"Rn5M82_7\"><b>愿意被他们称之为梦想的愿望、或者说兴趣。对于学校来说仅仅只是浪费学习时间的玩意</b></p>\n<p data-pid=\"iYWTpNBw\"><b>因此，学校要阻止，老师要阻止、家长要阻止。坚持的，只有孩子</b>。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ec1af2e25e1d1b08d114aac760983257_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2499\" data-watermark=\"watermark\" data-original-src=\"v2-ec1af2e25e1d1b08d114aac760983257\" data-watermark-src=\"v2-a5672c477997a8e04b293c6a0ca0ff72\" data-private-watermark-src=\"v2-94c56d9ff9d17bec51d7642850c73f33\" data-tags=\"porn\"></p>\n<p data-pid=\"i94EilCy\">现实生活中还有多少诸如小争一样的学生，他们也同样热爱着某件事情，同样愿意为之付出许多</p>\n<p data-pid=\"BzNMDIBT\">但是不是每个人身边都那么幸运有个温雅</p>\n<p data-pid=\"dnjSHs5L\">也不是每个人都能像小争一般，能得到伙伴、得到重视</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5baeea76b61f6e700337dab475e56913_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-5baeea76b61f6e700337dab475e56913\" data-watermark-src=\"v2-5fd2244ed98dcb82684f542c2b58a5be\" data-private-watermark-src=\"v2-d127f23d4d031dfbfb0d6c82a509d357\" data-tags=\"porn\"></p>\n<p data-pid=\"Ib7YZGhq\">所以整部作品最高潮、最令人热血沸腾的桥段--<b><i>做选择</i></b></p>\n<p data-pid=\"jtjO-KUT\">当小争鼓起勇气站上学校楼顶天台，为了争取自己的权益</p>\n<p data-pid=\"BvWLKN3U\">告诉底下曾经为自己人生做出过无数选择的老师们</p>\n<p data-pid=\"5X7TRNAb\">大声呼喊出当时所有读者的心声</p>\n<p><img src=\"https://pica.zhimg.com/v2-4a157cd192ca570bdc63b54e5367709b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-4a157cd192ca570bdc63b54e5367709b\" data-watermark-src=\"v2-90c304d5fc66789ba7f5ebb4cd0e2608\" data-private-watermark-src=\"v2-f7aca7b0cf1670569182689883c68490\"></p>\n<p data-pid=\"FmVyJAH7\"><b>我的人生不是选择题呀！！</b></p>\n<p data-pid=\"II_dG3Sf\"><b>你们给的abcd没有我想要的未来！</b></p>\n<p data-pid=\"U7_asBAl\">是呀，曾几何时，有多少中国学生都是按部就班、按照自己父母、自己老师给自己规划好的人生道路，一步一脚印完成。但是又有多少人有问过他们，是否真心喜欢这件事或者说愿意去做这件事。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fc1be19bfdcb60e14bf5f5a398b96d26_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"884\" data-watermark=\"watermark\" data-original-src=\"v2-fc1be19bfdcb60e14bf5f5a398b96d26\" data-watermark-src=\"v2-b11a045847b4628ef49c607764784045\" data-private-watermark-src=\"v2-23c473ef727a3f83ef4a9593128021a6\"></p>\n<p data-pid=\"x4Y63Uns\">小争这一喊，喊出了对当时教育的批判、喊出了当时学生对于追求梦想的决心。</p>\n<p data-pid=\"kXC8n-ZC\">以及，喊出了自己发自内心的对拳击的热爱！</p>\n<p data-pid=\"w_4kUxTV\">因此，校长只能答应小争他们的条件（取得全国前3），成立拳击社。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-78ac617845fa91821a15fc44b139c471_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1797\" data-watermark=\"watermark\" data-original-src=\"v2-78ac617845fa91821a15fc44b139c471\" data-watermark-src=\"v2-a158dcad980f726bb23a530a294f7118\" data-private-watermark-src=\"v2-6fd5773d50a9330cb915026378b642f9\"></p>\n<p data-pid=\"QNakD8a9\">解决了拳击社成立的问题，接下来就是参赛选手的问题了。</p>\n<p data-pid=\"50kQpQqH\">而第一位找到的就是为了向父亲复仇，学习截拳道，准备成为武打电影明星的红毛黎昕</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6fb1784c028ae351ed27120e72189ada_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"1042\" data-watermark=\"watermark\" data-original-src=\"v2-6fb1784c028ae351ed27120e72189ada\" data-watermark-src=\"v2-51ae433038013e8f0f954524477eab41\" data-private-watermark-src=\"v2-15d644d4fb4e6ffc82b2757efcda7030\"></p>\n<p data-pid=\"I6hgECzS\">单从拳击上，小争可以和红毛打得难分伯仲</p>\n<p><img src=\"https://pica.zhimg.com/v2-b19eccf45b5eda6cf0d4e97490da2d56_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-b19eccf45b5eda6cf0d4e97490da2d56\" data-watermark-src=\"v2-d3cd0a3f7362f7f7a5c56d6a459709cc\" data-private-watermark-src=\"v2-4a0094e1d09cb94e43244fe501f8d4d2\" data-tags=\"porn\"></p>\n<p data-pid=\"13ut5Seo\">原因竟然是拳击拳套限制住了红毛的截拳道技术，如同一位武林高手被束缚住手脚一般无处施展</p>\n<p><img src=\"https://pic4.zhimg.com/v2-4e42960e56d879d900866343a361178f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-4e42960e56d879d900866343a361178f\" data-watermark-src=\"v2-1f5514751fb1688b08f86fe942b62107\" data-private-watermark-src=\"v2-384b82465846f413d38ee8e3e0357945\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2801e93ce1db2c9121aa2ebc0597c2a4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1212\" data-watermark=\"watermark\" data-original-src=\"v2-2801e93ce1db2c9121aa2ebc0597c2a4\" data-watermark-src=\"v2-e739db569e565fde2aaadc878ef7e72f\" data-private-watermark-src=\"v2-94ef2490c1a5dabcda460bd2ccd0c31b\" data-tags=\"porn\"></p>\n<p data-pid=\"FYjt-gLH\">但是万万没想到，黎昕竟然使出了传说中的寸打，一招绝杀小争</p>\n<p><img src=\"https://picx.zhimg.com/v2-3ae15e8a7eb917cc5b649e42432de618_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2318\" data-watermark=\"watermark\" data-original-src=\"v2-3ae15e8a7eb917cc5b649e42432de618\" data-watermark-src=\"v2-28e103aa2641da7483f5caa85e46d1c0\" data-private-watermark-src=\"v2-c28d61637b155e27fb57a24bcfa98130\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-25d26f09a001081126b1e87a12626753_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2604\" data-watermark=\"watermark\" data-original-src=\"v2-25d26f09a001081126b1e87a12626753\" data-watermark-src=\"v2-58be31e28db005d9b975ec401cd6fac4\" data-private-watermark-src=\"v2-b3c60de4858dd7d7aff58c4ff62fbfd1\"></p>\n<p data-pid=\"96OhHU2h\">但是小争让其见识到了技巧以外的力量，那就是意志力</p>\n<p data-pid=\"BlZFJ8p2\">小争凭借自己的意志，硬生生扛过了寸打</p>\n<p data-pid=\"QblaL5hh\">并且利用头部滑动和摆拳创造出了属于自己的招数</p>\n<p><img src=\"https://pica.zhimg.com/v2-bb7411bd260fe488b2da8177863891c3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2426\" data-watermark=\"watermark\" data-original-src=\"v2-bb7411bd260fe488b2da8177863891c3\" data-watermark-src=\"v2-bd278828099687144f38abafaa3b500a\" data-private-watermark-src=\"v2-e6862dc2346317092528ebf02011c68b\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-9cc33944dbd4fe604749fcb82771e9f0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1794\" data-watermark=\"watermark\" data-original-src=\"v2-9cc33944dbd4fe604749fcb82771e9f0\" data-watermark-src=\"v2-74c4582e3d5e7c8380554163d9183140\" data-private-watermark-src=\"v2-8edc4f373008ba18618563081c08b89c\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-aa3ca9e651b7ee8ded8e2caaab78e80a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2485\" data-watermark=\"watermark\" data-original-src=\"v2-aa3ca9e651b7ee8ded8e2caaab78e80a\" data-watermark-src=\"v2-edd100dd65dc153923d9d219e2cd4f96\" data-private-watermark-src=\"v2-7fcd36bd1a8d4ddbfe04afc3c4cec6a1\"></p>\n<p data-pid=\"ftatETZF\">最终两人战平，因此，新成员正式加入</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7a8bc5ecc1b800dabc584487c0248c6e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1808\" data-watermark=\"watermark\" data-original-src=\"v2-7a8bc5ecc1b800dabc584487c0248c6e\" data-watermark-src=\"v2-e8e1d6536363339866daca4d15c017ba\" data-private-watermark-src=\"v2-977299b52db52e1a35307e35abacf3ff\" data-tags=\"porn\"></p>\n<p data-pid=\"sUdnbYth\">在收入一名学生后，又来一位自以为可以帮到学生的年轻班主任</p>\n<p data-pid=\"HSyuQChD\">口口声声说为了孩子的将来负责，因此申请做了拳击社的指导老师</p>\n<p data-pid=\"ClMl43GR\">但是令她没想到的是，小争一群人竟然可以为了拳击做到这个地步</p>\n<p data-pid=\"PjVKtdBd\">这也是作为一名老师从未见到的表情，因为在老师面前，学生不可能展示真实的自我</p>\n<p data-pid=\"KMO-8akj\">因此，小争他们的刻苦训练，让老师对他们刮目相看</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d17f8675eb3b69f067f04d96301d08ac_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1785\" data-watermark=\"watermark\" data-original-src=\"v2-d17f8675eb3b69f067f04d96301d08ac\" data-watermark-src=\"v2-b022fbf8e0d03c3003b8a506f34c5ca3\" data-private-watermark-src=\"v2-c89cc4fcd3479b1816cfd7f0cbd1b144\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-593fa6d8a6c2c4b70e34d187d1720249_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-593fa6d8a6c2c4b70e34d187d1720249\" data-watermark-src=\"v2-a144cafcb2da4bcedb116040a321cf52\" data-private-watermark-src=\"v2-ae095e696c052c31f658e3ebae443651\" data-tags=\"porn\"></p>\n<p data-pid=\"79cnFoha\">就在大家以为接下来的是全国大赛之时，剧情来了一个 急转弯，先来一个练习赛，打输了直接解散，而且对手还是前青年冠军左宥安</p>\n<p><img src=\"https://pica.zhimg.com/v2-17f8fe112cd6d5305ec7be8991da31e4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1738\" data-watermark=\"watermark\" data-original-src=\"v2-17f8fe112cd6d5305ec7be8991da31e4\" data-watermark-src=\"v2-a7fd28d0b3951c138296e57939889fc5\" data-private-watermark-src=\"v2-78eeef6ca8fc81c9028e2167bb1f3c9b\"></p>\n<p data-pid=\"RJN1dgj0\">新出场的对手中，其中一名叫陈肃的选手是粉色经理人的故友，拜托其防水，对方不肯</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7d69b4e7150b4bec7865a0fbfe925259_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1635\" data-watermark=\"watermark\" data-original-src=\"v2-7d69b4e7150b4bec7865a0fbfe925259\" data-watermark-src=\"v2-cb829cb1646cc6ebae22ea99c0fd003d\" data-private-watermark-src=\"v2-1773fee28e5c614d5fa86fc41b75d252\" data-tags=\"porn\"></p>\n<p data-pid=\"ax6J1zqQ\">而不愿意上台比赛的坡学长则自己出手在路上挡住对手大将</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9b2a3b72cfa761646c6799786624fac9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2427\" data-watermark=\"watermark\" data-original-src=\"v2-9b2a3b72cfa761646c6799786624fac9\" data-watermark-src=\"v2-3c0f62e0ec529a8de9b2d1079c891b09\" data-private-watermark-src=\"v2-20fe5f5992927e474431ef99b0749dd1\"></p>\n<p data-pid=\"e9yBD-Jz\">而陈肃和黎昕这场比赛可谓拳拳到肉，精彩绝伦</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e31faf23fdfb884eabe7202cf96b6230_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2252\" data-watermark=\"watermark\" data-original-src=\"v2-e31faf23fdfb884eabe7202cf96b6230\" data-watermark-src=\"v2-6fc74ebcacb376dfdfdbfc525960dd64\" data-private-watermark-src=\"v2-b0349547b371ad77ed21b021a6e5ec35\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-86cec2e7a70832d6a93f8fe907c6030c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-86cec2e7a70832d6a93f8fe907c6030c\" data-watermark-src=\"v2-bdbe09fae11581df0ad7e55612294cd7\" data-private-watermark-src=\"v2-4cb22db361368077f3b341bd7fb06515\"></p>\n<p data-pid=\"VXPZubCZ\">在拳击中回想起一切的黎昕，为了报复一切，以孤独为力量，用尽全力给予对手一击，最终险胜</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ac38b790e8d1fb5d0081297807a40bb0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1822\" data-watermark=\"watermark\" data-original-src=\"v2-ac38b790e8d1fb5d0081297807a40bb0\" data-watermark-src=\"v2-1043ec5e7d3e8bad39e37697b88abc87\" data-private-watermark-src=\"v2-e76f7ca822164184db1a72521312cd3d\" data-tags=\"porn\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-f67cdd98f0183c45132cc020abf86936_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1607\" data-watermark=\"watermark\" data-original-src=\"v2-f67cdd98f0183c45132cc020abf86936\" data-watermark-src=\"v2-1632158bb8a3806c97566a4431366595\" data-private-watermark-src=\"v2-6dd1b5a9776ef9e4afba7aa850c58688\" data-tags=\"porn\"></p>\n<p data-pid=\"VEk5Zoot\">而他们的副将则对阵女扮男装的温雅</p>\n<p><img src=\"https://pic2.zhimg.com/v2-015de9f4de016f7391936c0b56133c5d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2216\" data-watermark=\"watermark\" data-original-src=\"v2-015de9f4de016f7391936c0b56133c5d\" data-watermark-src=\"v2-3b405d93282c0e98038bb91b0c54b9d4\" data-private-watermark-src=\"v2-4723418f13c6ce66b0ac846434e59d8c\" data-tags=\"porn\"></p>\n<p data-pid=\"qmdCvyTM\">在第一回合中，因为要保持男装所以放不开，因此温雅决定以女生姿态面对对手</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b47ed2671603eec594dce48b02664638_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2559\" data-watermark=\"watermark\" data-original-src=\"v2-b47ed2671603eec594dce48b02664638\" data-watermark-src=\"v2-03d518a75c781a81aa5a419f9885f081\" data-private-watermark-src=\"v2-01f2e00b3a2c00eee3d66ea1cde7d430\" data-tags=\"porn\"></p>\n<p data-pid=\"U304nuAR\">在最初的气势上确实占优势，但是在实力相差不大的基础上，温雅逐渐落于下风</p>\n<p><img src=\"https://pic4.zhimg.com/v2-9e44ed34f28b60bb5e8c3d83c820dc45_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1221\" data-rawheight=\"2553\" data-watermark=\"watermark\" data-original-src=\"v2-9e44ed34f28b60bb5e8c3d83c820dc45\" data-watermark-src=\"v2-b729e28195908aaba991728e9c0f39dc\" data-private-watermark-src=\"v2-52f6513b909b40d7b71146f450201d73\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6dae974b0ba9e89b814bdde3593d862e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1927\" data-watermark=\"watermark\" data-original-src=\"v2-6dae974b0ba9e89b814bdde3593d862e\" data-watermark-src=\"v2-4897ceedc3b835c4a709b94af81c9fb7\" data-private-watermark-src=\"v2-a09492019e3fce23556e25796a166309\"></p>\n<p data-pid=\"vb1p1pl2\">在小争心中，温雅一直都是无所不能，战无不胜的</p>\n<p data-pid=\"E8diYiOT\">但在这场比赛中，小争第一次有了想保护稳压器的愿望</p>\n<p><img src=\"https://pic1.zhimg.com/v2-858dfcebcd80376023322f2acbec0e82_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2483\" data-watermark=\"watermark\" data-original-src=\"v2-858dfcebcd80376023322f2acbec0e82\" data-watermark-src=\"v2-200c783be82717f84153a2d67c1842b0\" data-private-watermark-src=\"v2-7507e0f7ed87ed6245f2284162121077\" data-tags=\"porn\"></p>\n<p data-pid=\"51E705Ye\">并且勇敢滴在所有人的面前说他心疼温雅，其实也就是间接告白</p>\n<p data-pid=\"qOfnfNvA\">这一段人物形象刻画，充沛而饱满，小争变得越来越强大</p>\n<p><img src=\"https://pic1.zhimg.com/v2-af1ca322e2aa4ee39a6a189c83cc135e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2406\" data-watermark=\"watermark\" data-original-src=\"v2-af1ca322e2aa4ee39a6a189c83cc135e\" data-watermark-src=\"v2-bc3b7000c58411c6347e5644e9339ba6\" data-private-watermark-src=\"v2-c7cf204e3d6cb8f2fa605751b82d7c56\" data-tags=\"porn\"></p>\n<p data-pid=\"tpKNrGr6\">而在温雅心中，小争的形象逐渐发生了改变</p>\n<p data-pid=\"oF34Omt7\">变得内敛而自信，让人觉得值得信赖</p>\n<p><img src=\"https://pic1.zhimg.com/v2-63bd393d1efcc8cd77fc1c1155dacc62_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2155\" data-watermark=\"watermark\" data-original-src=\"v2-63bd393d1efcc8cd77fc1c1155dacc62\" data-watermark-src=\"v2-77bfa6a5f279b80844b8a40a28a84d2d\" data-private-watermark-src=\"v2-229a7e018410665c4a6ce632a01fd9c6\"></p>\n<p data-pid=\"T9zrW4W6\">而在随后看望温雅两人独处之时，小争直接告白</p>\n<p data-pid=\"Z50VSXyI\">我喜欢你！！</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a022070f3fa8b8d071d94ebe77bf6717_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-a022070f3fa8b8d071d94ebe77bf6717\" data-watermark-src=\"v2-233a01dde141a62b5c1ac2c8fc40837d\" data-private-watermark-src=\"v2-092aa69c65d0927a4cf432019c4ccab8\" data-tags=\"porn\"></p>\n<p data-pid=\"SD2eky7q\">而整部作品最大疑点的坡学长不在继续打拳击的缘由也逐渐揭开面纱</p>\n<p data-pid=\"BLYnyaEi\">这一段我就不剧透了，不过就我个人而已，这里处理地不太好，所以也是本作槽点之一</p>\n<p><img src=\"https://pica.zhimg.com/v2-d89321f4d3cf4ee10b21c990c6dedfa4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-d89321f4d3cf4ee10b21c990c6dedfa4\" data-watermark-src=\"v2-e4f7cfadf0356a477c20e7770eff860a\" data-private-watermark-src=\"v2-a9b7f21e59a056e18f02013754620c56\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-7881831aa11647047276ed164f7b28ea_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-7881831aa11647047276ed164f7b28ea\" data-watermark-src=\"v2-036ce3760b6d56fdb1f014d911dd7c5a\" data-private-watermark-src=\"v2-5932253bbaa5ce7c56edf75256ff9b34\"></p>\n<p data-pid=\"cKK92DzV\">万万没想到的事故事到这里就已经是结尾了，没有拳击，没有全国大赛</p>\n<p data-pid=\"8-jK79f5\">但是还有一个为争夺温雅芳心的小争和坡学长的点没解决</p>\n<p data-pid=\"d-Zptp0o\">因此小争vs坡，正式开打</p>\n<p><img src=\"https://pic4.zhimg.com/v2-c3307debdfe99582b74861b110190996_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-c3307debdfe99582b74861b110190996\" data-watermark-src=\"v2-cdf03972db234c0774eb348db71396a9\" data-private-watermark-src=\"v2-63d69bc93247bd43f2680c99134ec789\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a31cb3cfb726014390b5a30031041a6d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-a31cb3cfb726014390b5a30031041a6d\" data-watermark-src=\"v2-dff2b7bb9c8a666c8a8ad8e354f54874\" data-private-watermark-src=\"v2-9ba7949daf95c22c2bbf9a50f98e9397\" data-tags=\"porn\"></p>\n<p data-pid=\"BVnKMNM0\">打到最后都已经不是拳击了，简直就是打架。。。。</p>\n<p><img src=\"https://pica.zhimg.com/v2-9dfedd54f8cd896daa877e42ad362d58_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2517\" data-watermark=\"watermark\" data-original-src=\"v2-9dfedd54f8cd896daa877e42ad362d58\" data-watermark-src=\"v2-5b8541254418f866a859cc5cf9403194\" data-private-watermark-src=\"v2-3c5f6fe569046c18e63a8aca00243c98\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-1e04491fa4942e923cad7440b528b1e7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1980\" data-watermark=\"watermark\" data-original-src=\"v2-1e04491fa4942e923cad7440b528b1e7\" data-watermark-src=\"v2-951f6c125840fc669b541e2e9cd2aabb\" data-private-watermark-src=\"v2-8055c63d344de8a00f293fa0749420ca\" data-tags=\"porn\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-fc9111dd260d6d21747f9304385c1e52_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2172\" data-watermark=\"watermark\" data-original-src=\"v2-fc9111dd260d6d21747f9304385c1e52\" data-watermark-src=\"v2-303cdfe838a0aea8add38ebfd8eec0ad\" data-private-watermark-src=\"v2-c9cba73e42aff9989154fc517d454610\"></p>\n<p data-pid=\"7o9NgUqX\">最后的最后，温雅看似回应表白的：小争我喜欢你，却更像是发了好人卡</p>\n<p><img src=\"https://pica.zhimg.com/v2-b59999e711ced44acae595813cca2634_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2688\" data-watermark=\"watermark\" data-original-src=\"v2-b59999e711ced44acae595813cca2634\" data-watermark-src=\"v2-4925ba3b5d04bc53534f3fd6bab40faf\" data-private-watermark-src=\"v2-3cc23aee476cfade5a0dd98edd3ebc60\" data-tags=\"porn\"></p>\n<p data-pid=\"i0uHqrCz\">因为最后温雅将吻给了坡</p>\n<p data-pid=\"gRnLI_tD\">而坡学长也终于愿意承认，自己是一名拳击手这件事，也预示着他的心结经打开</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ffb97f3df0f7c75454c167033229fa49_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1759\" data-watermark=\"watermark\" data-original-src=\"v2-ffb97f3df0f7c75454c167033229fa49\" data-watermark-src=\"v2-a1c1f1a9d7da7be4096e31315b845a8b\" data-private-watermark-src=\"v2-5a55678723c24065dd01460b40a93207\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-c2b0db3d82210d024b127806388bc9f0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1777\" data-watermark=\"watermark\" data-original-src=\"v2-c2b0db3d82210d024b127806388bc9f0\" data-watermark-src=\"v2-718105846dc017df6eda2dc6eaa42d17\" data-private-watermark-src=\"v2-8137bad694b0bfe56329ed294b26659c\" data-tags=\"porn\"></p>\n<p data-pid=\"PKCFkzeu\">之所以大家吐槽烂尾，是因为大家期待的全国大赛没有了</p>\n<p data-pid=\"3aFoG_6r\">而且最后十年后温雅依旧在两人之间不断徘徊</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f2cf06053d58c2fd524cf6a2d26c8869_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2479\" data-watermark=\"watermark\" data-original-src=\"v2-f2cf06053d58c2fd524cf6a2d26c8869\" data-watermark-src=\"v2-d8e210383ee1ac51c0c876a9f3e683f2\" data-private-watermark-src=\"v2-7de1d0690437026531eb9ca45dc7f936\"></p>\n<p data-pid=\"S-y2dBE7\">还有就是小雪竟然和左宥安在一起了，前面根本没有感情戏铺垫</p>\n<p><img src=\"https://pic1.zhimg.com/v2-25a4ecb92f7b2143ca996dcf99e0ffe0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1103\" data-watermark=\"watermark\" data-original-src=\"v2-25a4ecb92f7b2143ca996dcf99e0ffe0\" data-watermark-src=\"v2-b61f809d0d60089346ef5fafd5c18eb4\" data-private-watermark-src=\"v2-c4380c0f9074e435e4c18a37cc29292b\"></p>\n<p data-pid=\"3mApi5wt\">其实作品因为杂志原因腰斩，前面作者埋下的伏笔还没来及收就结束了</p>\n<p data-pid=\"GkakAu-a\">比如小雪原来是吴争的初恋这设定，因此我猜作者肯定想弄个三角恋的桥段，可惜没能展开</p>\n<p><img src=\"https://pica.zhimg.com/v2-7a166468ae26bb4f92b01e2705a2bc76_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"2286\" data-watermark=\"watermark\" data-original-src=\"v2-7a166468ae26bb4f92b01e2705a2bc76\" data-watermark-src=\"v2-4e551236e9f0f2dac51f8b172d829411\" data-private-watermark-src=\"v2-b0fdb9e90f2b4ba54b5f8545a1073b91\"></p>\n<p data-pid=\"h5Dss1A3\">还有这两个戏份不多，一看就是关键对手的角色，明显就是为了全国大赛而铺垫的，我连名字都不记得了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ace3306e033c051006f801b35c28d2a0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1809\" data-watermark=\"watermark\" data-original-src=\"v2-ace3306e033c051006f801b35c28d2a0\" data-watermark-src=\"v2-eb3979344e535381a891e0b85ef565d1\" data-private-watermark-src=\"v2-27fe085bb32cc5206c0ad870d1486c63\"></p>\n<hr>\n<p><img src=\"https://pic3.zhimg.com/v2-a540f17e27c6c5a0600a8a8325d16e82_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1741\" data-watermark=\"watermark\" data-original-src=\"v2-a540f17e27c6c5a0600a8a8325d16e82\" data-watermark-src=\"v2-97177cce4f5d3de7864aead7780ee468\" data-private-watermark-src=\"v2-9912f6564732665a1cf83261a6e054a6\"></p>\n<p data-pid=\"ehC9oQTT\">最后，说回这部作品，即便最后烂尾，但是前期的高质量依旧值得一读，关于梦想的描绘，关于拳击的推广，关于教育的批判以及对人生的选择。都功不可没。</p>\n<p data-pid=\"E_-5idLZ\">正如结尾所说</p>\n<h3>梦想的味道，是苦的，但是品尝苦涩过后。人生，才不会遗憾！</h3>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bin-di-47-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">彬帝</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/55636857?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么孙渣的画工这么差，漫画却很火？</a><br><a href=\"http://www.zhihu.com/question/24432613?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">妹子是如何看待孙渣漫画的？</a><br>\n","link":"http://www.zhihu.com/question/518695974/answer/2610832574?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]